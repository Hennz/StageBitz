//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Codes_CodeHeaders", "CodeHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.CodeHeader), "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Code), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Companies_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Company), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "CompanyPaymentPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyPaymentPackage), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_Codes1", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Code), "CompanyPaymentPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyPaymentPackage), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyUserRole_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "CompanyUserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyUserRole), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_EmailTemplates_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "EmailTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.EmailTemplate), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Invitations_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "Invitation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Invitation), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Invitations_Codes2", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "Invitation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Invitation), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_InvitationUserRole_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "InvitationUserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.InvitationUserRole), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Invoices_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Invoice), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Invoices_Status", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Invoice), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBriefs_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "ItemBrief", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBrief), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBriefTasks_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "ItemBriefTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBriefTask), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBriefTypes_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "ItemBriefType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBriefType), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_PaymentPackageTypes_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "PaymentPackageType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.PaymentPackageType), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectStatusHistory_Codes_Current", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "ProjectStatusHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectStatusHistory), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectUsers_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "ProjectUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectUser), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_SystemTasks_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "SystemTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.SystemTask), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Transactions_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Code), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Transaction), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Users_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.User), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ViewSettings_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "ViewSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ViewSetting), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ViewSettings_Codes1", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "ViewSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ViewSetting), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Companies_Countries", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Country), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Company), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyDiscountNotificatonHistory_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "CompanyDiscountNotificatonHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyDiscountNotificatonHistory), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyPackages_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "CompanyPaymentPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyPaymentPackage), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "CompanyPaymentSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyPaymentSummary), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanySharingDetails_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "CompanyInventorySharingDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyInventorySharingDetail), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanySharingDetails_Companies1", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "CompanyInventorySharingDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyInventorySharingDetail), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyUsers_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "CompanyUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyUser), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_DiscountCodeUsage_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "DiscountCodeUsage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.DiscountCodeUsage), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_InventoryManagerSentEmails_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "InventoryManagerSentEmail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.InventoryManagerSentEmail), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Projects_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Project), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_RemovedWatchListItemsNotifications_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "RemovedWatchListItemsNotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.RemovedWatchListItemsNotification), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_RemovedWatchListItemsNotifications_Companies1", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "RemovedWatchListItemsNotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.RemovedWatchListItemsNotification), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_WatchListHeader_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "WatchListHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.WatchListHeader), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_PaymentPackageTypes", "PaymentPackageType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.PaymentPackageType), "CompanyPaymentPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyPaymentPackage), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_PaymentPackageTypes1", "PaymentPackageType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.PaymentPackageType), "CompanyPaymentPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyPaymentPackage), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_CompanyPaymentPackages", "CompanyPaymentPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.CompanyPaymentPackage), "CompanyPaymentSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyPaymentSummary), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_DiscountCodeUsage", "DiscountCodeUsage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.DiscountCodeUsage), "CompanyPaymentSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyPaymentSummary), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_Invoices", "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Invoice), "CompanyPaymentSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyPaymentSummary), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyUserRole_CompanyUsers", "CompanyUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.CompanyUser), "CompanyUserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyUserRole), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyUsers_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "CompanyUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyUser), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Projects_Countries", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Country), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Project), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Users_Countries", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Country), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.User), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_PaymentLogs_CreditCardTokens", "CreditCardToken", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.CreditCardToken), "PaymentLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.PaymentLog), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_DiscountCodeUsage_DiscountCodes", "DiscountCode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.DiscountCode), "DiscountCodeUsage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.DiscountCodeUsage), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_InventoryMobileDocumentMedia_InventoryMobileDocumentMedia", "DocumentMedia", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.DocumentMedia), "InventoryMobileDocumentMedia", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.InventoryMobileDocumentMedia), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBriefItemDocumentMedia_DocumentMedia", "DocumentMedia", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.DocumentMedia), "ItemBriefItemDocumentMedia", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBriefItemDocumentMedia), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_EmailChangeRequests_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "EmailChangeRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.EmailChangeRequest), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_InventoryManagerSentEmails_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "InventoryManagerSentEmail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.InventoryManagerSentEmail), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_InventoryPackageDetails_PaymentPackageTypes", "PaymentPackageType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.PaymentPackageType), "InventoryPaymentPackageDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.InventoryPaymentPackageDetail), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Invitations_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "Invitation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Invitation), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_InvitationUserRole_Invitations", "Invitation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Invitation), "InvitationUserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.InvitationUserRole), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Invoices_Transactions", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Transaction), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Invoice), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Invoices_Transactions_Reversal", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Transaction), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Invoice), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBriefs_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Project), "ItemBrief", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBrief), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBriefTasks_ItemBriefs", "ItemBrief", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemBrief), "ItemBriefTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBriefTask), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBriefTypes_ItemBriefTypes", "ItemBrief", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemBrief), "ItemBriefType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBriefType), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBriefValues_ItemBriefs", "ItemBrief", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemBrief), "ItemBriefValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBriefValue), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_TaskListsItemBriefTasks_ItemBriefTasks", "ItemBriefTask", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemBriefTask), "TaskListsItemBriefTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.TaskListsItemBriefTask), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBriefTypes_ItemTypes", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemType), "ItemBriefType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBriefType), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemTypeField_ItemTypes", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemType), "ItemTypeField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemTypeField), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemTypeHtml_ItemTypes", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemType), "ItemTypeHtml", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemTypeHtml), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectItemTypes_ItemTypes", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemType), "ProjectItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectItemType), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_UserLastVisitedtItemTypes_ItemTypes", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemType), "UserLastVisitedtItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.UserLastVisitedtItemType), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_TransactionLines_MasterChart", "MasterChart", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.MasterChart), "TransactionLine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.TransactionLine), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Notifications_Notifications", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Project), "Notification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Notification), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectPaymentPackageDetailIs_PaymentPackageTypes", "PaymentPackageType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.PaymentPackageType), "ProjectPaymentPackageDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectPaymentPackageDetail), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectArchives_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Project), "ProjectArchive", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectArchive), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectArchives_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "ProjectArchive", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectArchive), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectEvents_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Project), "ProjectEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectEvent), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectItemTypes_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Project), "ProjectItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectItemType), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectLocations_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Project), "ProjectLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectLocation), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectStatusHistory_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Project), "ProjectStatusHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectStatusHistory), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectUsers_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Project), "ProjectUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectUser), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_TaskLists_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Project), "TaskList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.TaskList), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_UserLastVisitedtItemTypes_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Project), "UserLastVisitedtItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.UserLastVisitedtItemType), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ProjectUsers_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "ProjectUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ProjectUser), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Receipts_Transactions", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Transaction), "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Receipt), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Receipts_Transactions1", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Transaction), "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Receipt), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Receipts_Transactions2", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Transaction), "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Receipt), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_RemovedWatchListItemsNotifications_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "RemovedWatchListItemsNotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.RemovedWatchListItemsNotification), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_UserSkills_Skills", "Skill", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Skill), "UserSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.UserSkill), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_TaskListsItemBriefTasks_TaskLists", "TaskList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.TaskList), "TaskListsItemBriefTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.TaskListsItemBriefTask), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_TransactionLines_Transactions", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Transaction), "TransactionLine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.TransactionLine), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_UserLastVisitedtItemTypes_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "UserLastVisitedtItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.UserLastVisitedtItemType), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_UserSkills_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "UserSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.UserSkill), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ViewSettings_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "ViewSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ViewSetting), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_WatchListHeader_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "WatchListHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.WatchListHeader), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_WatchListItems_WatchListHeader", "WatchListHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.WatchListHeader), "WatchListItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.WatchListItem), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_FieldAttributesField_FieldAttributes", "Attribute", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Attribute), "FieldAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.FieldAttribute), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_FieldAttributesField_Fields", "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Field), "FieldAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.FieldAttribute), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Fields_FieldGroups", "FieldGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.FieldGroup), "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Field), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_FieldOptions_Fields", "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Field), "FieldOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.FieldOption), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBriefValues_ItemBriefValues1", "FieldOption", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.FieldOption), "ItemBriefValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBriefValue), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemValues_FieldOptions", "FieldOption", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.FieldOption), "ItemValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemValue), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemVersionHistory_FieldOptions", "FieldOption", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.FieldOption), "ItemVersionHistoryValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemVersionHistoryValue), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Fields_FieldTypes", "FieldType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.FieldType), "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Field), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemVersionHistory", "ItemVersionHistoryValue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemVersionHistoryValue), "ItemVersionHistoryValue1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemVersionHistoryValue), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBriefValues_Fields", "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Field), "ItemBriefValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBriefValue), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemTypeField_Fields", "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Field), "ItemTypeField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemTypeField), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemValues_Fields", "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Field), "ItemValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemValue), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemVersionHistory_Fields", "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Field), "ItemVersionHistoryValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemVersionHistoryValue), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_DailyBookingNotifications_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "DailyBookingNotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.DailyBookingNotification), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBookingStatusHistories_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "ItemBookingStatusHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBookingStatusHistory), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBookingStatusHistories_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.User), "ItemBookingStatusHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBookingStatusHistory), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_NonProjectBookings_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.User), "NonProjectBooking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.NonProjectBooking), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyBookingNumbers_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "CompanyBookingNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyBookingNumber), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyBookingNumbers_Bookings", "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Booking), "CompanyBookingNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyBookingNumber), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_DailyBookingNotifications_Bookings", "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Booking), "DailyBookingNotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.DailyBookingNotification), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_DailyBookingNotifications_CompanyBookingNumbers", "CompanyBookingNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.CompanyBookingNumber), "DailyBookingNotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.DailyBookingNotification), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Items_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Company), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Item), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_InventoryMobileItems_Items", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Item), "InventoryMobileItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.InventoryMobileItem), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemArchive_Items", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Item), "ItemArchive", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemArchive), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBookings_Items", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Item), "ItemBooking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBooking), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBookingStatusHistories_ItemBookingStatusHistories", "ItemBooking", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemBooking), "ItemBookingStatusHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBookingStatusHistory), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Items_ItemTypes", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.ItemType), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Item), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemValues_Items", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Item), "ItemValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemValue), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_WatchListItems_Items", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Item), "WatchListItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.WatchListItem), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Locations_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Company), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Location), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Items_Locations", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Location), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Item), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ParentLocation_Locations", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Location), "Location1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Location), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemBookings", "ItemBooking", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.ItemBooking), "ItemVersionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemVersionHistory), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemBriefs", "ItemBrief", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemBrief), "ItemVersionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemVersionHistory), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemVersionHistory_Items", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Item), "ItemVersionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemVersionHistory), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemTypes", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.ItemType), "ItemVersionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemVersionHistory), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemVersionHistory1", "ItemVersionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.ItemVersionHistory), "ItemVersionHistoryValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemVersionHistoryValue), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_Items_Codes", "Code", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Code), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.Item), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_CompanyUserRole_Locations", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Location), "CompanyUserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.CompanyUserRole), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBookingTimeline_Items", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StageBitz.Data.Item), "ItemBookingTimeline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBookingTimeline), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_InvitationUserRole_Locations", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Location), "InvitationUserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.InvitationUserRole), true)]
[assembly: EdmRelationshipAttribute("StageBitz.Data", "FK_ItemBookings_Bookings", "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StageBitz.Data.Booking), "ItemBooking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StageBitz.Data.ItemBooking), true)]

#endregion

namespace StageBitz.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class StageBitzDB : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new StageBitzDB object using the connection string found in the 'StageBitzDB' section of the application configuration file.
        /// </summary>
        public StageBitzDB() : base("name=StageBitzDB", "StageBitzDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StageBitzDB object.
        /// </summary>
        public StageBitzDB(string connectionString) : base(connectionString, "StageBitzDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StageBitzDB object.
        /// </summary>
        public StageBitzDB(EntityConnection connection) : base(connection, "StageBitzDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CodeHeader> CodeHeaders
        {
            get
            {
                if ((_CodeHeaders == null))
                {
                    _CodeHeaders = base.CreateObjectSet<CodeHeader>("CodeHeaders");
                }
                return _CodeHeaders;
            }
        }
        private ObjectSet<CodeHeader> _CodeHeaders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Code> Codes
        {
            get
            {
                if ((_Codes == null))
                {
                    _Codes = base.CreateObjectSet<Code>("Codes");
                }
                return _Codes;
            }
        }
        private ObjectSet<Code> _Codes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyDiscountNotificatonHistory> CompanyDiscountNotificatonHistories
        {
            get
            {
                if ((_CompanyDiscountNotificatonHistories == null))
                {
                    _CompanyDiscountNotificatonHistories = base.CreateObjectSet<CompanyDiscountNotificatonHistory>("CompanyDiscountNotificatonHistories");
                }
                return _CompanyDiscountNotificatonHistories;
            }
        }
        private ObjectSet<CompanyDiscountNotificatonHistory> _CompanyDiscountNotificatonHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyInventorySharingDetail> CompanyInventorySharingDetails
        {
            get
            {
                if ((_CompanyInventorySharingDetails == null))
                {
                    _CompanyInventorySharingDetails = base.CreateObjectSet<CompanyInventorySharingDetail>("CompanyInventorySharingDetails");
                }
                return _CompanyInventorySharingDetails;
            }
        }
        private ObjectSet<CompanyInventorySharingDetail> _CompanyInventorySharingDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyPaymentPackage> CompanyPaymentPackages
        {
            get
            {
                if ((_CompanyPaymentPackages == null))
                {
                    _CompanyPaymentPackages = base.CreateObjectSet<CompanyPaymentPackage>("CompanyPaymentPackages");
                }
                return _CompanyPaymentPackages;
            }
        }
        private ObjectSet<CompanyPaymentPackage> _CompanyPaymentPackages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyPaymentSummary> CompanyPaymentSummaries
        {
            get
            {
                if ((_CompanyPaymentSummaries == null))
                {
                    _CompanyPaymentSummaries = base.CreateObjectSet<CompanyPaymentSummary>("CompanyPaymentSummaries");
                }
                return _CompanyPaymentSummaries;
            }
        }
        private ObjectSet<CompanyPaymentSummary> _CompanyPaymentSummaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyUserRole> CompanyUserRoles
        {
            get
            {
                if ((_CompanyUserRoles == null))
                {
                    _CompanyUserRoles = base.CreateObjectSet<CompanyUserRole>("CompanyUserRoles");
                }
                return _CompanyUserRoles;
            }
        }
        private ObjectSet<CompanyUserRole> _CompanyUserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyUser> CompanyUsers
        {
            get
            {
                if ((_CompanyUsers == null))
                {
                    _CompanyUsers = base.CreateObjectSet<CompanyUser>("CompanyUsers");
                }
                return _CompanyUsers;
            }
        }
        private ObjectSet<CompanyUser> _CompanyUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CreditCardToken> CreditCardTokens
        {
            get
            {
                if ((_CreditCardTokens == null))
                {
                    _CreditCardTokens = base.CreateObjectSet<CreditCardToken>("CreditCardTokens");
                }
                return _CreditCardTokens;
            }
        }
        private ObjectSet<CreditCardToken> _CreditCardTokens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DiscountCode> DiscountCodes
        {
            get
            {
                if ((_DiscountCodes == null))
                {
                    _DiscountCodes = base.CreateObjectSet<DiscountCode>("DiscountCodes");
                }
                return _DiscountCodes;
            }
        }
        private ObjectSet<DiscountCode> _DiscountCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DiscountCodeUsage> DiscountCodeUsages
        {
            get
            {
                if ((_DiscountCodeUsages == null))
                {
                    _DiscountCodeUsages = base.CreateObjectSet<DiscountCodeUsage>("DiscountCodeUsages");
                }
                return _DiscountCodeUsages;
            }
        }
        private ObjectSet<DiscountCodeUsage> _DiscountCodeUsages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentMedia> DocumentMedias
        {
            get
            {
                if ((_DocumentMedias == null))
                {
                    _DocumentMedias = base.CreateObjectSet<DocumentMedia>("DocumentMedias");
                }
                return _DocumentMedias;
            }
        }
        private ObjectSet<DocumentMedia> _DocumentMedias;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailChangeRequest> EmailChangeRequests
        {
            get
            {
                if ((_EmailChangeRequests == null))
                {
                    _EmailChangeRequests = base.CreateObjectSet<EmailChangeRequest>("EmailChangeRequests");
                }
                return _EmailChangeRequests;
            }
        }
        private ObjectSet<EmailChangeRequest> _EmailChangeRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailTemplate> EmailTemplates
        {
            get
            {
                if ((_EmailTemplates == null))
                {
                    _EmailTemplates = base.CreateObjectSet<EmailTemplate>("EmailTemplates");
                }
                return _EmailTemplates;
            }
        }
        private ObjectSet<EmailTemplate> _EmailTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryManagerSentEmail> InventoryManagerSentEmails
        {
            get
            {
                if ((_InventoryManagerSentEmails == null))
                {
                    _InventoryManagerSentEmails = base.CreateObjectSet<InventoryManagerSentEmail>("InventoryManagerSentEmails");
                }
                return _InventoryManagerSentEmails;
            }
        }
        private ObjectSet<InventoryManagerSentEmail> _InventoryManagerSentEmails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryMobileDocumentMedia> InventoryMobileDocumentMedias
        {
            get
            {
                if ((_InventoryMobileDocumentMedias == null))
                {
                    _InventoryMobileDocumentMedias = base.CreateObjectSet<InventoryMobileDocumentMedia>("InventoryMobileDocumentMedias");
                }
                return _InventoryMobileDocumentMedias;
            }
        }
        private ObjectSet<InventoryMobileDocumentMedia> _InventoryMobileDocumentMedias;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryMobileItem> InventoryMobileItems
        {
            get
            {
                if ((_InventoryMobileItems == null))
                {
                    _InventoryMobileItems = base.CreateObjectSet<InventoryMobileItem>("InventoryMobileItems");
                }
                return _InventoryMobileItems;
            }
        }
        private ObjectSet<InventoryMobileItem> _InventoryMobileItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryPaymentPackageDetail> InventoryPaymentPackageDetails
        {
            get
            {
                if ((_InventoryPaymentPackageDetails == null))
                {
                    _InventoryPaymentPackageDetails = base.CreateObjectSet<InventoryPaymentPackageDetail>("InventoryPaymentPackageDetails");
                }
                return _InventoryPaymentPackageDetails;
            }
        }
        private ObjectSet<InventoryPaymentPackageDetail> _InventoryPaymentPackageDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invitation> Invitations
        {
            get
            {
                if ((_Invitations == null))
                {
                    _Invitations = base.CreateObjectSet<Invitation>("Invitations");
                }
                return _Invitations;
            }
        }
        private ObjectSet<Invitation> _Invitations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvitationUserRole> InvitationUserRoles
        {
            get
            {
                if ((_InvitationUserRoles == null))
                {
                    _InvitationUserRoles = base.CreateObjectSet<InvitationUserRole>("InvitationUserRoles");
                }
                return _InvitationUserRoles;
            }
        }
        private ObjectSet<InvitationUserRole> _InvitationUserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Invoice>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Invoice> _Invoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemArchive> ItemArchives
        {
            get
            {
                if ((_ItemArchives == null))
                {
                    _ItemArchives = base.CreateObjectSet<ItemArchive>("ItemArchives");
                }
                return _ItemArchives;
            }
        }
        private ObjectSet<ItemArchive> _ItemArchives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemBriefItemDocumentMedia> ItemBriefItemDocumentMedias
        {
            get
            {
                if ((_ItemBriefItemDocumentMedias == null))
                {
                    _ItemBriefItemDocumentMedias = base.CreateObjectSet<ItemBriefItemDocumentMedia>("ItemBriefItemDocumentMedias");
                }
                return _ItemBriefItemDocumentMedias;
            }
        }
        private ObjectSet<ItemBriefItemDocumentMedia> _ItemBriefItemDocumentMedias;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemBrief> ItemBriefs
        {
            get
            {
                if ((_ItemBriefs == null))
                {
                    _ItemBriefs = base.CreateObjectSet<ItemBrief>("ItemBriefs");
                }
                return _ItemBriefs;
            }
        }
        private ObjectSet<ItemBrief> _ItemBriefs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemBriefTask> ItemBriefTasks
        {
            get
            {
                if ((_ItemBriefTasks == null))
                {
                    _ItemBriefTasks = base.CreateObjectSet<ItemBriefTask>("ItemBriefTasks");
                }
                return _ItemBriefTasks;
            }
        }
        private ObjectSet<ItemBriefTask> _ItemBriefTasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemBriefType> ItemBriefTypes
        {
            get
            {
                if ((_ItemBriefTypes == null))
                {
                    _ItemBriefTypes = base.CreateObjectSet<ItemBriefType>("ItemBriefTypes");
                }
                return _ItemBriefTypes;
            }
        }
        private ObjectSet<ItemBriefType> _ItemBriefTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemType> ItemTypes
        {
            get
            {
                if ((_ItemTypes == null))
                {
                    _ItemTypes = base.CreateObjectSet<ItemType>("ItemTypes");
                }
                return _ItemTypes;
            }
        }
        private ObjectSet<ItemType> _ItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterChart> MasterCharts
        {
            get
            {
                if ((_MasterCharts == null))
                {
                    _MasterCharts = base.CreateObjectSet<MasterChart>("MasterCharts");
                }
                return _MasterCharts;
            }
        }
        private ObjectSet<MasterChart> _MasterCharts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Notification> Notifications
        {
            get
            {
                if ((_Notifications == null))
                {
                    _Notifications = base.CreateObjectSet<Notification>("Notifications");
                }
                return _Notifications;
            }
        }
        private ObjectSet<Notification> _Notifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentLog> PaymentLogs
        {
            get
            {
                if ((_PaymentLogs == null))
                {
                    _PaymentLogs = base.CreateObjectSet<PaymentLog>("PaymentLogs");
                }
                return _PaymentLogs;
            }
        }
        private ObjectSet<PaymentLog> _PaymentLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentPackageType> PaymentPackageTypes
        {
            get
            {
                if ((_PaymentPackageTypes == null))
                {
                    _PaymentPackageTypes = base.CreateObjectSet<PaymentPackageType>("PaymentPackageTypes");
                }
                return _PaymentPackageTypes;
            }
        }
        private ObjectSet<PaymentPackageType> _PaymentPackageTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectArchive> ProjectArchives
        {
            get
            {
                if ((_ProjectArchives == null))
                {
                    _ProjectArchives = base.CreateObjectSet<ProjectArchive>("ProjectArchives");
                }
                return _ProjectArchives;
            }
        }
        private ObjectSet<ProjectArchive> _ProjectArchives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectEvent> ProjectEvents
        {
            get
            {
                if ((_ProjectEvents == null))
                {
                    _ProjectEvents = base.CreateObjectSet<ProjectEvent>("ProjectEvents");
                }
                return _ProjectEvents;
            }
        }
        private ObjectSet<ProjectEvent> _ProjectEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectItemType> ProjectItemTypes
        {
            get
            {
                if ((_ProjectItemTypes == null))
                {
                    _ProjectItemTypes = base.CreateObjectSet<ProjectItemType>("ProjectItemTypes");
                }
                return _ProjectItemTypes;
            }
        }
        private ObjectSet<ProjectItemType> _ProjectItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectLocation> ProjectLocations
        {
            get
            {
                if ((_ProjectLocations == null))
                {
                    _ProjectLocations = base.CreateObjectSet<ProjectLocation>("ProjectLocations");
                }
                return _ProjectLocations;
            }
        }
        private ObjectSet<ProjectLocation> _ProjectLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectPaymentPackageDetail> ProjectPaymentPackageDetails
        {
            get
            {
                if ((_ProjectPaymentPackageDetails == null))
                {
                    _ProjectPaymentPackageDetails = base.CreateObjectSet<ProjectPaymentPackageDetail>("ProjectPaymentPackageDetails");
                }
                return _ProjectPaymentPackageDetails;
            }
        }
        private ObjectSet<ProjectPaymentPackageDetail> _ProjectPaymentPackageDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectStatusHistory> ProjectStatusHistories
        {
            get
            {
                if ((_ProjectStatusHistories == null))
                {
                    _ProjectStatusHistories = base.CreateObjectSet<ProjectStatusHistory>("ProjectStatusHistories");
                }
                return _ProjectStatusHistories;
            }
        }
        private ObjectSet<ProjectStatusHistory> _ProjectStatusHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectUser> ProjectUsers
        {
            get
            {
                if ((_ProjectUsers == null))
                {
                    _ProjectUsers = base.CreateObjectSet<ProjectUser>("ProjectUsers");
                }
                return _ProjectUsers;
            }
        }
        private ObjectSet<ProjectUser> _ProjectUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Receipt> Receipts
        {
            get
            {
                if ((_Receipts == null))
                {
                    _Receipts = base.CreateObjectSet<Receipt>("Receipts");
                }
                return _Receipts;
            }
        }
        private ObjectSet<Receipt> _Receipts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RemovedWatchListItemsNotification> RemovedWatchListItemsNotifications
        {
            get
            {
                if ((_RemovedWatchListItemsNotifications == null))
                {
                    _RemovedWatchListItemsNotifications = base.CreateObjectSet<RemovedWatchListItemsNotification>("RemovedWatchListItemsNotifications");
                }
                return _RemovedWatchListItemsNotifications;
            }
        }
        private ObjectSet<RemovedWatchListItemsNotification> _RemovedWatchListItemsNotifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Skill> Skills
        {
            get
            {
                if ((_Skills == null))
                {
                    _Skills = base.CreateObjectSet<Skill>("Skills");
                }
                return _Skills;
            }
        }
        private ObjectSet<Skill> _Skills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemTask> SystemTasks
        {
            get
            {
                if ((_SystemTasks == null))
                {
                    _SystemTasks = base.CreateObjectSet<SystemTask>("SystemTasks");
                }
                return _SystemTasks;
            }
        }
        private ObjectSet<SystemTask> _SystemTasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemValue> SystemValues
        {
            get
            {
                if ((_SystemValues == null))
                {
                    _SystemValues = base.CreateObjectSet<SystemValue>("SystemValues");
                }
                return _SystemValues;
            }
        }
        private ObjectSet<SystemValue> _SystemValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskList> TaskLists
        {
            get
            {
                if ((_TaskLists == null))
                {
                    _TaskLists = base.CreateObjectSet<TaskList>("TaskLists");
                }
                return _TaskLists;
            }
        }
        private ObjectSet<TaskList> _TaskLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskListsItemBriefTask> TaskListsItemBriefTasks
        {
            get
            {
                if ((_TaskListsItemBriefTasks == null))
                {
                    _TaskListsItemBriefTasks = base.CreateObjectSet<TaskListsItemBriefTask>("TaskListsItemBriefTasks");
                }
                return _TaskListsItemBriefTasks;
            }
        }
        private ObjectSet<TaskListsItemBriefTask> _TaskListsItemBriefTasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionLine> TransactionLines
        {
            get
            {
                if ((_TransactionLines == null))
                {
                    _TransactionLines = base.CreateObjectSet<TransactionLine>("TransactionLines");
                }
                return _TransactionLines;
            }
        }
        private ObjectSet<TransactionLine> _TransactionLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserContact> UserContacts
        {
            get
            {
                if ((_UserContacts == null))
                {
                    _UserContacts = base.CreateObjectSet<UserContact>("UserContacts");
                }
                return _UserContacts;
            }
        }
        private ObjectSet<UserContact> _UserContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLastVisitedtItemType> UserLastVisitedtItemTypes
        {
            get
            {
                if ((_UserLastVisitedtItemTypes == null))
                {
                    _UserLastVisitedtItemTypes = base.CreateObjectSet<UserLastVisitedtItemType>("UserLastVisitedtItemTypes");
                }
                return _UserLastVisitedtItemTypes;
            }
        }
        private ObjectSet<UserLastVisitedtItemType> _UserLastVisitedtItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserNotificationSetting> UserNotificationSettings
        {
            get
            {
                if ((_UserNotificationSettings == null))
                {
                    _UserNotificationSettings = base.CreateObjectSet<UserNotificationSetting>("UserNotificationSettings");
                }
                return _UserNotificationSettings;
            }
        }
        private ObjectSet<UserNotificationSetting> _UserNotificationSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSkill> UserSkills
        {
            get
            {
                if ((_UserSkills == null))
                {
                    _UserSkills = base.CreateObjectSet<UserSkill>("UserSkills");
                }
                return _UserSkills;
            }
        }
        private ObjectSet<UserSkill> _UserSkills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ViewSetting> ViewSettings
        {
            get
            {
                if ((_ViewSettings == null))
                {
                    _ViewSettings = base.CreateObjectSet<ViewSetting>("ViewSettings");
                }
                return _ViewSettings;
            }
        }
        private ObjectSet<ViewSetting> _ViewSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WatchListHeader> WatchListHeaders
        {
            get
            {
                if ((_WatchListHeaders == null))
                {
                    _WatchListHeaders = base.CreateObjectSet<WatchListHeader>("WatchListHeaders");
                }
                return _WatchListHeaders;
            }
        }
        private ObjectSet<WatchListHeader> _WatchListHeaders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WatchListItem> WatchListItems
        {
            get
            {
                if ((_WatchListItems == null))
                {
                    _WatchListItems = base.CreateObjectSet<WatchListItem>("WatchListItems");
                }
                return _WatchListItems;
            }
        }
        private ObjectSet<WatchListItem> _WatchListItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attribute> Attributes
        {
            get
            {
                if ((_Attributes == null))
                {
                    _Attributes = base.CreateObjectSet<Attribute>("Attributes");
                }
                return _Attributes;
            }
        }
        private ObjectSet<Attribute> _Attributes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldAttribute> FieldAttributes
        {
            get
            {
                if ((_FieldAttributes == null))
                {
                    _FieldAttributes = base.CreateObjectSet<FieldAttribute>("FieldAttributes");
                }
                return _FieldAttributes;
            }
        }
        private ObjectSet<FieldAttribute> _FieldAttributes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldGroup> FieldGroups
        {
            get
            {
                if ((_FieldGroups == null))
                {
                    _FieldGroups = base.CreateObjectSet<FieldGroup>("FieldGroups");
                }
                return _FieldGroups;
            }
        }
        private ObjectSet<FieldGroup> _FieldGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldOption> FieldOptions
        {
            get
            {
                if ((_FieldOptions == null))
                {
                    _FieldOptions = base.CreateObjectSet<FieldOption>("FieldOptions");
                }
                return _FieldOptions;
            }
        }
        private ObjectSet<FieldOption> _FieldOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Field> Fields
        {
            get
            {
                if ((_Fields == null))
                {
                    _Fields = base.CreateObjectSet<Field>("Fields");
                }
                return _Fields;
            }
        }
        private ObjectSet<Field> _Fields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldType> FieldTypes
        {
            get
            {
                if ((_FieldTypes == null))
                {
                    _FieldTypes = base.CreateObjectSet<FieldType>("FieldTypes");
                }
                return _FieldTypes;
            }
        }
        private ObjectSet<FieldType> _FieldTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemBriefValue> ItemBriefValues
        {
            get
            {
                if ((_ItemBriefValues == null))
                {
                    _ItemBriefValues = base.CreateObjectSet<ItemBriefValue>("ItemBriefValues");
                }
                return _ItemBriefValues;
            }
        }
        private ObjectSet<ItemBriefValue> _ItemBriefValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemTypeField> ItemTypeFields
        {
            get
            {
                if ((_ItemTypeFields == null))
                {
                    _ItemTypeFields = base.CreateObjectSet<ItemTypeField>("ItemTypeFields");
                }
                return _ItemTypeFields;
            }
        }
        private ObjectSet<ItemTypeField> _ItemTypeFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemTypeHtml> ItemTypeHtmls
        {
            get
            {
                if ((_ItemTypeHtmls == null))
                {
                    _ItemTypeHtmls = base.CreateObjectSet<ItemTypeHtml>("ItemTypeHtmls");
                }
                return _ItemTypeHtmls;
            }
        }
        private ObjectSet<ItemTypeHtml> _ItemTypeHtmls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemValue> ItemValues
        {
            get
            {
                if ((_ItemValues == null))
                {
                    _ItemValues = base.CreateObjectSet<ItemValue>("ItemValues");
                }
                return _ItemValues;
            }
        }
        private ObjectSet<ItemValue> _ItemValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemVersionHistoryValue> ItemVersionHistoryValues
        {
            get
            {
                if ((_ItemVersionHistoryValues == null))
                {
                    _ItemVersionHistoryValues = base.CreateObjectSet<ItemVersionHistoryValue>("ItemVersionHistoryValues");
                }
                return _ItemVersionHistoryValues;
            }
        }
        private ObjectSet<ItemVersionHistoryValue> _ItemVersionHistoryValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DailyBookingNotification> DailyBookingNotifications
        {
            get
            {
                if ((_DailyBookingNotifications == null))
                {
                    _DailyBookingNotifications = base.CreateObjectSet<DailyBookingNotification>("DailyBookingNotifications");
                }
                return _DailyBookingNotifications;
            }
        }
        private ObjectSet<DailyBookingNotification> _DailyBookingNotifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailHistory> EmailHistories
        {
            get
            {
                if ((_EmailHistories == null))
                {
                    _EmailHistories = base.CreateObjectSet<EmailHistory>("EmailHistories");
                }
                return _EmailHistories;
            }
        }
        private ObjectSet<EmailHistory> _EmailHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemBookingStatusHistory> ItemBookingStatusHistories
        {
            get
            {
                if ((_ItemBookingStatusHistories == null))
                {
                    _ItemBookingStatusHistories = base.CreateObjectSet<ItemBookingStatusHistory>("ItemBookingStatusHistories");
                }
                return _ItemBookingStatusHistories;
            }
        }
        private ObjectSet<ItemBookingStatusHistory> _ItemBookingStatusHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Email> Emails
        {
            get
            {
                if ((_Emails == null))
                {
                    _Emails = base.CreateObjectSet<Email>("Emails");
                }
                return _Emails;
            }
        }
        private ObjectSet<Email> _Emails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryActivity> InventoryActivities
        {
            get
            {
                if ((_InventoryActivities == null))
                {
                    _InventoryActivities = base.CreateObjectSet<InventoryActivity>("InventoryActivities");
                }
                return _InventoryActivities;
            }
        }
        private ObjectSet<InventoryActivity> _InventoryActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NonProjectBooking> NonProjectBookings
        {
            get
            {
                if ((_NonProjectBookings == null))
                {
                    _NonProjectBookings = base.CreateObjectSet<NonProjectBooking>("NonProjectBookings");
                }
                return _NonProjectBookings;
            }
        }
        private ObjectSet<NonProjectBooking> _NonProjectBookings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyBookingNumber> CompanyBookingNumbers
        {
            get
            {
                if ((_CompanyBookingNumbers == null))
                {
                    _CompanyBookingNumbers = base.CreateObjectSet<CompanyBookingNumber>("CompanyBookingNumbers");
                }
                return _CompanyBookingNumbers;
            }
        }
        private ObjectSet<CompanyBookingNumber> _CompanyBookingNumbers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Booking> Bookings
        {
            get
            {
                if ((_Bookings == null))
                {
                    _Bookings = base.CreateObjectSet<Booking>("Bookings");
                }
                return _Bookings;
            }
        }
        private ObjectSet<Booking> _Bookings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExportFile> ExportFiles
        {
            get
            {
                if ((_ExportFiles == null))
                {
                    _ExportFiles = base.CreateObjectSet<ExportFile>("ExportFiles");
                }
                return _ExportFiles;
            }
        }
        private ObjectSet<ExportFile> _ExportFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemBooking> ItemBookings
        {
            get
            {
                if ((_ItemBookings == null))
                {
                    _ItemBookings = base.CreateObjectSet<ItemBooking>("ItemBookings");
                }
                return _ItemBookings;
            }
        }
        private ObjectSet<ItemBooking> _ItemBookings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemVersionHistory> ItemVersionHistories
        {
            get
            {
                if ((_ItemVersionHistories == null))
                {
                    _ItemVersionHistories = base.CreateObjectSet<ItemVersionHistory>("ItemVersionHistories");
                }
                return _ItemVersionHistories;
            }
        }
        private ObjectSet<ItemVersionHistory> _ItemVersionHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemBookingTimeline> ItemBookingTimelines
        {
            get
            {
                if ((_ItemBookingTimelines == null))
                {
                    _ItemBookingTimelines = base.CreateObjectSet<ItemBookingTimeline>("ItemBookingTimelines");
                }
                return _ItemBookingTimelines;
            }
        }
        private ObjectSet<ItemBookingTimeline> _ItemBookingTimelines;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CodeHeaders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCodeHeaders(CodeHeader codeHeader)
        {
            base.AddObject("CodeHeaders", codeHeader);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Codes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCodes(Code code)
        {
            base.AddObject("Codes", code);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyDiscountNotificatonHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyDiscountNotificatonHistories(CompanyDiscountNotificatonHistory companyDiscountNotificatonHistory)
        {
            base.AddObject("CompanyDiscountNotificatonHistories", companyDiscountNotificatonHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyInventorySharingDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyInventorySharingDetails(CompanyInventorySharingDetail companyInventorySharingDetail)
        {
            base.AddObject("CompanyInventorySharingDetails", companyInventorySharingDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyPaymentPackages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyPaymentPackages(CompanyPaymentPackage companyPaymentPackage)
        {
            base.AddObject("CompanyPaymentPackages", companyPaymentPackage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyPaymentSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyPaymentSummaries(CompanyPaymentSummary companyPaymentSummary)
        {
            base.AddObject("CompanyPaymentSummaries", companyPaymentSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyUserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyUserRoles(CompanyUserRole companyUserRole)
        {
            base.AddObject("CompanyUserRoles", companyUserRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyUsers(CompanyUser companyUser)
        {
            base.AddObject("CompanyUsers", companyUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CreditCardTokens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCreditCardTokens(CreditCardToken creditCardToken)
        {
            base.AddObject("CreditCardTokens", creditCardToken);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DiscountCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiscountCodes(DiscountCode discountCode)
        {
            base.AddObject("DiscountCodes", discountCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DiscountCodeUsages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiscountCodeUsages(DiscountCodeUsage discountCodeUsage)
        {
            base.AddObject("DiscountCodeUsages", discountCodeUsage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentMedias EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentMedias(DocumentMedia documentMedia)
        {
            base.AddObject("DocumentMedias", documentMedia);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailChangeRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailChangeRequests(EmailChangeRequest emailChangeRequest)
        {
            base.AddObject("EmailChangeRequests", emailChangeRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailTemplates(EmailTemplate emailTemplate)
        {
            base.AddObject("EmailTemplates", emailTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryManagerSentEmails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryManagerSentEmails(InventoryManagerSentEmail inventoryManagerSentEmail)
        {
            base.AddObject("InventoryManagerSentEmails", inventoryManagerSentEmail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryMobileDocumentMedias EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryMobileDocumentMedias(InventoryMobileDocumentMedia inventoryMobileDocumentMedia)
        {
            base.AddObject("InventoryMobileDocumentMedias", inventoryMobileDocumentMedia);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryMobileItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryMobileItems(InventoryMobileItem inventoryMobileItem)
        {
            base.AddObject("InventoryMobileItems", inventoryMobileItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryPaymentPackageDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryPaymentPackageDetails(InventoryPaymentPackageDetail inventoryPaymentPackageDetail)
        {
            base.AddObject("InventoryPaymentPackageDetails", inventoryPaymentPackageDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invitations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvitations(Invitation invitation)
        {
            base.AddObject("Invitations", invitation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvitationUserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvitationUserRoles(InvitationUserRole invitationUserRole)
        {
            base.AddObject("InvitationUserRoles", invitationUserRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoices(Invoice invoice)
        {
            base.AddObject("Invoices", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemArchives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemArchives(ItemArchive itemArchive)
        {
            base.AddObject("ItemArchives", itemArchive);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemBriefItemDocumentMedias EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemBriefItemDocumentMedias(ItemBriefItemDocumentMedia itemBriefItemDocumentMedia)
        {
            base.AddObject("ItemBriefItemDocumentMedias", itemBriefItemDocumentMedia);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemBriefs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemBriefs(ItemBrief itemBrief)
        {
            base.AddObject("ItemBriefs", itemBrief);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemBriefTasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemBriefTasks(ItemBriefTask itemBriefTask)
        {
            base.AddObject("ItemBriefTasks", itemBriefTask);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemBriefTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemBriefTypes(ItemBriefType itemBriefType)
        {
            base.AddObject("ItemBriefTypes", itemBriefType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemTypes(ItemType itemType)
        {
            base.AddObject("ItemTypes", itemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterCharts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterCharts(MasterChart masterChart)
        {
            base.AddObject("MasterCharts", masterChart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotifications(Notification notification)
        {
            base.AddObject("Notifications", notification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentLogs(PaymentLog paymentLog)
        {
            base.AddObject("PaymentLogs", paymentLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentPackageTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentPackageTypes(PaymentPackageType paymentPackageType)
        {
            base.AddObject("PaymentPackageTypes", paymentPackageType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectArchives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectArchives(ProjectArchive projectArchive)
        {
            base.AddObject("ProjectArchives", projectArchive);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectEvents(ProjectEvent projectEvent)
        {
            base.AddObject("ProjectEvents", projectEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectItemTypes(ProjectItemType projectItemType)
        {
            base.AddObject("ProjectItemTypes", projectItemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectLocations(ProjectLocation projectLocation)
        {
            base.AddObject("ProjectLocations", projectLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectPaymentPackageDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectPaymentPackageDetails(ProjectPaymentPackageDetail projectPaymentPackageDetail)
        {
            base.AddObject("ProjectPaymentPackageDetails", projectPaymentPackageDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectStatusHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectStatusHistories(ProjectStatusHistory projectStatusHistory)
        {
            base.AddObject("ProjectStatusHistories", projectStatusHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectUsers(ProjectUser projectUser)
        {
            base.AddObject("ProjectUsers", projectUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Receipts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceipts(Receipt receipt)
        {
            base.AddObject("Receipts", receipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RemovedWatchListItemsNotifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRemovedWatchListItemsNotifications(RemovedWatchListItemsNotification removedWatchListItemsNotification)
        {
            base.AddObject("RemovedWatchListItemsNotifications", removedWatchListItemsNotification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Skills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSkills(Skill skill)
        {
            base.AddObject("Skills", skill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemTasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemTasks(SystemTask systemTask)
        {
            base.AddObject("SystemTasks", systemTask);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemValues(SystemValue systemValue)
        {
            base.AddObject("SystemValues", systemValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskLists(TaskList taskList)
        {
            base.AddObject("TaskLists", taskList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskListsItemBriefTasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskListsItemBriefTasks(TaskListsItemBriefTask taskListsItemBriefTask)
        {
            base.AddObject("TaskListsItemBriefTasks", taskListsItemBriefTask);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionLines(TransactionLine transactionLine)
        {
            base.AddObject("TransactionLines", transactionLine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserContacts(UserContact userContact)
        {
            base.AddObject("UserContacts", userContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserLastVisitedtItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserLastVisitedtItemTypes(UserLastVisitedtItemType userLastVisitedtItemType)
        {
            base.AddObject("UserLastVisitedtItemTypes", userLastVisitedtItemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserNotificationSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserNotificationSettings(UserNotificationSetting userNotificationSetting)
        {
            base.AddObject("UserNotificationSettings", userNotificationSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSkills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSkills(UserSkill userSkill)
        {
            base.AddObject("UserSkills", userSkill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ViewSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToViewSettings(ViewSetting viewSetting)
        {
            base.AddObject("ViewSettings", viewSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WatchListHeaders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWatchListHeaders(WatchListHeader watchListHeader)
        {
            base.AddObject("WatchListHeaders", watchListHeader);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WatchListItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWatchListItems(WatchListItem watchListItem)
        {
            base.AddObject("WatchListItems", watchListItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attributes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttributes(Attribute attribute)
        {
            base.AddObject("Attributes", attribute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldAttributes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldAttributes(FieldAttribute fieldAttribute)
        {
            base.AddObject("FieldAttributes", fieldAttribute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldGroups(FieldGroup fieldGroup)
        {
            base.AddObject("FieldGroups", fieldGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldOptions(FieldOption fieldOption)
        {
            base.AddObject("FieldOptions", fieldOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFields(Field field)
        {
            base.AddObject("Fields", field);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldTypes(FieldType fieldType)
        {
            base.AddObject("FieldTypes", fieldType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemBriefValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemBriefValues(ItemBriefValue itemBriefValue)
        {
            base.AddObject("ItemBriefValues", itemBriefValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemTypeFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemTypeFields(ItemTypeField itemTypeField)
        {
            base.AddObject("ItemTypeFields", itemTypeField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemTypeHtmls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemTypeHtmls(ItemTypeHtml itemTypeHtml)
        {
            base.AddObject("ItemTypeHtmls", itemTypeHtml);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemValues(ItemValue itemValue)
        {
            base.AddObject("ItemValues", itemValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemVersionHistoryValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemVersionHistoryValues(ItemVersionHistoryValue itemVersionHistoryValue)
        {
            base.AddObject("ItemVersionHistoryValues", itemVersionHistoryValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DailyBookingNotifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDailyBookingNotifications(DailyBookingNotification dailyBookingNotification)
        {
            base.AddObject("DailyBookingNotifications", dailyBookingNotification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailHistories(EmailHistory emailHistory)
        {
            base.AddObject("EmailHistories", emailHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemBookingStatusHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemBookingStatusHistories(ItemBookingStatusHistory itemBookingStatusHistory)
        {
            base.AddObject("ItemBookingStatusHistories", itemBookingStatusHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Emails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmails(Email email)
        {
            base.AddObject("Emails", email);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryActivities(InventoryActivity inventoryActivity)
        {
            base.AddObject("InventoryActivities", inventoryActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NonProjectBookings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNonProjectBookings(NonProjectBooking nonProjectBooking)
        {
            base.AddObject("NonProjectBookings", nonProjectBooking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyBookingNumbers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyBookingNumbers(CompanyBookingNumber companyBookingNumber)
        {
            base.AddObject("CompanyBookingNumbers", companyBookingNumber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bookings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookings(Booking booking)
        {
            base.AddObject("Bookings", booking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExportFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExportFiles(ExportFile exportFile)
        {
            base.AddObject("ExportFiles", exportFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemBookings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemBookings(ItemBooking itemBooking)
        {
            base.AddObject("ItemBookings", itemBooking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemVersionHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemVersionHistories(ItemVersionHistory itemVersionHistory)
        {
            base.AddObject("ItemVersionHistories", itemVersionHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemBookingTimelines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemBookingTimelines(ItemBookingTimeline itemBookingTimeline)
        {
            base.AddObject("ItemBookingTimelines", itemBookingTimeline);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemBriefId">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        public int DeleteItemBrief(Nullable<global::System.Int32> itemBriefId, Nullable<global::System.Int32> userId)
        {
            ObjectParameter itemBriefIdParameter;
            if (itemBriefId.HasValue)
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", itemBriefId);
            }
            else
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", typeof(global::System.Int32));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteItemBrief", itemBriefIdParameter, userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemBriefId">No Metadata Documentation available.</param>
        /// <param name="documentMediaId">No Metadata Documentation available.</param>
        public int DeleteItemBriefImage(Nullable<global::System.Int32> itemBriefId, Nullable<global::System.Int32> documentMediaId)
        {
            ObjectParameter itemBriefIdParameter;
            if (itemBriefId.HasValue)
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", itemBriefId);
            }
            else
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", typeof(global::System.Int32));
            }
    
            ObjectParameter documentMediaIdParameter;
            if (documentMediaId.HasValue)
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", documentMediaId);
            }
            else
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteItemBriefImage", itemBriefIdParameter, documentMediaIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemBriefId">No Metadata Documentation available.</param>
        /// <param name="documentMediaId">No Metadata Documentation available.</param>
        public int SetItemBriefDefaultImage(Nullable<global::System.Int32> itemBriefId, Nullable<global::System.Int32> documentMediaId)
        {
            ObjectParameter itemBriefIdParameter;
            if (itemBriefId.HasValue)
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", itemBriefId);
            }
            else
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", typeof(global::System.Int32));
            }
    
            ObjectParameter documentMediaIdParameter;
            if (documentMediaId.HasValue)
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", documentMediaId);
            }
            else
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SetItemBriefDefaultImage", itemBriefIdParameter, documentMediaIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemBriefId">No Metadata Documentation available.</param>
        /// <param name="itemId">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="documentMediaIds">No Metadata Documentation available.</param>
        /// <param name="thumbnailImageId">No Metadata Documentation available.</param>
        /// <param name="shouldItemHidden">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> CompleteItemBrief(Nullable<global::System.Int32> itemBriefId, Nullable<global::System.Int32> itemId, Nullable<global::System.Int32> userID, global::System.String documentMediaIds, Nullable<global::System.Int32> thumbnailImageId, Nullable<global::System.Boolean> shouldItemHidden)
        {
            ObjectParameter itemBriefIdParameter;
            if (itemBriefId.HasValue)
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", itemBriefId);
            }
            else
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", typeof(global::System.Int32));
            }
    
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Int32));
            }
    
            ObjectParameter documentMediaIdsParameter;
            if (documentMediaIds != null)
            {
                documentMediaIdsParameter = new ObjectParameter("documentMediaIds", documentMediaIds);
            }
            else
            {
                documentMediaIdsParameter = new ObjectParameter("documentMediaIds", typeof(global::System.String));
            }
    
            ObjectParameter thumbnailImageIdParameter;
            if (thumbnailImageId.HasValue)
            {
                thumbnailImageIdParameter = new ObjectParameter("thumbnailImageId", thumbnailImageId);
            }
            else
            {
                thumbnailImageIdParameter = new ObjectParameter("thumbnailImageId", typeof(global::System.Int32));
            }
    
            ObjectParameter shouldItemHiddenParameter;
            if (shouldItemHidden.HasValue)
            {
                shouldItemHiddenParameter = new ObjectParameter("ShouldItemHidden", shouldItemHidden);
            }
            else
            {
                shouldItemHiddenParameter = new ObjectParameter("ShouldItemHidden", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("CompleteItemBrief", itemBriefIdParameter, itemIdParameter, userIDParameter, documentMediaIdsParameter, thumbnailImageIdParameter, shouldItemHiddenParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="documentMediaId">No Metadata Documentation available.</param>
        public int DeleteDocumentMedia(Nullable<global::System.Int32> documentMediaId)
        {
            ObjectParameter documentMediaIdParameter;
            if (documentMediaId.HasValue)
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", documentMediaId);
            }
            else
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteDocumentMedia", documentMediaIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="relatedTable">No Metadata Documentation available.</param>
        public int DeleteUnusedDocumentMedia(global::System.String relatedTable)
        {
            ObjectParameter relatedTableParameter;
            if (relatedTable != null)
            {
                relatedTableParameter = new ObjectParameter("RelatedTable", relatedTable);
            }
            else
            {
                relatedTableParameter = new ObjectParameter("RelatedTable", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("DeleteUnusedDocumentMedia", relatedTableParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="safetyPhrase">No Metadata Documentation available.</param>
        /// <param name="systemDate">No Metadata Documentation available.</param>
        public int ClearFinancialData(global::System.String safetyPhrase, Nullable<global::System.DateTime> systemDate)
        {
            ObjectParameter safetyPhraseParameter;
            if (safetyPhrase != null)
            {
                safetyPhraseParameter = new ObjectParameter("SafetyPhrase", safetyPhrase);
            }
            else
            {
                safetyPhraseParameter = new ObjectParameter("SafetyPhrase", typeof(global::System.String));
            }
    
            ObjectParameter systemDateParameter;
            if (systemDate.HasValue)
            {
                systemDateParameter = new ObjectParameter("SystemDate", systemDate);
            }
            else
            {
                systemDateParameter = new ObjectParameter("SystemDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("ClearFinancialData", safetyPhraseParameter, systemDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemId">No Metadata Documentation available.</param>
        /// <param name="documentMediaId">No Metadata Documentation available.</param>
        public int SetItemDefaultImage(Nullable<global::System.Int32> itemId, Nullable<global::System.Int32> documentMediaId)
        {
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            ObjectParameter documentMediaIdParameter;
            if (documentMediaId.HasValue)
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", documentMediaId);
            }
            else
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SetItemDefaultImage", itemIdParameter, documentMediaIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sourceDocumentMediaId">No Metadata Documentation available.</param>
        /// <param name="relatedTableName">No Metadata Documentation available.</param>
        /// <param name="relatedId">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public int CopyMediaFiles(Nullable<global::System.Int32> sourceDocumentMediaId, global::System.String relatedTableName, Nullable<global::System.Int32> relatedId, Nullable<global::System.Int32> userID)
        {
            ObjectParameter sourceDocumentMediaIdParameter;
            if (sourceDocumentMediaId.HasValue)
            {
                sourceDocumentMediaIdParameter = new ObjectParameter("SourceDocumentMediaId", sourceDocumentMediaId);
            }
            else
            {
                sourceDocumentMediaIdParameter = new ObjectParameter("SourceDocumentMediaId", typeof(global::System.Int32));
            }
    
            ObjectParameter relatedTableNameParameter;
            if (relatedTableName != null)
            {
                relatedTableNameParameter = new ObjectParameter("RelatedTableName", relatedTableName);
            }
            else
            {
                relatedTableNameParameter = new ObjectParameter("RelatedTableName", typeof(global::System.String));
            }
    
            ObjectParameter relatedIdParameter;
            if (relatedId.HasValue)
            {
                relatedIdParameter = new ObjectParameter("RelatedId", relatedId);
            }
            else
            {
                relatedIdParameter = new ObjectParameter("RelatedId", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("CopyMediaFiles", sourceDocumentMediaIdParameter, relatedTableNameParameter, relatedIdParameter, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemBriefItemDocumentMediaId">No Metadata Documentation available.</param>
        /// <param name="itemBriefDocumentMediaId">No Metadata Documentation available.</param>
        public int DeleteDocumentMediaFromItemBriefItem(Nullable<global::System.Int32> itemBriefItemDocumentMediaId, Nullable<global::System.Int32> itemBriefDocumentMediaId)
        {
            ObjectParameter itemBriefItemDocumentMediaIdParameter;
            if (itemBriefItemDocumentMediaId.HasValue)
            {
                itemBriefItemDocumentMediaIdParameter = new ObjectParameter("ItemBriefItemDocumentMediaId", itemBriefItemDocumentMediaId);
            }
            else
            {
                itemBriefItemDocumentMediaIdParameter = new ObjectParameter("ItemBriefItemDocumentMediaId", typeof(global::System.Int32));
            }
    
            ObjectParameter itemBriefDocumentMediaIdParameter;
            if (itemBriefDocumentMediaId.HasValue)
            {
                itemBriefDocumentMediaIdParameter = new ObjectParameter("ItemBriefDocumentMediaId", itemBriefDocumentMediaId);
            }
            else
            {
                itemBriefDocumentMediaIdParameter = new ObjectParameter("ItemBriefDocumentMediaId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteDocumentMediaFromItemBriefItem", itemBriefItemDocumentMediaIdParameter, itemBriefDocumentMediaIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="documentMediaId">No Metadata Documentation available.</param>
        public int DeleteItemFiles(Nullable<global::System.Int32> documentMediaId)
        {
            ObjectParameter documentMediaIdParameter;
            if (documentMediaId.HasValue)
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", documentMediaId);
            }
            else
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteItemFiles", documentMediaIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="documentMediaId">No Metadata Documentation available.</param>
        /// <param name="newName">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public int UpdateItemBriefDocumentMediaNameChange(Nullable<global::System.Int32> documentMediaId, global::System.String newName, Nullable<global::System.Int32> userID)
        {
            ObjectParameter documentMediaIdParameter;
            if (documentMediaId.HasValue)
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", documentMediaId);
            }
            else
            {
                documentMediaIdParameter = new ObjectParameter("DocumentMediaId", typeof(global::System.Int32));
            }
    
            ObjectParameter newNameParameter;
            if (newName != null)
            {
                newNameParameter = new ObjectParameter("NewName", newName);
            }
            else
            {
                newNameParameter = new ObjectParameter("NewName", typeof(global::System.String));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateItemBriefDocumentMediaNameChange", documentMediaIdParameter, newNameParameter, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemBriefId">No Metadata Documentation available.</param>
        /// <param name="itemId">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public int BookItem(Nullable<global::System.Int32> itemBriefId, Nullable<global::System.Int32> itemId, Nullable<global::System.Int32> userID)
        {
            ObjectParameter itemBriefIdParameter;
            if (itemBriefId.HasValue)
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", itemBriefId);
            }
            else
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", typeof(global::System.Int32));
            }
    
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("BookItem", itemBriefIdParameter, itemIdParameter, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemBriefId">No Metadata Documentation available.</param>
        /// <param name="isCompleteRemove">No Metadata Documentation available.</param>
        /// <param name="shouldChangeItemBriefStatus">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="shouldCommit">No Metadata Documentation available.</param>
        public int RemoveInUseItemFromItemBrief(Nullable<global::System.Int32> itemBriefId, Nullable<global::System.Boolean> isCompleteRemove, Nullable<global::System.Boolean> shouldChangeItemBriefStatus, Nullable<global::System.Int32> userID, Nullable<global::System.Boolean> shouldCommit)
        {
            ObjectParameter itemBriefIdParameter;
            if (itemBriefId.HasValue)
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", itemBriefId);
            }
            else
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", typeof(global::System.Int32));
            }
    
            ObjectParameter isCompleteRemoveParameter;
            if (isCompleteRemove.HasValue)
            {
                isCompleteRemoveParameter = new ObjectParameter("IsCompleteRemove", isCompleteRemove);
            }
            else
            {
                isCompleteRemoveParameter = new ObjectParameter("IsCompleteRemove", typeof(global::System.Boolean));
            }
    
            ObjectParameter shouldChangeItemBriefStatusParameter;
            if (shouldChangeItemBriefStatus.HasValue)
            {
                shouldChangeItemBriefStatusParameter = new ObjectParameter("ShouldChangeItemBriefStatus", shouldChangeItemBriefStatus);
            }
            else
            {
                shouldChangeItemBriefStatusParameter = new ObjectParameter("ShouldChangeItemBriefStatus", typeof(global::System.Boolean));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Int32));
            }
    
            ObjectParameter shouldCommitParameter;
            if (shouldCommit.HasValue)
            {
                shouldCommitParameter = new ObjectParameter("ShouldCommit", shouldCommit);
            }
            else
            {
                shouldCommitParameter = new ObjectParameter("ShouldCommit", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("RemoveInUseItemFromItemBrief", itemBriefIdParameter, isCompleteRemoveParameter, shouldChangeItemBriefStatusParameter, userIDParameter, shouldCommitParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyId">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        public int DeleteWatchList(Nullable<global::System.Int32> companyId, Nullable<global::System.Int32> userId)
        {
            ObjectParameter companyIdParameter;
            if (companyId.HasValue)
            {
                companyIdParameter = new ObjectParameter("CompanyId", companyId);
            }
            else
            {
                companyIdParameter = new ObjectParameter("CompanyId", typeof(global::System.Int32));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteWatchList", companyIdParameter, userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyUserId">No Metadata Documentation available.</param>
        public int DeleteCompanyUser(Nullable<global::System.Int32> companyUserId)
        {
            ObjectParameter companyUserIdParameter;
            if (companyUserId.HasValue)
            {
                companyUserIdParameter = new ObjectParameter("CompanyUserId", companyUserId);
            }
            else
            {
                companyUserIdParameter = new ObjectParameter("CompanyUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteCompanyUser", companyUserIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invitationId">No Metadata Documentation available.</param>
        public int DeleteInvitation(Nullable<global::System.Int32> invitationId)
        {
            ObjectParameter invitationIdParameter;
            if (invitationId.HasValue)
            {
                invitationIdParameter = new ObjectParameter("InvitationId", invitationId);
            }
            else
            {
                invitationIdParameter = new ObjectParameter("InvitationId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteInvitation", invitationIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyUserId">No Metadata Documentation available.</param>
        public int DeleteCompanyUserRoles(Nullable<global::System.Int32> companyUserId)
        {
            ObjectParameter companyUserIdParameter;
            if (companyUserId.HasValue)
            {
                companyUserIdParameter = new ObjectParameter("CompanyUserId", companyUserId);
            }
            else
            {
                companyUserIdParameter = new ObjectParameter("CompanyUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteCompanyUserRoles", companyUserIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="projectid">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        public int CloseProject(Nullable<global::System.Int32> projectid, Nullable<global::System.Int32> userId)
        {
            ObjectParameter projectidParameter;
            if (projectid.HasValue)
            {
                projectidParameter = new ObjectParameter("Projectid", projectid);
            }
            else
            {
                projectidParameter = new ObjectParameter("Projectid", typeof(global::System.Int32));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("CloseProject", projectidParameter, userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemId">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        public int DeleteItem(Nullable<global::System.Int32> itemId, Nullable<global::System.Int32> userId)
        {
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteItem", itemIdParameter, userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyId">No Metadata Documentation available.</param>
        /// <param name="count">No Metadata Documentation available.</param>
        public int CreateDummyCompanyItems(Nullable<global::System.Int32> companyId, Nullable<global::System.Int32> count)
        {
            ObjectParameter companyIdParameter;
            if (companyId.HasValue)
            {
                companyIdParameter = new ObjectParameter("CompanyId", companyId);
            }
            else
            {
                companyIdParameter = new ObjectParameter("CompanyId", typeof(global::System.Int32));
            }
    
            ObjectParameter countParameter;
            if (count.HasValue)
            {
                countParameter = new ObjectParameter("Count", count);
            }
            else
            {
                countParameter = new ObjectParameter("Count", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("CreateDummyCompanyItems", companyIdParameter, countParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyId">No Metadata Documentation available.</param>
        /// <param name="count">No Metadata Documentation available.</param>
        public int CreateDummyProjectAndCompanyUsers(Nullable<global::System.Int32> companyId, Nullable<global::System.Int32> count)
        {
            ObjectParameter companyIdParameter;
            if (companyId.HasValue)
            {
                companyIdParameter = new ObjectParameter("CompanyId", companyId);
            }
            else
            {
                companyIdParameter = new ObjectParameter("CompanyId", typeof(global::System.Int32));
            }
    
            ObjectParameter countParameter;
            if (count.HasValue)
            {
                countParameter = new ObjectParameter("Count", count);
            }
            else
            {
                countParameter = new ObjectParameter("Count", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("CreateDummyProjectAndCompanyUsers", companyIdParameter, countParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyId">No Metadata Documentation available.</param>
        /// <param name="count">No Metadata Documentation available.</param>
        public int CreateDummyProjects(Nullable<global::System.Int32> companyId, Nullable<global::System.Int32> count)
        {
            ObjectParameter companyIdParameter;
            if (companyId.HasValue)
            {
                companyIdParameter = new ObjectParameter("CompanyId", companyId);
            }
            else
            {
                companyIdParameter = new ObjectParameter("CompanyId", typeof(global::System.Int32));
            }
    
            ObjectParameter countParameter;
            if (count.HasValue)
            {
                countParameter = new ObjectParameter("Count", count);
            }
            else
            {
                countParameter = new ObjectParameter("Count", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("CreateDummyProjects", companyIdParameter, countParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyId">No Metadata Documentation available.</param>
        /// <param name="viewingCompanyId">No Metadata Documentation available.</param>
        public int RemoveInventorySharing(Nullable<global::System.Int32> companyId, Nullable<global::System.Int32> viewingCompanyId)
        {
            ObjectParameter companyIdParameter;
            if (companyId.HasValue)
            {
                companyIdParameter = new ObjectParameter("CompanyId", companyId);
            }
            else
            {
                companyIdParameter = new ObjectParameter("CompanyId", typeof(global::System.Int32));
            }
    
            ObjectParameter viewingCompanyIdParameter;
            if (viewingCompanyId.HasValue)
            {
                viewingCompanyIdParameter = new ObjectParameter("ViewingCompanyId", viewingCompanyId);
            }
            else
            {
                viewingCompanyIdParameter = new ObjectParameter("ViewingCompanyId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("RemoveInventorySharing", companyIdParameter, viewingCompanyIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int RemoveItemTypeFields()
        {
            return base.ExecuteFunction("RemoveItemTypeFields");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemId">No Metadata Documentation available.</param>
        public int RemoveOutDatedPinnedItemsFromItemBriefs(Nullable<global::System.Int32> itemId)
        {
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("RemoveOutDatedPinnedItemsFromItemBriefs", itemIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="projectid">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="itemBookingId">No Metadata Documentation available.</param>
        /// <param name="itemId">No Metadata Documentation available.</param>
        /// <param name="itemBriefId">No Metadata Documentation available.</param>
        /// <param name="shouldCommit">No Metadata Documentation available.</param>
        public int ReleaseItemBriefToInventory(Nullable<global::System.Int32> projectid, Nullable<global::System.Int32> userId, Nullable<global::System.Int32> itemBookingId, Nullable<global::System.Int32> itemId, Nullable<global::System.Int32> itemBriefId, Nullable<global::System.Boolean> shouldCommit)
        {
            ObjectParameter projectidParameter;
            if (projectid.HasValue)
            {
                projectidParameter = new ObjectParameter("Projectid", projectid);
            }
            else
            {
                projectidParameter = new ObjectParameter("Projectid", typeof(global::System.Int32));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            ObjectParameter itemBookingIdParameter;
            if (itemBookingId.HasValue)
            {
                itemBookingIdParameter = new ObjectParameter("ItemBookingId", itemBookingId);
            }
            else
            {
                itemBookingIdParameter = new ObjectParameter("ItemBookingId", typeof(global::System.Int32));
            }
    
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            ObjectParameter itemBriefIdParameter;
            if (itemBriefId.HasValue)
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", itemBriefId);
            }
            else
            {
                itemBriefIdParameter = new ObjectParameter("ItemBriefId", typeof(global::System.Int32));
            }
    
            ObjectParameter shouldCommitParameter;
            if (shouldCommit.HasValue)
            {
                shouldCommitParameter = new ObjectParameter("ShouldCommit", shouldCommit);
            }
            else
            {
                shouldCommitParameter = new ObjectParameter("ShouldCommit", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("ReleaseItemBriefToInventory", projectidParameter, userIdParameter, itemBookingIdParameter, itemIdParameter, itemBriefIdParameter, shouldCommitParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemId">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> IsOverdueItem(Nullable<global::System.Int32> itemId)
        {
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("IsOverdueItem", itemIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemId">No Metadata Documentation available.</param>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        /// <param name="bookingToIgnore">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> GetAvailableItemQuantity(Nullable<global::System.Int32> itemId, Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate, Nullable<global::System.Int32> bookingToIgnore)
        {
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("FromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("FromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("ToDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("ToDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter bookingToIgnoreParameter;
            if (bookingToIgnore.HasValue)
            {
                bookingToIgnoreParameter = new ObjectParameter("BookingToIgnore", bookingToIgnore);
            }
            else
            {
                bookingToIgnoreParameter = new ObjectParameter("BookingToIgnore", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("GetAvailableItemQuantity", itemIdParameter, fromDateParameter, toDateParameter, bookingToIgnoreParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="projectId">No Metadata Documentation available.</param>
        /// <param name="newValue">No Metadata Documentation available.</param>
        /// <param name="oldValue">No Metadata Documentation available.</param>
        public int UpdateCreatedForField(Nullable<global::System.Int32> projectId, global::System.String newValue, global::System.String oldValue)
        {
            ObjectParameter projectIdParameter;
            if (projectId.HasValue)
            {
                projectIdParameter = new ObjectParameter("ProjectId", projectId);
            }
            else
            {
                projectIdParameter = new ObjectParameter("ProjectId", typeof(global::System.Int32));
            }
    
            ObjectParameter newValueParameter;
            if (newValue != null)
            {
                newValueParameter = new ObjectParameter("NewValue", newValue);
            }
            else
            {
                newValueParameter = new ObjectParameter("NewValue", typeof(global::System.String));
            }
    
            ObjectParameter oldValueParameter;
            if (oldValue != null)
            {
                oldValueParameter = new ObjectParameter("OldValue", oldValue);
            }
            else
            {
                oldValueParameter = new ObjectParameter("OldValue", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("UpdateCreatedForField", projectIdParameter, newValueParameter, oldValueParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemBookingId">No Metadata Documentation available.</param>
        /// <param name="isToDateEdit">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.DateTime>> GetMaxMarginDateOfItemAvailable(Nullable<global::System.Int32> itemBookingId, Nullable<global::System.Boolean> isToDateEdit)
        {
            ObjectParameter itemBookingIdParameter;
            if (itemBookingId.HasValue)
            {
                itemBookingIdParameter = new ObjectParameter("ItemBookingId", itemBookingId);
            }
            else
            {
                itemBookingIdParameter = new ObjectParameter("ItemBookingId", typeof(global::System.Int32));
            }
    
            ObjectParameter isToDateEditParameter;
            if (isToDateEdit.HasValue)
            {
                isToDateEditParameter = new ObjectParameter("IsToDateEdit", isToDateEdit);
            }
            else
            {
                isToDateEditParameter = new ObjectParameter("IsToDateEdit", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.DateTime>>("GetMaxMarginDateOfItemAvailable", itemBookingIdParameter, isToDateEditParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemId">No Metadata Documentation available.</param>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        /// <param name="bookingToIgnore">No Metadata Documentation available.</param>
        public int GetMaxBookedQuantityInItemForPeriod(Nullable<global::System.Int32> itemId, Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate, Nullable<global::System.Int32> bookingToIgnore)
        {
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("FromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("FromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("ToDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("ToDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter bookingToIgnoreParameter;
            if (bookingToIgnore.HasValue)
            {
                bookingToIgnoreParameter = new ObjectParameter("BookingToIgnore", bookingToIgnore);
            }
            else
            {
                bookingToIgnoreParameter = new ObjectParameter("BookingToIgnore", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("GetMaxBookedQuantityInItemForPeriod", itemIdParameter, fromDateParameter, toDateParameter, bookingToIgnoreParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemId">No Metadata Documentation available.</param>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        /// <param name="bookingToIgnore">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> GetMaxBookedQuantityInItemForPeriod1(Nullable<global::System.Int32> itemId, Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate, Nullable<global::System.Int32> bookingToIgnore)
        {
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("FromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("FromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("ToDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("ToDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter bookingToIgnoreParameter;
            if (bookingToIgnore.HasValue)
            {
                bookingToIgnoreParameter = new ObjectParameter("BookingToIgnore", bookingToIgnore);
            }
            else
            {
                bookingToIgnoreParameter = new ObjectParameter("BookingToIgnore", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("GetMaxBookedQuantityInItemForPeriod1", itemIdParameter, fromDateParameter, toDateParameter, bookingToIgnoreParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemId">No Metadata Documentation available.</param>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        /// <param name="bookingToIgnore">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> GetMaxBookedQuantityForItem(Nullable<global::System.Int32> itemId, Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate, Nullable<global::System.Int32> bookingToIgnore)
        {
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("FromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("FromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("ToDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("ToDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter bookingToIgnoreParameter;
            if (bookingToIgnore.HasValue)
            {
                bookingToIgnoreParameter = new ObjectParameter("BookingToIgnore", bookingToIgnore);
            }
            else
            {
                bookingToIgnoreParameter = new ObjectParameter("BookingToIgnore", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("GetMaxBookedQuantityForItem", itemIdParameter, fromDateParameter, toDateParameter, bookingToIgnoreParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="relatedId">No Metadata Documentation available.</param>
        /// <param name="relatedTable">No Metadata Documentation available.</param>
        /// <param name="emailTemplateTypeCodeId">No Metadata Documentation available.</param>
        public int DeleteEmailHistory(Nullable<global::System.Int32> relatedId, global::System.String relatedTable, Nullable<global::System.Int32> emailTemplateTypeCodeId)
        {
            ObjectParameter relatedIdParameter;
            if (relatedId.HasValue)
            {
                relatedIdParameter = new ObjectParameter("RelatedId", relatedId);
            }
            else
            {
                relatedIdParameter = new ObjectParameter("RelatedId", typeof(global::System.Int32));
            }
    
            ObjectParameter relatedTableParameter;
            if (relatedTable != null)
            {
                relatedTableParameter = new ObjectParameter("RelatedTable", relatedTable);
            }
            else
            {
                relatedTableParameter = new ObjectParameter("RelatedTable", typeof(global::System.String));
            }
    
            ObjectParameter emailTemplateTypeCodeIdParameter;
            if (emailTemplateTypeCodeId.HasValue)
            {
                emailTemplateTypeCodeIdParameter = new ObjectParameter("EmailTemplateTypeCodeId", emailTemplateTypeCodeId);
            }
            else
            {
                emailTemplateTypeCodeIdParameter = new ObjectParameter("EmailTemplateTypeCodeId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteEmailHistory", relatedIdParameter, relatedTableParameter, emailTemplateTypeCodeIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemBookingId">No Metadata Documentation available.</param>
        public ObjectResult<GetCurrentItemBookingStatus_Result> GetCurrentItemBookingStatus(Nullable<global::System.Int32> itemBookingId)
        {
            ObjectParameter itemBookingIdParameter;
            if (itemBookingId.HasValue)
            {
                itemBookingIdParameter = new ObjectParameter("ItemBookingId", itemBookingId);
            }
            else
            {
                itemBookingIdParameter = new ObjectParameter("ItemBookingId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetCurrentItemBookingStatus_Result>("GetCurrentItemBookingStatus", itemBookingIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="relatedId">No Metadata Documentation available.</param>
        /// <param name="relatedTable">No Metadata Documentation available.</param>
        /// <param name="itemId">No Metadata Documentation available.</param>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        /// <param name="quantityBooked">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public int AddItemToBooking(Nullable<global::System.Int32> relatedId, global::System.String relatedTable, Nullable<global::System.Int32> itemId, Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate, Nullable<global::System.Int32> quantityBooked, Nullable<global::System.Int32> userID)
        {
            ObjectParameter relatedIdParameter;
            if (relatedId.HasValue)
            {
                relatedIdParameter = new ObjectParameter("RelatedId", relatedId);
            }
            else
            {
                relatedIdParameter = new ObjectParameter("RelatedId", typeof(global::System.Int32));
            }
    
            ObjectParameter relatedTableParameter;
            if (relatedTable != null)
            {
                relatedTableParameter = new ObjectParameter("RelatedTable", relatedTable);
            }
            else
            {
                relatedTableParameter = new ObjectParameter("RelatedTable", typeof(global::System.String));
            }
    
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("FromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("FromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("ToDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("ToDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter quantityBookedParameter;
            if (quantityBooked.HasValue)
            {
                quantityBookedParameter = new ObjectParameter("QuantityBooked", quantityBooked);
            }
            else
            {
                quantityBookedParameter = new ObjectParameter("QuantityBooked", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AddItemToBooking", relatedIdParameter, relatedTableParameter, itemIdParameter, fromDateParameter, toDateParameter, quantityBookedParameter, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemBookingId">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> HasItemBookingDelayed(Nullable<global::System.Int32> itemBookingId)
        {
            ObjectParameter itemBookingIdParameter;
            if (itemBookingId.HasValue)
            {
                itemBookingIdParameter = new ObjectParameter("ItemBookingId", itemBookingId);
            }
            else
            {
                itemBookingIdParameter = new ObjectParameter("ItemBookingId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("HasItemBookingDelayed", itemBookingIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyId">No Metadata Documentation available.</param>
        /// <param name="itemTypeId">No Metadata Documentation available.</param>
        public ObjectResult<GetInventoryItems_Result> GetInventoryItems(Nullable<global::System.Int32> companyId, Nullable<global::System.Int32> itemTypeId)
        {
            ObjectParameter companyIdParameter;
            if (companyId.HasValue)
            {
                companyIdParameter = new ObjectParameter("CompanyId", companyId);
            }
            else
            {
                companyIdParameter = new ObjectParameter("CompanyId", typeof(global::System.Int32));
            }
    
            ObjectParameter itemTypeIdParameter;
            if (itemTypeId.HasValue)
            {
                itemTypeIdParameter = new ObjectParameter("ItemTypeId", itemTypeId);
            }
            else
            {
                itemTypeIdParameter = new ObjectParameter("ItemTypeId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetInventoryItems_Result>("GetInventoryItems", companyIdParameter, itemTypeIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="projectId">No Metadata Documentation available.</param>
        /// <param name="itemTypeId">No Metadata Documentation available.</param>
        public ObjectResult<GetALLItemBriefs_Result> GetALLItemBriefs(Nullable<global::System.Int32> projectId, Nullable<global::System.Int32> itemTypeId)
        {
            ObjectParameter projectIdParameter;
            if (projectId.HasValue)
            {
                projectIdParameter = new ObjectParameter("ProjectId", projectId);
            }
            else
            {
                projectIdParameter = new ObjectParameter("ProjectId", typeof(global::System.Int32));
            }
    
            ObjectParameter itemTypeIdParameter;
            if (itemTypeId.HasValue)
            {
                itemTypeIdParameter = new ObjectParameter("ItemTypeId", itemTypeId);
            }
            else
            {
                itemTypeIdParameter = new ObjectParameter("ItemTypeId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetALLItemBriefs_Result>("GetALLItemBriefs", projectIdParameter, itemTypeIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="locationId">No Metadata Documentation available.</param>
        /// <param name="companyId">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="showAll">No Metadata Documentation available.</param>
        [EdmFunction("StageBitzDB", "GetAllSubLocatons")]
        public IQueryable<GetAllSubLocatons_Result> GetAllSubLocatons(Nullable<global::System.Int32> locationId, Nullable<global::System.Int32> companyId, Nullable<global::System.Int32> userId, Nullable<global::System.Boolean> showAll)
        {
            ObjectParameter locationIdParameter;
            if (locationId.HasValue)
            {
                locationIdParameter = new ObjectParameter("locationId", locationId);
            }
            else
            {
                locationIdParameter = new ObjectParameter("locationId", typeof(global::System.Int32));
            }
    
            ObjectParameter companyIdParameter;
            if (companyId.HasValue)
            {
                companyIdParameter = new ObjectParameter("companyId", companyId);
            }
            else
            {
                companyIdParameter = new ObjectParameter("companyId", typeof(global::System.Int32));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("userId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("userId", typeof(global::System.Int32));
            }
    
            ObjectParameter showAllParameter;
            if (showAll.HasValue)
            {
                showAllParameter = new ObjectParameter("ShowAll", showAll);
            }
            else
            {
                showAllParameter = new ObjectParameter("ShowAll", typeof(global::System.Boolean));
            }
    
            return base.CreateQuery<GetAllSubLocatons_Result>("[StageBitzDB].[GetAllSubLocatons](@locationId, @companyId, @userId, @ShowAll)", locationIdParameter, companyIdParameter, userIdParameter, showAllParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="locationId">No Metadata Documentation available.</param>
        /// <param name="companyId">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> SPGetLocationPath(Nullable<global::System.Int32> locationId, Nullable<global::System.Int32> companyId)
        {
            ObjectParameter locationIdParameter;
            if (locationId.HasValue)
            {
                locationIdParameter = new ObjectParameter("locationId", locationId);
            }
            else
            {
                locationIdParameter = new ObjectParameter("locationId", typeof(global::System.Int32));
            }
    
            ObjectParameter companyIdParameter;
            if (companyId.HasValue)
            {
                companyIdParameter = new ObjectParameter("companyId", companyId);
            }
            else
            {
                companyIdParameter = new ObjectParameter("companyId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<global::System.String>("SPGetLocationPath", locationIdParameter, companyIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyUserId">No Metadata Documentation available.</param>
        public int DeleteInventoryUser(Nullable<global::System.Int32> companyUserId)
        {
            ObjectParameter companyUserIdParameter;
            if (companyUserId.HasValue)
            {
                companyUserIdParameter = new ObjectParameter("CompanyUserId", companyUserId);
            }
            else
            {
                companyUserIdParameter = new ObjectParameter("CompanyUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteInventoryUser", companyUserIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyId">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="filterByKeyWord">No Metadata Documentation available.</param>
        /// <param name="isAutoComplete">No Metadata Documentation available.</param>
        /// <param name="filterByBookingStatus">No Metadata Documentation available.</param>
        /// <param name="showArchived">No Metadata Documentation available.</param>
        public ObjectResult<GetBookingInfo_Result> GetBookingInfo(Nullable<global::System.Int32> companyId, Nullable<global::System.Int32> userId, global::System.String filterByKeyWord, Nullable<global::System.Boolean> isAutoComplete, Nullable<global::System.Int32> filterByBookingStatus, Nullable<global::System.Boolean> showArchived)
        {
            ObjectParameter companyIdParameter;
            if (companyId.HasValue)
            {
                companyIdParameter = new ObjectParameter("CompanyId", companyId);
            }
            else
            {
                companyIdParameter = new ObjectParameter("CompanyId", typeof(global::System.Int32));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            ObjectParameter filterByKeyWordParameter;
            if (filterByKeyWord != null)
            {
                filterByKeyWordParameter = new ObjectParameter("FilterByKeyWord", filterByKeyWord);
            }
            else
            {
                filterByKeyWordParameter = new ObjectParameter("FilterByKeyWord", typeof(global::System.String));
            }
    
            ObjectParameter isAutoCompleteParameter;
            if (isAutoComplete.HasValue)
            {
                isAutoCompleteParameter = new ObjectParameter("isAutoComplete", isAutoComplete);
            }
            else
            {
                isAutoCompleteParameter = new ObjectParameter("isAutoComplete", typeof(global::System.Boolean));
            }
    
            ObjectParameter filterByBookingStatusParameter;
            if (filterByBookingStatus.HasValue)
            {
                filterByBookingStatusParameter = new ObjectParameter("filterByBookingStatus", filterByBookingStatus);
            }
            else
            {
                filterByBookingStatusParameter = new ObjectParameter("filterByBookingStatus", typeof(global::System.Int32));
            }
    
            ObjectParameter showArchivedParameter;
            if (showArchived.HasValue)
            {
                showArchivedParameter = new ObjectParameter("showArchived", showArchived);
            }
            else
            {
                showArchivedParameter = new ObjectParameter("showArchived", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<GetBookingInfo_Result>("GetBookingInfo", companyIdParameter, userIdParameter, filterByKeyWordParameter, isAutoCompleteParameter, filterByBookingStatusParameter, showArchivedParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="viewCompanyId">No Metadata Documentation available.</param>
        /// <param name="companyIdString">No Metadata Documentation available.</param>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        /// <param name="locationId">No Metadata Documentation available.</param>
        /// <param name="findByName">No Metadata Documentation available.</param>
        /// <param name="findByItemTypeId">No Metadata Documentation available.</param>
        /// <param name="findByVisibilityCodeId">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="sortOrder">No Metadata Documentation available.</param>
        /// <param name="isAutoComplete">No Metadata Documentation available.</param>
        /// <param name="isManageInventory">No Metadata Documentation available.</param>
        /// <param name="totalCount">No Metadata Documentation available.</param>
        public ObjectResult<GetInventorySearchItems1_Result> GetInventorySearchItems1(Nullable<global::System.Int32> userId, Nullable<global::System.Int32> viewCompanyId, global::System.String companyIdString, Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate, Nullable<global::System.Int32> locationId, global::System.String findByName, Nullable<global::System.Int32> findByItemTypeId, Nullable<global::System.Int32> findByVisibilityCodeId, Nullable<global::System.Int32> pageSize, Nullable<global::System.Int32> pageIndex, global::System.String sortOrder, Nullable<global::System.Boolean> isAutoComplete, Nullable<global::System.Boolean> isManageInventory, ObjectParameter totalCount)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            ObjectParameter viewCompanyIdParameter;
            if (viewCompanyId.HasValue)
            {
                viewCompanyIdParameter = new ObjectParameter("viewCompanyId", viewCompanyId);
            }
            else
            {
                viewCompanyIdParameter = new ObjectParameter("viewCompanyId", typeof(global::System.Int32));
            }
    
            ObjectParameter companyIdStringParameter;
            if (companyIdString != null)
            {
                companyIdStringParameter = new ObjectParameter("CompanyIdString", companyIdString);
            }
            else
            {
                companyIdStringParameter = new ObjectParameter("CompanyIdString", typeof(global::System.String));
            }
    
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("FromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("FromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("ToDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("ToDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter locationIdParameter;
            if (locationId.HasValue)
            {
                locationIdParameter = new ObjectParameter("locationId", locationId);
            }
            else
            {
                locationIdParameter = new ObjectParameter("locationId", typeof(global::System.Int32));
            }
    
            ObjectParameter findByNameParameter;
            if (findByName != null)
            {
                findByNameParameter = new ObjectParameter("FindByName", findByName);
            }
            else
            {
                findByNameParameter = new ObjectParameter("FindByName", typeof(global::System.String));
            }
    
            ObjectParameter findByItemTypeIdParameter;
            if (findByItemTypeId.HasValue)
            {
                findByItemTypeIdParameter = new ObjectParameter("FindByItemTypeId", findByItemTypeId);
            }
            else
            {
                findByItemTypeIdParameter = new ObjectParameter("FindByItemTypeId", typeof(global::System.Int32));
            }
    
            ObjectParameter findByVisibilityCodeIdParameter;
            if (findByVisibilityCodeId.HasValue)
            {
                findByVisibilityCodeIdParameter = new ObjectParameter("FindByVisibilityCodeId", findByVisibilityCodeId);
            }
            else
            {
                findByVisibilityCodeIdParameter = new ObjectParameter("FindByVisibilityCodeId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter sortOrderParameter;
            if (sortOrder != null)
            {
                sortOrderParameter = new ObjectParameter("SortOrder", sortOrder);
            }
            else
            {
                sortOrderParameter = new ObjectParameter("SortOrder", typeof(global::System.String));
            }
    
            ObjectParameter isAutoCompleteParameter;
            if (isAutoComplete.HasValue)
            {
                isAutoCompleteParameter = new ObjectParameter("IsAutoComplete", isAutoComplete);
            }
            else
            {
                isAutoCompleteParameter = new ObjectParameter("IsAutoComplete", typeof(global::System.Boolean));
            }
    
            ObjectParameter isManageInventoryParameter;
            if (isManageInventory.HasValue)
            {
                isManageInventoryParameter = new ObjectParameter("IsManageInventory", isManageInventory);
            }
            else
            {
                isManageInventoryParameter = new ObjectParameter("IsManageInventory", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<GetInventorySearchItems1_Result>("GetInventorySearchItems1", userIdParameter, viewCompanyIdParameter, companyIdStringParameter, fromDateParameter, toDateParameter, locationIdParameter, findByNameParameter, findByItemTypeIdParameter, findByVisibilityCodeIdParameter, pageSizeParameter, pageIndexParameter, sortOrderParameter, isAutoCompleteParameter, isManageInventoryParameter, totalCount);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="viewCompanyId">No Metadata Documentation available.</param>
        /// <param name="companyIdString">No Metadata Documentation available.</param>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        /// <param name="locationId">No Metadata Documentation available.</param>
        /// <param name="findByName">No Metadata Documentation available.</param>
        /// <param name="findByItemTypeId">No Metadata Documentation available.</param>
        /// <param name="findByVisibilityCodeId">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="sortOrder">No Metadata Documentation available.</param>
        /// <param name="isAutoComplete">No Metadata Documentation available.</param>
        /// <param name="isManageInventory">No Metadata Documentation available.</param>
        /// <param name="totalCount">No Metadata Documentation available.</param>
        public ObjectResult<GetInventorySearchItems_Result> GetInventorySearchItems(Nullable<global::System.Int32> userId, Nullable<global::System.Int32> viewCompanyId, global::System.String companyIdString, Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate, Nullable<global::System.Int32> locationId, global::System.String findByName, Nullable<global::System.Int32> findByItemTypeId, Nullable<global::System.Int32> findByVisibilityCodeId, Nullable<global::System.Int32> pageSize, Nullable<global::System.Int32> pageIndex, global::System.String sortOrder, Nullable<global::System.Boolean> isAutoComplete, Nullable<global::System.Boolean> isManageInventory, ObjectParameter totalCount)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            ObjectParameter viewCompanyIdParameter;
            if (viewCompanyId.HasValue)
            {
                viewCompanyIdParameter = new ObjectParameter("viewCompanyId", viewCompanyId);
            }
            else
            {
                viewCompanyIdParameter = new ObjectParameter("viewCompanyId", typeof(global::System.Int32));
            }
    
            ObjectParameter companyIdStringParameter;
            if (companyIdString != null)
            {
                companyIdStringParameter = new ObjectParameter("CompanyIdString", companyIdString);
            }
            else
            {
                companyIdStringParameter = new ObjectParameter("CompanyIdString", typeof(global::System.String));
            }
    
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("FromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("FromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("ToDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("ToDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter locationIdParameter;
            if (locationId.HasValue)
            {
                locationIdParameter = new ObjectParameter("locationId", locationId);
            }
            else
            {
                locationIdParameter = new ObjectParameter("locationId", typeof(global::System.Int32));
            }
    
            ObjectParameter findByNameParameter;
            if (findByName != null)
            {
                findByNameParameter = new ObjectParameter("FindByName", findByName);
            }
            else
            {
                findByNameParameter = new ObjectParameter("FindByName", typeof(global::System.String));
            }
    
            ObjectParameter findByItemTypeIdParameter;
            if (findByItemTypeId.HasValue)
            {
                findByItemTypeIdParameter = new ObjectParameter("FindByItemTypeId", findByItemTypeId);
            }
            else
            {
                findByItemTypeIdParameter = new ObjectParameter("FindByItemTypeId", typeof(global::System.Int32));
            }
    
            ObjectParameter findByVisibilityCodeIdParameter;
            if (findByVisibilityCodeId.HasValue)
            {
                findByVisibilityCodeIdParameter = new ObjectParameter("FindByVisibilityCodeId", findByVisibilityCodeId);
            }
            else
            {
                findByVisibilityCodeIdParameter = new ObjectParameter("FindByVisibilityCodeId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter sortOrderParameter;
            if (sortOrder != null)
            {
                sortOrderParameter = new ObjectParameter("SortOrder", sortOrder);
            }
            else
            {
                sortOrderParameter = new ObjectParameter("SortOrder", typeof(global::System.String));
            }
    
            ObjectParameter isAutoCompleteParameter;
            if (isAutoComplete.HasValue)
            {
                isAutoCompleteParameter = new ObjectParameter("IsAutoComplete", isAutoComplete);
            }
            else
            {
                isAutoCompleteParameter = new ObjectParameter("IsAutoComplete", typeof(global::System.Boolean));
            }
    
            ObjectParameter isManageInventoryParameter;
            if (isManageInventory.HasValue)
            {
                isManageInventoryParameter = new ObjectParameter("IsManageInventory", isManageInventory);
            }
            else
            {
                isManageInventoryParameter = new ObjectParameter("IsManageInventory", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<GetInventorySearchItems_Result>("GetInventorySearchItems", userIdParameter, viewCompanyIdParameter, companyIdStringParameter, fromDateParameter, toDateParameter, locationIdParameter, findByNameParameter, findByItemTypeIdParameter, findByVisibilityCodeIdParameter, pageSizeParameter, pageIndexParameter, sortOrderParameter, isAutoCompleteParameter, isManageInventoryParameter, totalCount);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Attribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attribute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attribute object.
        /// </summary>
        /// <param name="attributeId">Initial value of the AttributeId property.</param>
        /// <param name="attributeName">Initial value of the AttributeName property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        public static Attribute CreateAttribute(global::System.Int32 attributeId, global::System.String attributeName, global::System.String tagName)
        {
            Attribute attribute = new Attribute();
            attribute.AttributeId = attributeId;
            attribute.AttributeName = attributeName;
            attribute.TagName = tagName;
            return attribute;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeId
        {
            get
            {
                return _AttributeId;
            }
            set
            {
                if (_AttributeId != value)
                {
                    OnAttributeIdChanging(value);
                    ReportPropertyChanging("AttributeId");
                    _AttributeId = StructuralObject.SetValidValue(value, "AttributeId");
                    ReportPropertyChanged("AttributeId");
                    OnAttributeIdChanged();
                }
            }
        }
        private global::System.Int32 _AttributeId;
        partial void OnAttributeIdChanging(global::System.Int32 value);
        partial void OnAttributeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AttributeName
        {
            get
            {
                return _AttributeName;
            }
            set
            {
                OnAttributeNameChanging(value);
                ReportPropertyChanging("AttributeName");
                _AttributeName = StructuralObject.SetValidValue(value, false, "AttributeName");
                ReportPropertyChanged("AttributeName");
                OnAttributeNameChanged();
            }
        }
        private global::System.String _AttributeName;
        partial void OnAttributeNameChanging(global::System.String value);
        partial void OnAttributeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false, "TagName");
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_FieldAttributesField_FieldAttributes", "FieldAttribute")]
        public EntityCollection<FieldAttribute> FieldAttributes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldAttribute>("StageBitz.Data.FK_FieldAttributesField_FieldAttributes", "FieldAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldAttribute>("StageBitz.Data.FK_FieldAttributesField_FieldAttributes", "FieldAttribute", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Booking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Booking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Booking object.
        /// </summary>
        /// <param name="bookingId">Initial value of the BookingId property.</param>
        /// <param name="relatedTable">Initial value of the RelatedTable property.</param>
        /// <param name="relatedId">Initial value of the RelatedId property.</param>
        /// <param name="isArchived">Initial value of the IsArchived property.</param>
        public static Booking CreateBooking(global::System.Int32 bookingId, global::System.String relatedTable, global::System.Int32 relatedId, global::System.Boolean isArchived)
        {
            Booking booking = new Booking();
            booking.BookingId = bookingId;
            booking.RelatedTable = relatedTable;
            booking.RelatedId = relatedId;
            booking.IsArchived = isArchived;
            return booking;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingId
        {
            get
            {
                return _BookingId;
            }
            set
            {
                if (_BookingId != value)
                {
                    OnBookingIdChanging(value);
                    ReportPropertyChanging("BookingId");
                    _BookingId = StructuralObject.SetValidValue(value, "BookingId");
                    ReportPropertyChanged("BookingId");
                    OnBookingIdChanged();
                }
            }
        }
        private global::System.Int32 _BookingId;
        partial void OnBookingIdChanging(global::System.Int32 value);
        partial void OnBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelatedTable
        {
            get
            {
                return _RelatedTable;
            }
            set
            {
                OnRelatedTableChanging(value);
                ReportPropertyChanging("RelatedTable");
                _RelatedTable = StructuralObject.SetValidValue(value, false, "RelatedTable");
                ReportPropertyChanged("RelatedTable");
                OnRelatedTableChanged();
            }
        }
        private global::System.String _RelatedTable;
        partial void OnRelatedTableChanging(global::System.String value);
        partial void OnRelatedTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private global::System.Int32 _RelatedId;
        partial void OnRelatedIdChanging(global::System.Int32 value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsArchived
        {
            get
            {
                return _IsArchived;
            }
            set
            {
                OnIsArchivedChanging(value);
                ReportPropertyChanging("IsArchived");
                _IsArchived = StructuralObject.SetValidValue(value, "IsArchived");
                ReportPropertyChanged("IsArchived");
                OnIsArchivedChanged();
            }
        }
        private global::System.Boolean _IsArchived;
        partial void OnIsArchivedChanging(global::System.Boolean value);
        partial void OnIsArchivedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyBookingNumbers_Bookings", "CompanyBookingNumber")]
        public EntityCollection<CompanyBookingNumber> CompanyBookingNumbers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyBookingNumber>("StageBitz.Data.FK_CompanyBookingNumbers_Bookings", "CompanyBookingNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyBookingNumber>("StageBitz.Data.FK_CompanyBookingNumbers_Bookings", "CompanyBookingNumber", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_DailyBookingNotifications_Bookings", "DailyBookingNotification")]
        public EntityCollection<DailyBookingNotification> DailyBookingNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DailyBookingNotification>("StageBitz.Data.FK_DailyBookingNotifications_Bookings", "DailyBookingNotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DailyBookingNotification>("StageBitz.Data.FK_DailyBookingNotifications_Bookings", "DailyBookingNotification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookings_Bookings", "ItemBooking")]
        public EntityCollection<ItemBooking> ItemBookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBooking>("StageBitz.Data.FK_ItemBookings_Bookings", "ItemBooking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBooking>("StageBitz.Data.FK_ItemBookings_Bookings", "ItemBooking", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Code")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Code : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Code object.
        /// </summary>
        /// <param name="codeId">Initial value of the CodeId property.</param>
        /// <param name="codeHeaderId">Initial value of the CodeHeaderId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Code CreateCode(global::System.Int32 codeId, global::System.Int32 codeHeaderId, global::System.String value, global::System.Int32 sortOrder, global::System.Boolean isActive)
        {
            Code code = new Code();
            code.CodeId = codeId;
            code.CodeHeaderId = codeHeaderId;
            code.Value = value;
            code.SortOrder = sortOrder;
            code.IsActive = isActive;
            return code;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CodeId
        {
            get
            {
                return _CodeId;
            }
            set
            {
                if (_CodeId != value)
                {
                    OnCodeIdChanging(value);
                    ReportPropertyChanging("CodeId");
                    _CodeId = StructuralObject.SetValidValue(value, "CodeId");
                    ReportPropertyChanged("CodeId");
                    OnCodeIdChanged();
                }
            }
        }
        private global::System.Int32 _CodeId;
        partial void OnCodeIdChanging(global::System.Int32 value);
        partial void OnCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CodeHeaderId
        {
            get
            {
                return _CodeHeaderId;
            }
            set
            {
                OnCodeHeaderIdChanging(value);
                ReportPropertyChanging("CodeHeaderId");
                _CodeHeaderId = StructuralObject.SetValidValue(value, "CodeHeaderId");
                ReportPropertyChanged("CodeHeaderId");
                OnCodeHeaderIdChanged();
            }
        }
        private global::System.Int32 _CodeHeaderId;
        partial void OnCodeHeaderIdChanging(global::System.Int32 value);
        partial void OnCodeHeaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Codes_CodeHeaders", "CodeHeader")]
        public CodeHeader CodeHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CodeHeader>("StageBitz.Data.FK_Codes_CodeHeaders", "CodeHeader").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CodeHeader>("StageBitz.Data.FK_Codes_CodeHeaders", "CodeHeader").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CodeHeader> CodeHeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CodeHeader>("StageBitz.Data.FK_Codes_CodeHeaders", "CodeHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CodeHeader>("StageBitz.Data.FK_Codes_CodeHeaders", "CodeHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Companies_Codes", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("StageBitz.Data.FK_Companies_Codes", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("StageBitz.Data.FK_Companies_Codes", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_Codes", "CompanyPaymentPackage")]
        public EntityCollection<CompanyPaymentPackage> CompanyPaymentPackages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentPackages_Codes", "CompanyPaymentPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentPackages_Codes", "CompanyPaymentPackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_Codes1", "CompanyPaymentPackage")]
        public EntityCollection<CompanyPaymentPackage> CompanyPaymentPackages1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentPackages_Codes1", "CompanyPaymentPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentPackages_Codes1", "CompanyPaymentPackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyUserRole_Codes", "CompanyUserRole")]
        public EntityCollection<CompanyUserRole> CompanyUserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyUserRole>("StageBitz.Data.FK_CompanyUserRole_Codes", "CompanyUserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyUserRole>("StageBitz.Data.FK_CompanyUserRole_Codes", "CompanyUserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_EmailTemplates_Codes", "EmailTemplate")]
        public EntityCollection<EmailTemplate> EmailTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailTemplate>("StageBitz.Data.FK_EmailTemplates_Codes", "EmailTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailTemplate>("StageBitz.Data.FK_EmailTemplates_Codes", "EmailTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invitations_Codes", "Invitation")]
        public EntityCollection<Invitation> Invitations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitation>("StageBitz.Data.FK_Invitations_Codes", "Invitation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitation>("StageBitz.Data.FK_Invitations_Codes", "Invitation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invitations_Codes2", "Invitation")]
        public EntityCollection<Invitation> Invitations1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitation>("StageBitz.Data.FK_Invitations_Codes2", "Invitation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitation>("StageBitz.Data.FK_Invitations_Codes2", "Invitation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InvitationUserRole_Codes", "InvitationUserRole")]
        public EntityCollection<InvitationUserRole> InvitationUserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvitationUserRole>("StageBitz.Data.FK_InvitationUserRole_Codes", "InvitationUserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvitationUserRole>("StageBitz.Data.FK_InvitationUserRole_Codes", "InvitationUserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invoices_Codes", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("StageBitz.Data.FK_Invoices_Codes", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("StageBitz.Data.FK_Invoices_Codes", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invoices_Status", "Invoice")]
        public EntityCollection<Invoice> Invoices1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("StageBitz.Data.FK_Invoices_Status", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("StageBitz.Data.FK_Invoices_Status", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefs_Codes", "ItemBrief")]
        public EntityCollection<ItemBrief> ItemBriefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBrief>("StageBitz.Data.FK_ItemBriefs_Codes", "ItemBrief");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBrief>("StageBitz.Data.FK_ItemBriefs_Codes", "ItemBrief", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefTasks_Codes", "ItemBriefTask")]
        public EntityCollection<ItemBriefTask> ItemBriefTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBriefTask>("StageBitz.Data.FK_ItemBriefTasks_Codes", "ItemBriefTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBriefTask>("StageBitz.Data.FK_ItemBriefTasks_Codes", "ItemBriefTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefTypes_Codes", "ItemBriefType")]
        public EntityCollection<ItemBriefType> ItemBriefTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBriefType>("StageBitz.Data.FK_ItemBriefTypes_Codes", "ItemBriefType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBriefType>("StageBitz.Data.FK_ItemBriefTypes_Codes", "ItemBriefType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_PaymentPackageTypes_Codes", "PaymentPackageType")]
        public EntityCollection<PaymentPackageType> PaymentPackageTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentPackageType>("StageBitz.Data.FK_PaymentPackageTypes_Codes", "PaymentPackageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentPackageType>("StageBitz.Data.FK_PaymentPackageTypes_Codes", "PaymentPackageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectStatusHistory_Codes_Current", "ProjectStatusHistory")]
        public EntityCollection<ProjectStatusHistory> ProjectStatusHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectStatusHistory>("StageBitz.Data.FK_ProjectStatusHistory_Codes_Current", "ProjectStatusHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectStatusHistory>("StageBitz.Data.FK_ProjectStatusHistory_Codes_Current", "ProjectStatusHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectUsers_Codes", "ProjectUser")]
        public EntityCollection<ProjectUser> ProjectUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUser>("StageBitz.Data.FK_ProjectUsers_Codes", "ProjectUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUser>("StageBitz.Data.FK_ProjectUsers_Codes", "ProjectUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_SystemTasks_Codes", "SystemTask")]
        public EntityCollection<SystemTask> SystemTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemTask>("StageBitz.Data.FK_SystemTasks_Codes", "SystemTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemTask>("StageBitz.Data.FK_SystemTasks_Codes", "SystemTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Transactions_Codes", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("StageBitz.Data.FK_Transactions_Codes", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("StageBitz.Data.FK_Transactions_Codes", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Users_Codes", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("StageBitz.Data.FK_Users_Codes", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("StageBitz.Data.FK_Users_Codes", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ViewSettings_Codes", "ViewSetting")]
        public EntityCollection<ViewSetting> ViewSettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ViewSetting>("StageBitz.Data.FK_ViewSettings_Codes", "ViewSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ViewSetting>("StageBitz.Data.FK_ViewSettings_Codes", "ViewSetting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ViewSettings_Codes1", "ViewSetting")]
        public EntityCollection<ViewSetting> ViewSettings1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ViewSetting>("StageBitz.Data.FK_ViewSettings_Codes1", "ViewSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ViewSetting>("StageBitz.Data.FK_ViewSettings_Codes1", "ViewSetting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookingStatusHistories_Codes", "ItemBookingStatusHistory")]
        public EntityCollection<ItemBookingStatusHistory> ItemBookingStatusHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBookingStatusHistory>("StageBitz.Data.FK_ItemBookingStatusHistories_Codes", "ItemBookingStatusHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBookingStatusHistory>("StageBitz.Data.FK_ItemBookingStatusHistories_Codes", "ItemBookingStatusHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Items_Codes", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("StageBitz.Data.FK_Items_Codes", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("StageBitz.Data.FK_Items_Codes", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="CodeHeader")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CodeHeader : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CodeHeader object.
        /// </summary>
        /// <param name="codeHeaderId">Initial value of the CodeHeaderId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CodeHeader CreateCodeHeader(global::System.Int32 codeHeaderId, global::System.String name)
        {
            CodeHeader codeHeader = new CodeHeader();
            codeHeader.CodeHeaderId = codeHeaderId;
            codeHeader.Name = name;
            return codeHeader;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CodeHeaderId
        {
            get
            {
                return _CodeHeaderId;
            }
            set
            {
                if (_CodeHeaderId != value)
                {
                    OnCodeHeaderIdChanging(value);
                    ReportPropertyChanging("CodeHeaderId");
                    _CodeHeaderId = StructuralObject.SetValidValue(value, "CodeHeaderId");
                    ReportPropertyChanged("CodeHeaderId");
                    OnCodeHeaderIdChanged();
                }
            }
        }
        private global::System.Int32 _CodeHeaderId;
        partial void OnCodeHeaderIdChanging(global::System.Int32 value);
        partial void OnCodeHeaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Codes_CodeHeaders", "Code")]
        public EntityCollection<Code> Codes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Code>("StageBitz.Data.FK_Codes_CodeHeaders", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Code>("StageBitz.Data.FK_Codes_CodeHeaders", "Code", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="hasSuspended">Initial value of the HasSuspended property.</param>
        /// <param name="companyStatusCodeId">Initial value of the CompanyStatusCodeId property.</param>
        /// <param name="isCompanyVisibleForSearchInInventory">Initial value of the IsCompanyVisibleForSearchInInventory property.</param>
        public static Company CreateCompany(global::System.Int32 companyId, global::System.String companyName, global::System.Boolean isActive, global::System.Boolean hasSuspended, global::System.Int32 companyStatusCodeId, global::System.Boolean isCompanyVisibleForSearchInInventory)
        {
            Company company = new Company();
            company.CompanyId = companyId;
            company.CompanyName = companyName;
            company.IsActive = isActive;
            company.HasSuspended = hasSuspended;
            company.CompanyStatusCodeId = companyStatusCodeId;
            company.IsCompanyVisibleForSearchInInventory = isCompanyVisibleForSearchInInventory;
            return company;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true, "AddressLine1");
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true, "AddressLine2");
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostCode
        {
            get
            {
                return _PostCode;
            }
            set
            {
                OnPostCodeChanging(value);
                ReportPropertyChanging("PostCode");
                _PostCode = StructuralObject.SetValidValue(value, true, "PostCode");
                ReportPropertyChanged("PostCode");
                OnPostCodeChanged();
            }
        }
        private global::System.String _PostCode;
        partial void OnPostCodeChanging(global::System.String value);
        partial void OnPostCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value, "CountryId");
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true, "Website");
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasSuspended
        {
            get
            {
                return _HasSuspended;
            }
            set
            {
                OnHasSuspendedChanging(value);
                ReportPropertyChanging("HasSuspended");
                _HasSuspended = StructuralObject.SetValidValue(value, "HasSuspended");
                ReportPropertyChanged("HasSuspended");
                OnHasSuspendedChanged();
            }
        }
        private global::System.Boolean _HasSuspended;
        partial void OnHasSuspendedChanging(global::System.Boolean value);
        partial void OnHasSuspendedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyStatusCodeId
        {
            get
            {
                return _CompanyStatusCodeId;
            }
            set
            {
                OnCompanyStatusCodeIdChanging(value);
                ReportPropertyChanging("CompanyStatusCodeId");
                _CompanyStatusCodeId = StructuralObject.SetValidValue(value, "CompanyStatusCodeId");
                ReportPropertyChanged("CompanyStatusCodeId");
                OnCompanyStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _CompanyStatusCodeId;
        partial void OnCompanyStatusCodeIdChanging(global::System.Int32 value);
        partial void OnCompanyStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value, "ExpirationDate");
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCompanyVisibleForSearchInInventory
        {
            get
            {
                return _IsCompanyVisibleForSearchInInventory;
            }
            set
            {
                OnIsCompanyVisibleForSearchInInventoryChanging(value);
                ReportPropertyChanging("IsCompanyVisibleForSearchInInventory");
                _IsCompanyVisibleForSearchInInventory = StructuralObject.SetValidValue(value, "IsCompanyVisibleForSearchInInventory");
                ReportPropertyChanged("IsCompanyVisibleForSearchInInventory");
                OnIsCompanyVisibleForSearchInInventoryChanged();
            }
        }
        private global::System.Boolean _IsCompanyVisibleForSearchInInventory;
        partial void OnIsCompanyVisibleForSearchInInventoryChanging(global::System.Boolean value);
        partial void OnIsCompanyVisibleForSearchInInventoryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Companies_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Companies_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Companies_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Companies_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_Companies_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Companies_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("StageBitz.Data.FK_Companies_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("StageBitz.Data.FK_Companies_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("StageBitz.Data.FK_Companies_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("StageBitz.Data.FK_Companies_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyDiscountNotificatonHistory_Companies", "CompanyDiscountNotificatonHistory")]
        public EntityCollection<CompanyDiscountNotificatonHistory> CompanyDiscountNotificatonHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyDiscountNotificatonHistory>("StageBitz.Data.FK_CompanyDiscountNotificatonHistory_Companies", "CompanyDiscountNotificatonHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyDiscountNotificatonHistory>("StageBitz.Data.FK_CompanyDiscountNotificatonHistory_Companies", "CompanyDiscountNotificatonHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPackages_Companies", "CompanyPaymentPackage")]
        public EntityCollection<CompanyPaymentPackage> CompanyPaymentPackages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPackages_Companies", "CompanyPaymentPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPackages_Companies", "CompanyPaymentPackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_Companies", "CompanyPaymentSummary")]
        public EntityCollection<CompanyPaymentSummary> CompanyPaymentSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPaymentSummary>("StageBitz.Data.FK_CompanyPaymentSummaries_Companies", "CompanyPaymentSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPaymentSummary>("StageBitz.Data.FK_CompanyPaymentSummaries_Companies", "CompanyPaymentSummary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanySharingDetails_Companies", "CompanyInventorySharingDetail")]
        public EntityCollection<CompanyInventorySharingDetail> CompanyInventorySharingDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyInventorySharingDetail>("StageBitz.Data.FK_CompanySharingDetails_Companies", "CompanyInventorySharingDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyInventorySharingDetail>("StageBitz.Data.FK_CompanySharingDetails_Companies", "CompanyInventorySharingDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanySharingDetails_Companies1", "CompanyInventorySharingDetail")]
        public EntityCollection<CompanyInventorySharingDetail> CompanyInventorySharingDetails1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyInventorySharingDetail>("StageBitz.Data.FK_CompanySharingDetails_Companies1", "CompanyInventorySharingDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyInventorySharingDetail>("StageBitz.Data.FK_CompanySharingDetails_Companies1", "CompanyInventorySharingDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyUsers_Companies", "CompanyUser")]
        public EntityCollection<CompanyUser> CompanyUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyUser>("StageBitz.Data.FK_CompanyUsers_Companies", "CompanyUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyUser>("StageBitz.Data.FK_CompanyUsers_Companies", "CompanyUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_DiscountCodeUsage_Companies", "DiscountCodeUsage")]
        public EntityCollection<DiscountCodeUsage> DiscountCodeUsages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DiscountCodeUsage>("StageBitz.Data.FK_DiscountCodeUsage_Companies", "DiscountCodeUsage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DiscountCodeUsage>("StageBitz.Data.FK_DiscountCodeUsage_Companies", "DiscountCodeUsage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InventoryManagerSentEmails_Companies", "InventoryManagerSentEmail")]
        public EntityCollection<InventoryManagerSentEmail> InventoryManagerSentEmails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryManagerSentEmail>("StageBitz.Data.FK_InventoryManagerSentEmails_Companies", "InventoryManagerSentEmail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryManagerSentEmail>("StageBitz.Data.FK_InventoryManagerSentEmails_Companies", "InventoryManagerSentEmail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Projects_Companies", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("StageBitz.Data.FK_Projects_Companies", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("StageBitz.Data.FK_Projects_Companies", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_RemovedWatchListItemsNotifications_Companies", "RemovedWatchListItemsNotification")]
        public EntityCollection<RemovedWatchListItemsNotification> RemovedWatchListItemsNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RemovedWatchListItemsNotification>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies", "RemovedWatchListItemsNotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RemovedWatchListItemsNotification>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies", "RemovedWatchListItemsNotification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_RemovedWatchListItemsNotifications_Companies1", "RemovedWatchListItemsNotification")]
        public EntityCollection<RemovedWatchListItemsNotification> RemovedWatchListItemsNotifications1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RemovedWatchListItemsNotification>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies1", "RemovedWatchListItemsNotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RemovedWatchListItemsNotification>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies1", "RemovedWatchListItemsNotification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_WatchListHeader_Companies", "WatchListHeader")]
        public EntityCollection<WatchListHeader> WatchListHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WatchListHeader>("StageBitz.Data.FK_WatchListHeader_Companies", "WatchListHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WatchListHeader>("StageBitz.Data.FK_WatchListHeader_Companies", "WatchListHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyBookingNumbers_Companies", "CompanyBookingNumber")]
        public EntityCollection<CompanyBookingNumber> CompanyBookingNumbers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyBookingNumber>("StageBitz.Data.FK_CompanyBookingNumbers_Companies", "CompanyBookingNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyBookingNumber>("StageBitz.Data.FK_CompanyBookingNumbers_Companies", "CompanyBookingNumber", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Items_Companies", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("StageBitz.Data.FK_Items_Companies", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("StageBitz.Data.FK_Items_Companies", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Locations_Companies", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("StageBitz.Data.FK_Locations_Companies", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("StageBitz.Data.FK_Locations_Companies", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="CompanyBookingNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyBookingNumber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyBookingNumber object.
        /// </summary>
        /// <param name="companyBookingNumberId">Initial value of the CompanyBookingNumberId property.</param>
        /// <param name="bookingNumber">Initial value of the BookingNumber property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="bookingId">Initial value of the BookingId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static CompanyBookingNumber CreateCompanyBookingNumber(global::System.Int32 companyBookingNumberId, global::System.Int32 bookingNumber, global::System.Int32 companyId, global::System.Int32 bookingId, global::System.DateTime createdDate)
        {
            CompanyBookingNumber companyBookingNumber = new CompanyBookingNumber();
            companyBookingNumber.CompanyBookingNumberId = companyBookingNumberId;
            companyBookingNumber.BookingNumber = bookingNumber;
            companyBookingNumber.CompanyId = companyId;
            companyBookingNumber.BookingId = bookingId;
            companyBookingNumber.CreatedDate = createdDate;
            return companyBookingNumber;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyBookingNumberId
        {
            get
            {
                return _CompanyBookingNumberId;
            }
            set
            {
                if (_CompanyBookingNumberId != value)
                {
                    OnCompanyBookingNumberIdChanging(value);
                    ReportPropertyChanging("CompanyBookingNumberId");
                    _CompanyBookingNumberId = StructuralObject.SetValidValue(value, "CompanyBookingNumberId");
                    ReportPropertyChanged("CompanyBookingNumberId");
                    OnCompanyBookingNumberIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyBookingNumberId;
        partial void OnCompanyBookingNumberIdChanging(global::System.Int32 value);
        partial void OnCompanyBookingNumberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingNumber
        {
            get
            {
                return _BookingNumber;
            }
            set
            {
                OnBookingNumberChanging(value);
                ReportPropertyChanging("BookingNumber");
                _BookingNumber = StructuralObject.SetValidValue(value, "BookingNumber");
                ReportPropertyChanged("BookingNumber");
                OnBookingNumberChanged();
            }
        }
        private global::System.Int32 _BookingNumber;
        partial void OnBookingNumberChanging(global::System.Int32 value);
        partial void OnBookingNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingId
        {
            get
            {
                return _BookingId;
            }
            set
            {
                OnBookingIdChanging(value);
                ReportPropertyChanging("BookingId");
                _BookingId = StructuralObject.SetValidValue(value, "BookingId");
                ReportPropertyChanged("BookingId");
                OnBookingIdChanged();
            }
        }
        private global::System.Int32 _BookingId;
        partial void OnBookingIdChanging(global::System.Int32 value);
        partial void OnBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyBookingNumbers_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyBookingNumbers_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyBookingNumbers_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyBookingNumbers_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_CompanyBookingNumbers_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyBookingNumbers_Bookings", "Booking")]
        public Booking Booking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("StageBitz.Data.FK_CompanyBookingNumbers_Bookings", "Booking").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("StageBitz.Data.FK_CompanyBookingNumbers_Bookings", "Booking").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Booking> BookingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("StageBitz.Data.FK_CompanyBookingNumbers_Bookings", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Booking>("StageBitz.Data.FK_CompanyBookingNumbers_Bookings", "Booking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_DailyBookingNotifications_CompanyBookingNumbers", "DailyBookingNotification")]
        public EntityCollection<DailyBookingNotification> DailyBookingNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DailyBookingNotification>("StageBitz.Data.FK_DailyBookingNotifications_CompanyBookingNumbers", "DailyBookingNotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DailyBookingNotification>("StageBitz.Data.FK_DailyBookingNotifications_CompanyBookingNumbers", "DailyBookingNotification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="CompanyDiscountNotificatonHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyDiscountNotificatonHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyDiscountNotificatonHistory object.
        /// </summary>
        /// <param name="companyDiscountNotificatonHistoryId">Initial value of the CompanyDiscountNotificatonHistoryId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="notificationTypeId">Initial value of the NotificationTypeId property.</param>
        public static CompanyDiscountNotificatonHistory CreateCompanyDiscountNotificatonHistory(global::System.Int32 companyDiscountNotificatonHistoryId, global::System.Int32 companyId, global::System.DateTime date, global::System.Boolean isActive, global::System.Int32 notificationTypeId)
        {
            CompanyDiscountNotificatonHistory companyDiscountNotificatonHistory = new CompanyDiscountNotificatonHistory();
            companyDiscountNotificatonHistory.CompanyDiscountNotificatonHistoryId = companyDiscountNotificatonHistoryId;
            companyDiscountNotificatonHistory.CompanyId = companyId;
            companyDiscountNotificatonHistory.Date = date;
            companyDiscountNotificatonHistory.IsActive = isActive;
            companyDiscountNotificatonHistory.NotificationTypeId = notificationTypeId;
            return companyDiscountNotificatonHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyDiscountNotificatonHistoryId
        {
            get
            {
                return _CompanyDiscountNotificatonHistoryId;
            }
            set
            {
                if (_CompanyDiscountNotificatonHistoryId != value)
                {
                    OnCompanyDiscountNotificatonHistoryIdChanging(value);
                    ReportPropertyChanging("CompanyDiscountNotificatonHistoryId");
                    _CompanyDiscountNotificatonHistoryId = StructuralObject.SetValidValue(value, "CompanyDiscountNotificatonHistoryId");
                    ReportPropertyChanged("CompanyDiscountNotificatonHistoryId");
                    OnCompanyDiscountNotificatonHistoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyDiscountNotificatonHistoryId;
        partial void OnCompanyDiscountNotificatonHistoryIdChanging(global::System.Int32 value);
        partial void OnCompanyDiscountNotificatonHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotificationTypeId
        {
            get
            {
                return _NotificationTypeId;
            }
            set
            {
                OnNotificationTypeIdChanging(value);
                ReportPropertyChanging("NotificationTypeId");
                _NotificationTypeId = StructuralObject.SetValidValue(value, "NotificationTypeId");
                ReportPropertyChanged("NotificationTypeId");
                OnNotificationTypeIdChanged();
            }
        }
        private global::System.Int32 _NotificationTypeId;
        partial void OnNotificationTypeIdChanging(global::System.Int32 value);
        partial void OnNotificationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyDiscountNotificatonHistory_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyDiscountNotificatonHistory_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyDiscountNotificatonHistory_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyDiscountNotificatonHistory_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_CompanyDiscountNotificatonHistory_Companies", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="CompanyInventorySharingDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyInventorySharingDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyInventorySharingDetail object.
        /// </summary>
        /// <param name="companyInventorySharingDetailsId">Initial value of the CompanyInventorySharingDetailsId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="viewingCompanyId">Initial value of the ViewingCompanyId property.</param>
        /// <param name="companySharingStatusCodeId">Initial value of the CompanySharingStatusCodeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static CompanyInventorySharingDetail CreateCompanyInventorySharingDetail(global::System.Int32 companyInventorySharingDetailsId, global::System.Int32 companyId, global::System.Int32 viewingCompanyId, global::System.Int32 companySharingStatusCodeId, global::System.Boolean isActive)
        {
            CompanyInventorySharingDetail companyInventorySharingDetail = new CompanyInventorySharingDetail();
            companyInventorySharingDetail.CompanyInventorySharingDetailsId = companyInventorySharingDetailsId;
            companyInventorySharingDetail.CompanyId = companyId;
            companyInventorySharingDetail.ViewingCompanyId = viewingCompanyId;
            companyInventorySharingDetail.CompanySharingStatusCodeId = companySharingStatusCodeId;
            companyInventorySharingDetail.IsActive = isActive;
            return companyInventorySharingDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyInventorySharingDetailsId
        {
            get
            {
                return _CompanyInventorySharingDetailsId;
            }
            set
            {
                if (_CompanyInventorySharingDetailsId != value)
                {
                    OnCompanyInventorySharingDetailsIdChanging(value);
                    ReportPropertyChanging("CompanyInventorySharingDetailsId");
                    _CompanyInventorySharingDetailsId = StructuralObject.SetValidValue(value, "CompanyInventorySharingDetailsId");
                    ReportPropertyChanged("CompanyInventorySharingDetailsId");
                    OnCompanyInventorySharingDetailsIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyInventorySharingDetailsId;
        partial void OnCompanyInventorySharingDetailsIdChanging(global::System.Int32 value);
        partial void OnCompanyInventorySharingDetailsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewingCompanyId
        {
            get
            {
                return _ViewingCompanyId;
            }
            set
            {
                OnViewingCompanyIdChanging(value);
                ReportPropertyChanging("ViewingCompanyId");
                _ViewingCompanyId = StructuralObject.SetValidValue(value, "ViewingCompanyId");
                ReportPropertyChanged("ViewingCompanyId");
                OnViewingCompanyIdChanged();
            }
        }
        private global::System.Int32 _ViewingCompanyId;
        partial void OnViewingCompanyIdChanging(global::System.Int32 value);
        partial void OnViewingCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanySharingStatusCodeId
        {
            get
            {
                return _CompanySharingStatusCodeId;
            }
            set
            {
                OnCompanySharingStatusCodeIdChanging(value);
                ReportPropertyChanging("CompanySharingStatusCodeId");
                _CompanySharingStatusCodeId = StructuralObject.SetValidValue(value, "CompanySharingStatusCodeId");
                ReportPropertyChanged("CompanySharingStatusCodeId");
                OnCompanySharingStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _CompanySharingStatusCodeId;
        partial void OnCompanySharingStatusCodeIdChanging(global::System.Int32 value);
        partial void OnCompanySharingStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanySharingDetails_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanySharingDetails_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanySharingDetails_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanySharingDetails_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_CompanySharingDetails_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanySharingDetails_Companies1", "Company")]
        public Company Company1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanySharingDetails_Companies1", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanySharingDetails_Companies1", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> Company1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanySharingDetails_Companies1", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_CompanySharingDetails_Companies1", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="CompanyPaymentPackage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyPaymentPackage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyPaymentPackage object.
        /// </summary>
        /// <param name="companyPaymentPackageId">Initial value of the CompanyPaymentPackageId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="projectPaymentPackageTypeId">Initial value of the ProjectPaymentPackageTypeId property.</param>
        /// <param name="inventoryPaymentPackageTypeId">Initial value of the InventoryPaymentPackageTypeId property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="paymentDurationCodeId">Initial value of the PaymentDurationCodeId property.</param>
        /// <param name="isEducationalPackage">Initial value of the IsEducationalPackage property.</param>
        public static CompanyPaymentPackage CreateCompanyPaymentPackage(global::System.Int32 companyPaymentPackageId, global::System.Int32 companyId, global::System.Int32 projectPaymentPackageTypeId, global::System.Int32 inventoryPaymentPackageTypeId, global::System.DateTime startDate, global::System.Int32 paymentDurationCodeId, global::System.Boolean isEducationalPackage)
        {
            CompanyPaymentPackage companyPaymentPackage = new CompanyPaymentPackage();
            companyPaymentPackage.CompanyPaymentPackageId = companyPaymentPackageId;
            companyPaymentPackage.CompanyId = companyId;
            companyPaymentPackage.ProjectPaymentPackageTypeId = projectPaymentPackageTypeId;
            companyPaymentPackage.InventoryPaymentPackageTypeId = inventoryPaymentPackageTypeId;
            companyPaymentPackage.StartDate = startDate;
            companyPaymentPackage.PaymentDurationCodeId = paymentDurationCodeId;
            companyPaymentPackage.IsEducationalPackage = isEducationalPackage;
            return companyPaymentPackage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyPaymentPackageId
        {
            get
            {
                return _CompanyPaymentPackageId;
            }
            set
            {
                if (_CompanyPaymentPackageId != value)
                {
                    OnCompanyPaymentPackageIdChanging(value);
                    ReportPropertyChanging("CompanyPaymentPackageId");
                    _CompanyPaymentPackageId = StructuralObject.SetValidValue(value, "CompanyPaymentPackageId");
                    ReportPropertyChanged("CompanyPaymentPackageId");
                    OnCompanyPaymentPackageIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyPaymentPackageId;
        partial void OnCompanyPaymentPackageIdChanging(global::System.Int32 value);
        partial void OnCompanyPaymentPackageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectPaymentPackageTypeId
        {
            get
            {
                return _ProjectPaymentPackageTypeId;
            }
            set
            {
                OnProjectPaymentPackageTypeIdChanging(value);
                ReportPropertyChanging("ProjectPaymentPackageTypeId");
                _ProjectPaymentPackageTypeId = StructuralObject.SetValidValue(value, "ProjectPaymentPackageTypeId");
                ReportPropertyChanged("ProjectPaymentPackageTypeId");
                OnProjectPaymentPackageTypeIdChanged();
            }
        }
        private global::System.Int32 _ProjectPaymentPackageTypeId;
        partial void OnProjectPaymentPackageTypeIdChanging(global::System.Int32 value);
        partial void OnProjectPaymentPackageTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryPaymentPackageTypeId
        {
            get
            {
                return _InventoryPaymentPackageTypeId;
            }
            set
            {
                OnInventoryPaymentPackageTypeIdChanging(value);
                ReportPropertyChanging("InventoryPaymentPackageTypeId");
                _InventoryPaymentPackageTypeId = StructuralObject.SetValidValue(value, "InventoryPaymentPackageTypeId");
                ReportPropertyChanged("InventoryPaymentPackageTypeId");
                OnInventoryPaymentPackageTypeIdChanged();
            }
        }
        private global::System.Int32 _InventoryPaymentPackageTypeId;
        partial void OnInventoryPaymentPackageTypeIdChanging(global::System.Int32 value);
        partial void OnInventoryPaymentPackageTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentMethodCodeId
        {
            get
            {
                return _PaymentMethodCodeId;
            }
            set
            {
                OnPaymentMethodCodeIdChanging(value);
                ReportPropertyChanging("PaymentMethodCodeId");
                _PaymentMethodCodeId = StructuralObject.SetValidValue(value, "PaymentMethodCodeId");
                ReportPropertyChanged("PaymentMethodCodeId");
                OnPaymentMethodCodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentMethodCodeId;
        partial void OnPaymentMethodCodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentMethodCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentDurationCodeId
        {
            get
            {
                return _PaymentDurationCodeId;
            }
            set
            {
                OnPaymentDurationCodeIdChanging(value);
                ReportPropertyChanging("PaymentDurationCodeId");
                _PaymentDurationCodeId = StructuralObject.SetValidValue(value, "PaymentDurationCodeId");
                ReportPropertyChanged("PaymentDurationCodeId");
                OnPaymentDurationCodeIdChanged();
            }
        }
        private global::System.Int32 _PaymentDurationCodeId;
        partial void OnPaymentDurationCodeIdChanging(global::System.Int32 value);
        partial void OnPaymentDurationCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEducationalPackage
        {
            get
            {
                return _IsEducationalPackage;
            }
            set
            {
                OnIsEducationalPackageChanging(value);
                ReportPropertyChanging("IsEducationalPackage");
                _IsEducationalPackage = StructuralObject.SetValidValue(value, "IsEducationalPackage");
                ReportPropertyChanged("IsEducationalPackage");
                OnIsEducationalPackageChanged();
            }
        }
        private global::System.Boolean _IsEducationalPackage;
        partial void OnIsEducationalPackageChanging(global::System.Boolean value);
        partial void OnIsEducationalPackageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EducationalPosition
        {
            get
            {
                return _EducationalPosition;
            }
            set
            {
                OnEducationalPositionChanging(value);
                ReportPropertyChanging("EducationalPosition");
                _EducationalPosition = StructuralObject.SetValidValue(value, true, "EducationalPosition");
                ReportPropertyChanged("EducationalPosition");
                OnEducationalPositionChanged();
            }
        }
        private global::System.String _EducationalPosition;
        partial void OnEducationalPositionChanging(global::System.String value);
        partial void OnEducationalPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateDate;
        partial void OnLastUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_CompanyPaymentPackages_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_CompanyPaymentPackages_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_CompanyPaymentPackages_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_CompanyPaymentPackages_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_Codes1", "Code")]
        public Code Code1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_CompanyPaymentPackages_Codes1", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_CompanyPaymentPackages_Codes1", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> Code1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_CompanyPaymentPackages_Codes1", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_CompanyPaymentPackages_Codes1", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPackages_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyPackages_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyPackages_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyPackages_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_CompanyPackages_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_PaymentPackageTypes", "PaymentPackageType")]
        public PaymentPackageType PaymentPackageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes", "PaymentPackageType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes", "PaymentPackageType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentPackageType> PaymentPackageTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes", "PaymentPackageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentPackageType>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes", "PaymentPackageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_PaymentPackageTypes1", "PaymentPackageType")]
        public PaymentPackageType PaymentPackageType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes1", "PaymentPackageType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes1", "PaymentPackageType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentPackageType> PaymentPackageType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes1", "PaymentPackageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentPackageType>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes1", "PaymentPackageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_CompanyPaymentPackages", "CompanyPaymentSummary")]
        public EntityCollection<CompanyPaymentSummary> CompanyPaymentSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPaymentSummary>("StageBitz.Data.FK_CompanyPaymentSummaries_CompanyPaymentPackages", "CompanyPaymentSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPaymentSummary>("StageBitz.Data.FK_CompanyPaymentSummaries_CompanyPaymentPackages", "CompanyPaymentSummary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="CompanyPaymentSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyPaymentSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyPaymentSummary object.
        /// </summary>
        /// <param name="companyPaymentSummaryId">Initial value of the CompanyPaymentSummaryId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="isMonthlyAgentProcessed">Initial value of the IsMonthlyAgentProcessed property.</param>
        /// <param name="isImmidiateFutureRecordCreated">Initial value of the IsImmidiateFutureRecordCreated property.</param>
        /// <param name="shouldProcess">Initial value of the ShouldProcess property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="nextPaymentCycleStartingDate">Initial value of the NextPaymentCycleStartingDate property.</param>
        /// <param name="fromDate">Initial value of the FromDate property.</param>
        /// <param name="toDate">Initial value of the ToDate property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static CompanyPaymentSummary CreateCompanyPaymentSummary(global::System.Int32 companyPaymentSummaryId, global::System.Int32 companyId, global::System.Boolean isMonthlyAgentProcessed, global::System.Boolean isImmidiateFutureRecordCreated, global::System.Boolean shouldProcess, global::System.Decimal amount, global::System.DateTime nextPaymentCycleStartingDate, global::System.DateTime fromDate, global::System.DateTime toDate, global::System.DateTime createdDate, global::System.DateTime lastUpdatedDate)
        {
            CompanyPaymentSummary companyPaymentSummary = new CompanyPaymentSummary();
            companyPaymentSummary.CompanyPaymentSummaryId = companyPaymentSummaryId;
            companyPaymentSummary.CompanyId = companyId;
            companyPaymentSummary.IsMonthlyAgentProcessed = isMonthlyAgentProcessed;
            companyPaymentSummary.IsImmidiateFutureRecordCreated = isImmidiateFutureRecordCreated;
            companyPaymentSummary.ShouldProcess = shouldProcess;
            companyPaymentSummary.Amount = amount;
            companyPaymentSummary.NextPaymentCycleStartingDate = nextPaymentCycleStartingDate;
            companyPaymentSummary.FromDate = fromDate;
            companyPaymentSummary.ToDate = toDate;
            companyPaymentSummary.CreatedDate = createdDate;
            companyPaymentSummary.LastUpdatedDate = lastUpdatedDate;
            return companyPaymentSummary;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyPaymentSummaryId
        {
            get
            {
                return _CompanyPaymentSummaryId;
            }
            set
            {
                if (_CompanyPaymentSummaryId != value)
                {
                    OnCompanyPaymentSummaryIdChanging(value);
                    ReportPropertyChanging("CompanyPaymentSummaryId");
                    _CompanyPaymentSummaryId = StructuralObject.SetValidValue(value, "CompanyPaymentSummaryId");
                    ReportPropertyChanged("CompanyPaymentSummaryId");
                    OnCompanyPaymentSummaryIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyPaymentSummaryId;
        partial void OnCompanyPaymentSummaryIdChanging(global::System.Int32 value);
        partial void OnCompanyPaymentSummaryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMonthlyAgentProcessed
        {
            get
            {
                return _IsMonthlyAgentProcessed;
            }
            set
            {
                OnIsMonthlyAgentProcessedChanging(value);
                ReportPropertyChanging("IsMonthlyAgentProcessed");
                _IsMonthlyAgentProcessed = StructuralObject.SetValidValue(value, "IsMonthlyAgentProcessed");
                ReportPropertyChanged("IsMonthlyAgentProcessed");
                OnIsMonthlyAgentProcessedChanged();
            }
        }
        private global::System.Boolean _IsMonthlyAgentProcessed;
        partial void OnIsMonthlyAgentProcessedChanging(global::System.Boolean value);
        partial void OnIsMonthlyAgentProcessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsImmidiateFutureRecordCreated
        {
            get
            {
                return _IsImmidiateFutureRecordCreated;
            }
            set
            {
                OnIsImmidiateFutureRecordCreatedChanging(value);
                ReportPropertyChanging("IsImmidiateFutureRecordCreated");
                _IsImmidiateFutureRecordCreated = StructuralObject.SetValidValue(value, "IsImmidiateFutureRecordCreated");
                ReportPropertyChanged("IsImmidiateFutureRecordCreated");
                OnIsImmidiateFutureRecordCreatedChanged();
            }
        }
        private global::System.Boolean _IsImmidiateFutureRecordCreated;
        partial void OnIsImmidiateFutureRecordCreatedChanging(global::System.Boolean value);
        partial void OnIsImmidiateFutureRecordCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShouldProcess
        {
            get
            {
                return _ShouldProcess;
            }
            set
            {
                OnShouldProcessChanging(value);
                ReportPropertyChanging("ShouldProcess");
                _ShouldProcess = StructuralObject.SetValidValue(value, "ShouldProcess");
                ReportPropertyChanged("ShouldProcess");
                OnShouldProcessChanged();
            }
        }
        private global::System.Boolean _ShouldProcess;
        partial void OnShouldProcessChanging(global::System.Boolean value);
        partial void OnShouldProcessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DiscountCodeUsageId
        {
            get
            {
                return _DiscountCodeUsageId;
            }
            set
            {
                OnDiscountCodeUsageIdChanging(value);
                ReportPropertyChanging("DiscountCodeUsageId");
                _DiscountCodeUsageId = StructuralObject.SetValidValue(value, "DiscountCodeUsageId");
                ReportPropertyChanged("DiscountCodeUsageId");
                OnDiscountCodeUsageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DiscountCodeUsageId;
        partial void OnDiscountCodeUsageIdChanging(Nullable<global::System.Int32> value);
        partial void OnDiscountCodeUsageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime NextPaymentCycleStartingDate
        {
            get
            {
                return _NextPaymentCycleStartingDate;
            }
            set
            {
                OnNextPaymentCycleStartingDateChanging(value);
                ReportPropertyChanging("NextPaymentCycleStartingDate");
                _NextPaymentCycleStartingDate = StructuralObject.SetValidValue(value, "NextPaymentCycleStartingDate");
                ReportPropertyChanged("NextPaymentCycleStartingDate");
                OnNextPaymentCycleStartingDateChanged();
            }
        }
        private global::System.DateTime _NextPaymentCycleStartingDate;
        partial void OnNextPaymentCycleStartingDateChanging(global::System.DateTime value);
        partial void OnNextPaymentCycleStartingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value, "FromDate");
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private global::System.DateTime _FromDate;
        partial void OnFromDateChanging(global::System.DateTime value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value, "ToDate");
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private global::System.DateTime _ToDate;
        partial void OnToDateChanging(global::System.DateTime value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceId
        {
            get
            {
                return _InvoiceId;
            }
            set
            {
                OnInvoiceIdChanging(value);
                ReportPropertyChanging("InvoiceId");
                _InvoiceId = StructuralObject.SetValidValue(value, "InvoiceId");
                ReportPropertyChanged("InvoiceId");
                OnInvoiceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceId;
        partial void OnInvoiceIdChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentMethodCodeId
        {
            get
            {
                return _PaymentMethodCodeId;
            }
            set
            {
                OnPaymentMethodCodeIdChanging(value);
                ReportPropertyChanging("PaymentMethodCodeId");
                _PaymentMethodCodeId = StructuralObject.SetValidValue(value, "PaymentMethodCodeId");
                ReportPropertyChanged("PaymentMethodCodeId");
                OnPaymentMethodCodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentMethodCodeId;
        partial void OnPaymentMethodCodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentMethodCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyPaymentPackageId
        {
            get
            {
                return _CompanyPaymentPackageId;
            }
            set
            {
                OnCompanyPaymentPackageIdChanging(value);
                ReportPropertyChanging("CompanyPaymentPackageId");
                _CompanyPaymentPackageId = StructuralObject.SetValidValue(value, "CompanyPaymentPackageId");
                ReportPropertyChanged("CompanyPaymentPackageId");
                OnCompanyPaymentPackageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyPaymentPackageId;
        partial void OnCompanyPaymentPackageIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyPaymentPackageIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyPaymentSummaries_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyPaymentSummaries_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyPaymentSummaries_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_CompanyPaymentSummaries_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_CompanyPaymentPackages", "CompanyPaymentPackage")]
        public CompanyPaymentPackage CompanyPaymentPackage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentSummaries_CompanyPaymentPackages", "CompanyPaymentPackage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentSummaries_CompanyPaymentPackages", "CompanyPaymentPackage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyPaymentPackage> CompanyPaymentPackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentSummaries_CompanyPaymentPackages", "CompanyPaymentPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentSummaries_CompanyPaymentPackages", "CompanyPaymentPackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_DiscountCodeUsage", "DiscountCodeUsage")]
        public DiscountCodeUsage DiscountCodeUsage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountCodeUsage>("StageBitz.Data.FK_CompanyPaymentSummaries_DiscountCodeUsage", "DiscountCodeUsage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountCodeUsage>("StageBitz.Data.FK_CompanyPaymentSummaries_DiscountCodeUsage", "DiscountCodeUsage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DiscountCodeUsage> DiscountCodeUsageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountCodeUsage>("StageBitz.Data.FK_CompanyPaymentSummaries_DiscountCodeUsage", "DiscountCodeUsage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DiscountCodeUsage>("StageBitz.Data.FK_CompanyPaymentSummaries_DiscountCodeUsage", "DiscountCodeUsage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_Invoices", "Invoice")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("StageBitz.Data.FK_CompanyPaymentSummaries_Invoices", "Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("StageBitz.Data.FK_CompanyPaymentSummaries_Invoices", "Invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("StageBitz.Data.FK_CompanyPaymentSummaries_Invoices", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("StageBitz.Data.FK_CompanyPaymentSummaries_Invoices", "Invoice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="CompanyUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyUser object.
        /// </summary>
        /// <param name="companyUserId">Initial value of the CompanyUserId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static CompanyUser CreateCompanyUser(global::System.Int32 companyUserId, global::System.Int32 companyId, global::System.Int32 userId, global::System.Boolean isActive)
        {
            CompanyUser companyUser = new CompanyUser();
            companyUser.CompanyUserId = companyUserId;
            companyUser.CompanyId = companyId;
            companyUser.UserId = userId;
            companyUser.IsActive = isActive;
            return companyUser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyUserId
        {
            get
            {
                return _CompanyUserId;
            }
            set
            {
                if (_CompanyUserId != value)
                {
                    OnCompanyUserIdChanging(value);
                    ReportPropertyChanging("CompanyUserId");
                    _CompanyUserId = StructuralObject.SetValidValue(value, "CompanyUserId");
                    ReportPropertyChanged("CompanyUserId");
                    OnCompanyUserIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyUserId;
        partial void OnCompanyUserIdChanging(global::System.Int32 value);
        partial void OnCompanyUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyUsers_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyUsers_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyUsers_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_CompanyUsers_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_CompanyUsers_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyUserRole_CompanyUsers", "CompanyUserRole")]
        public EntityCollection<CompanyUserRole> CompanyUserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyUserRole>("StageBitz.Data.FK_CompanyUserRole_CompanyUsers", "CompanyUserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyUserRole>("StageBitz.Data.FK_CompanyUserRole_CompanyUsers", "CompanyUserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyUsers_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_CompanyUsers_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_CompanyUsers_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_CompanyUsers_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_CompanyUsers_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="CompanyUserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyUserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyUserRole object.
        /// </summary>
        /// <param name="companyUserRoleId">Initial value of the CompanyUserRoleId property.</param>
        /// <param name="companyUserId">Initial value of the CompanyUserId property.</param>
        /// <param name="companyUserTypeCodeId">Initial value of the CompanyUserTypeCodeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static CompanyUserRole CreateCompanyUserRole(global::System.Int32 companyUserRoleId, global::System.Int32 companyUserId, global::System.Int32 companyUserTypeCodeId, global::System.Boolean isActive)
        {
            CompanyUserRole companyUserRole = new CompanyUserRole();
            companyUserRole.CompanyUserRoleId = companyUserRoleId;
            companyUserRole.CompanyUserId = companyUserId;
            companyUserRole.CompanyUserTypeCodeId = companyUserTypeCodeId;
            companyUserRole.IsActive = isActive;
            return companyUserRole;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyUserRoleId
        {
            get
            {
                return _CompanyUserRoleId;
            }
            set
            {
                if (_CompanyUserRoleId != value)
                {
                    OnCompanyUserRoleIdChanging(value);
                    ReportPropertyChanging("CompanyUserRoleId");
                    _CompanyUserRoleId = StructuralObject.SetValidValue(value, "CompanyUserRoleId");
                    ReportPropertyChanged("CompanyUserRoleId");
                    OnCompanyUserRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyUserRoleId;
        partial void OnCompanyUserRoleIdChanging(global::System.Int32 value);
        partial void OnCompanyUserRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyUserId
        {
            get
            {
                return _CompanyUserId;
            }
            set
            {
                OnCompanyUserIdChanging(value);
                ReportPropertyChanging("CompanyUserId");
                _CompanyUserId = StructuralObject.SetValidValue(value, "CompanyUserId");
                ReportPropertyChanged("CompanyUserId");
                OnCompanyUserIdChanged();
            }
        }
        private global::System.Int32 _CompanyUserId;
        partial void OnCompanyUserIdChanging(global::System.Int32 value);
        partial void OnCompanyUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyUserTypeCodeId
        {
            get
            {
                return _CompanyUserTypeCodeId;
            }
            set
            {
                OnCompanyUserTypeCodeIdChanging(value);
                ReportPropertyChanging("CompanyUserTypeCodeId");
                _CompanyUserTypeCodeId = StructuralObject.SetValidValue(value, "CompanyUserTypeCodeId");
                ReportPropertyChanged("CompanyUserTypeCodeId");
                OnCompanyUserTypeCodeIdChanged();
            }
        }
        private global::System.Int32 _CompanyUserTypeCodeId;
        partial void OnCompanyUserTypeCodeIdChanging(global::System.Int32 value);
        partial void OnCompanyUserTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value, "LocationId");
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnLocationIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyUserRole_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_CompanyUserRole_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_CompanyUserRole_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_CompanyUserRole_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_CompanyUserRole_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyUserRole_CompanyUsers", "CompanyUser")]
        public CompanyUser CompanyUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyUser>("StageBitz.Data.FK_CompanyUserRole_CompanyUsers", "CompanyUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyUser>("StageBitz.Data.FK_CompanyUserRole_CompanyUsers", "CompanyUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyUser> CompanyUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyUser>("StageBitz.Data.FK_CompanyUserRole_CompanyUsers", "CompanyUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyUser>("StageBitz.Data.FK_CompanyUserRole_CompanyUsers", "CompanyUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyUserRole_Locations", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_CompanyUserRole_Locations", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_CompanyUserRole_Locations", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_CompanyUserRole_Locations", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("StageBitz.Data.FK_CompanyUserRole_Locations", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Country CreateCountry(global::System.Int32 countryId, global::System.Boolean isActive)
        {
            Country country = new Country();
            country.CountryId = countryId;
            country.IsActive = isActive;
            return country;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value, "CountryId");
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true, "CountryName");
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CultureString
        {
            get
            {
                return _CultureString;
            }
            set
            {
                OnCultureStringChanging(value);
                ReportPropertyChanging("CultureString");
                _CultureString = StructuralObject.SetValidValue(value, true, "CultureString");
                ReportPropertyChanged("CultureString");
                OnCultureStringChanged();
            }
        }
        private global::System.String _CultureString;
        partial void OnCultureStringChanging(global::System.String value);
        partial void OnCultureStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, true, "CountryCode");
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Companies_Countries", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("StageBitz.Data.FK_Companies_Countries", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("StageBitz.Data.FK_Companies_Countries", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Projects_Countries", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("StageBitz.Data.FK_Projects_Countries", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("StageBitz.Data.FK_Projects_Countries", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Users_Countries", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("StageBitz.Data.FK_Users_Countries", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("StageBitz.Data.FK_Users_Countries", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="CreditCardToken")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CreditCardToken : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreditCardToken object.
        /// </summary>
        /// <param name="creditCardTokenID">Initial value of the CreditCardTokenID property.</param>
        /// <param name="token">Initial value of the Token property.</param>
        /// <param name="relatedId">Initial value of the RelatedId property.</param>
        /// <param name="relatedTableName">Initial value of the RelatedTableName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static CreditCardToken CreateCreditCardToken(global::System.Int32 creditCardTokenID, global::System.Byte[] token, global::System.Int32 relatedId, global::System.String relatedTableName, global::System.Boolean isActive)
        {
            CreditCardToken creditCardToken = new CreditCardToken();
            creditCardToken.CreditCardTokenID = creditCardTokenID;
            creditCardToken.Token = token;
            creditCardToken.RelatedId = relatedId;
            creditCardToken.RelatedTableName = relatedTableName;
            creditCardToken.IsActive = isActive;
            return creditCardToken;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditCardTokenID
        {
            get
            {
                return _CreditCardTokenID;
            }
            set
            {
                if (_CreditCardTokenID != value)
                {
                    OnCreditCardTokenIDChanging(value);
                    ReportPropertyChanging("CreditCardTokenID");
                    _CreditCardTokenID = StructuralObject.SetValidValue(value, "CreditCardTokenID");
                    ReportPropertyChanged("CreditCardTokenID");
                    OnCreditCardTokenIDChanged();
                }
            }
        }
        private global::System.Int32 _CreditCardTokenID;
        partial void OnCreditCardTokenIDChanging(global::System.Int32 value);
        partial void OnCreditCardTokenIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Token
        {
            get
            {
                return StructuralObject.GetValidValue(_Token);
            }
            set
            {
                OnTokenChanging(value);
                ReportPropertyChanging("Token");
                _Token = StructuralObject.SetValidValue(value, false, "Token");
                ReportPropertyChanged("Token");
                OnTokenChanged();
            }
        }
        private global::System.Byte[] _Token;
        partial void OnTokenChanging(global::System.Byte[] value);
        partial void OnTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private global::System.Int32 _RelatedId;
        partial void OnRelatedIdChanging(global::System.Int32 value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelatedTableName
        {
            get
            {
                return _RelatedTableName;
            }
            set
            {
                OnRelatedTableNameChanging(value);
                ReportPropertyChanging("RelatedTableName");
                _RelatedTableName = StructuralObject.SetValidValue(value, false, "RelatedTableName");
                ReportPropertyChanged("RelatedTableName");
                OnRelatedTableNameChanged();
            }
        }
        private global::System.String _RelatedTableName;
        partial void OnRelatedTableNameChanging(global::System.String value);
        partial void OnRelatedTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastFourDigitsCreditCardNumber
        {
            get
            {
                return StructuralObject.GetValidValue(_LastFourDigitsCreditCardNumber);
            }
            set
            {
                OnLastFourDigitsCreditCardNumberChanging(value);
                ReportPropertyChanging("LastFourDigitsCreditCardNumber");
                _LastFourDigitsCreditCardNumber = StructuralObject.SetValidValue(value, true, "LastFourDigitsCreditCardNumber");
                ReportPropertyChanged("LastFourDigitsCreditCardNumber");
                OnLastFourDigitsCreditCardNumberChanged();
            }
        }
        private global::System.Byte[] _LastFourDigitsCreditCardNumber;
        partial void OnLastFourDigitsCreditCardNumberChanging(global::System.Byte[] value);
        partial void OnLastFourDigitsCreditCardNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_PaymentLogs_CreditCardTokens", "PaymentLog")]
        public EntityCollection<PaymentLog> PaymentLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentLog>("StageBitz.Data.FK_PaymentLogs_CreditCardTokens", "PaymentLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentLog>("StageBitz.Data.FK_PaymentLogs_CreditCardTokens", "PaymentLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="DailyBookingNotification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DailyBookingNotification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DailyBookingNotification object.
        /// </summary>
        /// <param name="dailyBookingNotificationId">Initial value of the DailyBookingNotificationId property.</param>
        /// <param name="bookingId">Initial value of the BookingId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="isInventoryManager">Initial value of the IsInventoryManager property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        /// <param name="lastUpdatedByUserId">Initial value of the LastUpdatedByUserId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="companyBookingNumberId">Initial value of the CompanyBookingNumberId property.</param>
        public static DailyBookingNotification CreateDailyBookingNotification(global::System.Int32 dailyBookingNotificationId, global::System.Int32 bookingId, global::System.Int32 userId, global::System.Boolean isInventoryManager, global::System.DateTime lastUpdatedDate, global::System.Int32 lastUpdatedByUserId, global::System.DateTime createdDate, global::System.Int32 createdByUserId, global::System.Int32 companyBookingNumberId)
        {
            DailyBookingNotification dailyBookingNotification = new DailyBookingNotification();
            dailyBookingNotification.DailyBookingNotificationId = dailyBookingNotificationId;
            dailyBookingNotification.BookingId = bookingId;
            dailyBookingNotification.UserId = userId;
            dailyBookingNotification.IsInventoryManager = isInventoryManager;
            dailyBookingNotification.LastUpdatedDate = lastUpdatedDate;
            dailyBookingNotification.LastUpdatedByUserId = lastUpdatedByUserId;
            dailyBookingNotification.CreatedDate = createdDate;
            dailyBookingNotification.CreatedByUserId = createdByUserId;
            dailyBookingNotification.CompanyBookingNumberId = companyBookingNumberId;
            return dailyBookingNotification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DailyBookingNotificationId
        {
            get
            {
                return _DailyBookingNotificationId;
            }
            set
            {
                if (_DailyBookingNotificationId != value)
                {
                    OnDailyBookingNotificationIdChanging(value);
                    ReportPropertyChanging("DailyBookingNotificationId");
                    _DailyBookingNotificationId = StructuralObject.SetValidValue(value, "DailyBookingNotificationId");
                    ReportPropertyChanged("DailyBookingNotificationId");
                    OnDailyBookingNotificationIdChanged();
                }
            }
        }
        private global::System.Int32 _DailyBookingNotificationId;
        partial void OnDailyBookingNotificationIdChanging(global::System.Int32 value);
        partial void OnDailyBookingNotificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingId
        {
            get
            {
                return _BookingId;
            }
            set
            {
                OnBookingIdChanging(value);
                ReportPropertyChanging("BookingId");
                _BookingId = StructuralObject.SetValidValue(value, "BookingId");
                ReportPropertyChanged("BookingId");
                OnBookingIdChanged();
            }
        }
        private global::System.Int32 _BookingId;
        partial void OnBookingIdChanging(global::System.Int32 value);
        partial void OnBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInventoryManager
        {
            get
            {
                return _IsInventoryManager;
            }
            set
            {
                OnIsInventoryManagerChanging(value);
                ReportPropertyChanging("IsInventoryManager");
                _IsInventoryManager = StructuralObject.SetValidValue(value, "IsInventoryManager");
                ReportPropertyChanged("IsInventoryManager");
                OnIsInventoryManagerChanged();
            }
        }
        private global::System.Boolean _IsInventoryManager;
        partial void OnIsInventoryManagerChanging(global::System.Boolean value);
        partial void OnIsInventoryManagerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyBookingNumberId
        {
            get
            {
                return _CompanyBookingNumberId;
            }
            set
            {
                OnCompanyBookingNumberIdChanging(value);
                ReportPropertyChanging("CompanyBookingNumberId");
                _CompanyBookingNumberId = StructuralObject.SetValidValue(value, "CompanyBookingNumberId");
                ReportPropertyChanged("CompanyBookingNumberId");
                OnCompanyBookingNumberIdChanged();
            }
        }
        private global::System.Int32 _CompanyBookingNumberId;
        partial void OnCompanyBookingNumberIdChanging(global::System.Int32 value);
        partial void OnCompanyBookingNumberIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_DailyBookingNotifications_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_DailyBookingNotifications_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_DailyBookingNotifications_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_DailyBookingNotifications_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_DailyBookingNotifications_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_DailyBookingNotifications_Bookings", "Booking")]
        public Booking Booking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("StageBitz.Data.FK_DailyBookingNotifications_Bookings", "Booking").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("StageBitz.Data.FK_DailyBookingNotifications_Bookings", "Booking").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Booking> BookingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("StageBitz.Data.FK_DailyBookingNotifications_Bookings", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Booking>("StageBitz.Data.FK_DailyBookingNotifications_Bookings", "Booking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_DailyBookingNotifications_CompanyBookingNumbers", "CompanyBookingNumber")]
        public CompanyBookingNumber CompanyBookingNumber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyBookingNumber>("StageBitz.Data.FK_DailyBookingNotifications_CompanyBookingNumbers", "CompanyBookingNumber").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyBookingNumber>("StageBitz.Data.FK_DailyBookingNotifications_CompanyBookingNumbers", "CompanyBookingNumber").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyBookingNumber> CompanyBookingNumberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyBookingNumber>("StageBitz.Data.FK_DailyBookingNotifications_CompanyBookingNumbers", "CompanyBookingNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyBookingNumber>("StageBitz.Data.FK_DailyBookingNotifications_CompanyBookingNumbers", "CompanyBookingNumber", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="DiscountCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DiscountCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DiscountCode object.
        /// </summary>
        /// <param name="discountCodeID">Initial value of the DiscountCodeID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="instanceCount">Initial value of the InstanceCount property.</param>
        /// <param name="discount">Initial value of the Discount property.</param>
        /// <param name="expireDate">Initial value of the ExpireDate property.</param>
        public static DiscountCode CreateDiscountCode(global::System.Int32 discountCodeID, global::System.String code, global::System.Int32 duration, global::System.Int32 instanceCount, global::System.Decimal discount, global::System.DateTime expireDate)
        {
            DiscountCode discountCode = new DiscountCode();
            discountCode.DiscountCodeID = discountCodeID;
            discountCode.Code = code;
            discountCode.Duration = duration;
            discountCode.InstanceCount = instanceCount;
            discountCode.Discount = discount;
            discountCode.ExpireDate = expireDate;
            return discountCode;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiscountCodeID
        {
            get
            {
                return _DiscountCodeID;
            }
            set
            {
                if (_DiscountCodeID != value)
                {
                    OnDiscountCodeIDChanging(value);
                    ReportPropertyChanging("DiscountCodeID");
                    _DiscountCodeID = StructuralObject.SetValidValue(value, "DiscountCodeID");
                    ReportPropertyChanged("DiscountCodeID");
                    OnDiscountCodeIDChanged();
                }
            }
        }
        private global::System.Int32 _DiscountCodeID;
        partial void OnDiscountCodeIDChanging(global::System.Int32 value);
        partial void OnDiscountCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value, "Duration");
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int32 _Duration;
        partial void OnDurationChanging(global::System.Int32 value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceCount
        {
            get
            {
                return _InstanceCount;
            }
            set
            {
                OnInstanceCountChanging(value);
                ReportPropertyChanging("InstanceCount");
                _InstanceCount = StructuralObject.SetValidValue(value, "InstanceCount");
                ReportPropertyChanged("InstanceCount");
                OnInstanceCountChanged();
            }
        }
        private global::System.Int32 _InstanceCount;
        partial void OnInstanceCountChanging(global::System.Int32 value);
        partial void OnInstanceCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value, "Discount");
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private global::System.Decimal _Discount;
        partial void OnDiscountChanging(global::System.Decimal value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value, "ExpireDate");
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private global::System.DateTime _ExpireDate;
        partial void OnExpireDateChanging(global::System.DateTime value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_DiscountCodeUsage_DiscountCodes", "DiscountCodeUsage")]
        public EntityCollection<DiscountCodeUsage> DiscountCodeUsages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DiscountCodeUsage>("StageBitz.Data.FK_DiscountCodeUsage_DiscountCodes", "DiscountCodeUsage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DiscountCodeUsage>("StageBitz.Data.FK_DiscountCodeUsage_DiscountCodes", "DiscountCodeUsage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="DiscountCodeUsage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DiscountCodeUsage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DiscountCodeUsage object.
        /// </summary>
        /// <param name="discountCodeUsageId">Initial value of the DiscountCodeUsageId property.</param>
        /// <param name="discountCodeId">Initial value of the DiscountCodeId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="isAdminApplied">Initial value of the IsAdminApplied property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static DiscountCodeUsage CreateDiscountCodeUsage(global::System.Int32 discountCodeUsageId, global::System.Int32 discountCodeId, global::System.Int32 companyId, global::System.DateTime endDate, global::System.Boolean isAdminApplied, global::System.Boolean isActive)
        {
            DiscountCodeUsage discountCodeUsage = new DiscountCodeUsage();
            discountCodeUsage.DiscountCodeUsageId = discountCodeUsageId;
            discountCodeUsage.DiscountCodeId = discountCodeId;
            discountCodeUsage.CompanyId = companyId;
            discountCodeUsage.EndDate = endDate;
            discountCodeUsage.IsAdminApplied = isAdminApplied;
            discountCodeUsage.IsActive = isActive;
            return discountCodeUsage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiscountCodeUsageId
        {
            get
            {
                return _DiscountCodeUsageId;
            }
            set
            {
                if (_DiscountCodeUsageId != value)
                {
                    OnDiscountCodeUsageIdChanging(value);
                    ReportPropertyChanging("DiscountCodeUsageId");
                    _DiscountCodeUsageId = StructuralObject.SetValidValue(value, "DiscountCodeUsageId");
                    ReportPropertyChanged("DiscountCodeUsageId");
                    OnDiscountCodeUsageIdChanged();
                }
            }
        }
        private global::System.Int32 _DiscountCodeUsageId;
        partial void OnDiscountCodeUsageIdChanging(global::System.Int32 value);
        partial void OnDiscountCodeUsageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiscountCodeId
        {
            get
            {
                return _DiscountCodeId;
            }
            set
            {
                OnDiscountCodeIdChanging(value);
                ReportPropertyChanging("DiscountCodeId");
                _DiscountCodeId = StructuralObject.SetValidValue(value, "DiscountCodeId");
                ReportPropertyChanged("DiscountCodeId");
                OnDiscountCodeIdChanged();
            }
        }
        private global::System.Int32 _DiscountCodeId;
        partial void OnDiscountCodeIdChanging(global::System.Int32 value);
        partial void OnDiscountCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdminApplied
        {
            get
            {
                return _IsAdminApplied;
            }
            set
            {
                OnIsAdminAppliedChanging(value);
                ReportPropertyChanging("IsAdminApplied");
                _IsAdminApplied = StructuralObject.SetValidValue(value, "IsAdminApplied");
                ReportPropertyChanged("IsAdminApplied");
                OnIsAdminAppliedChanged();
            }
        }
        private global::System.Boolean _IsAdminApplied;
        partial void OnIsAdminAppliedChanging(global::System.Boolean value);
        partial void OnIsAdminAppliedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_DiscountCodeUsage_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_DiscountCodeUsage_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_DiscountCodeUsage_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_DiscountCodeUsage_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_DiscountCodeUsage_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_DiscountCodeUsage", "CompanyPaymentSummary")]
        public EntityCollection<CompanyPaymentSummary> CompanyPaymentSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPaymentSummary>("StageBitz.Data.FK_CompanyPaymentSummaries_DiscountCodeUsage", "CompanyPaymentSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPaymentSummary>("StageBitz.Data.FK_CompanyPaymentSummaries_DiscountCodeUsage", "CompanyPaymentSummary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_DiscountCodeUsage_DiscountCodes", "DiscountCode")]
        public DiscountCode DiscountCode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountCode>("StageBitz.Data.FK_DiscountCodeUsage_DiscountCodes", "DiscountCode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountCode>("StageBitz.Data.FK_DiscountCodeUsage_DiscountCodes", "DiscountCode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DiscountCode> DiscountCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountCode>("StageBitz.Data.FK_DiscountCodeUsage_DiscountCodes", "DiscountCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DiscountCode>("StageBitz.Data.FK_DiscountCodeUsage_DiscountCodes", "DiscountCode", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="DocumentMedia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentMedia : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentMedia object.
        /// </summary>
        /// <param name="documentMediaId">Initial value of the DocumentMediaId property.</param>
        /// <param name="relatedTableName">Initial value of the RelatedTableName property.</param>
        /// <param name="relatedId">Initial value of the RelatedId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="isImageFile">Initial value of the IsImageFile property.</param>
        public static DocumentMedia CreateDocumentMedia(global::System.Int32 documentMediaId, global::System.String relatedTableName, global::System.Int32 relatedId, global::System.Int32 sortOrder, global::System.Boolean isImageFile)
        {
            DocumentMedia documentMedia = new DocumentMedia();
            documentMedia.DocumentMediaId = documentMediaId;
            documentMedia.RelatedTableName = relatedTableName;
            documentMedia.RelatedId = relatedId;
            documentMedia.SortOrder = sortOrder;
            documentMedia.IsImageFile = isImageFile;
            return documentMedia;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentMediaId
        {
            get
            {
                return _DocumentMediaId;
            }
            set
            {
                if (_DocumentMediaId != value)
                {
                    OnDocumentMediaIdChanging(value);
                    ReportPropertyChanging("DocumentMediaId");
                    _DocumentMediaId = StructuralObject.SetValidValue(value, "DocumentMediaId");
                    ReportPropertyChanged("DocumentMediaId");
                    OnDocumentMediaIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentMediaId;
        partial void OnDocumentMediaIdChanging(global::System.Int32 value);
        partial void OnDocumentMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelatedTableName
        {
            get
            {
                return _RelatedTableName;
            }
            set
            {
                OnRelatedTableNameChanging(value);
                ReportPropertyChanging("RelatedTableName");
                _RelatedTableName = StructuralObject.SetValidValue(value, false, "RelatedTableName");
                ReportPropertyChanged("RelatedTableName");
                OnRelatedTableNameChanged();
            }
        }
        private global::System.String _RelatedTableName;
        partial void OnRelatedTableNameChanging(global::System.String value);
        partial void OnRelatedTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private global::System.Int32 _RelatedId;
        partial void OnRelatedIdChanging(global::System.Int32 value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] DocumentMediaContent
        {
            get
            {
                return StructuralObject.GetValidValue(_DocumentMediaContent);
            }
            set
            {
                OnDocumentMediaContentChanging(value);
                ReportPropertyChanging("DocumentMediaContent");
                _DocumentMediaContent = StructuralObject.SetValidValue(value, true, "DocumentMediaContent");
                ReportPropertyChanged("DocumentMediaContent");
                OnDocumentMediaContentChanged();
            }
        }
        private global::System.Byte[] _DocumentMediaContent;
        partial void OnDocumentMediaContentChanging(global::System.Byte[] value);
        partial void OnDocumentMediaContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Thumbnail
        {
            get
            {
                return StructuralObject.GetValidValue(_Thumbnail);
            }
            set
            {
                OnThumbnailChanging(value);
                ReportPropertyChanging("Thumbnail");
                _Thumbnail = StructuralObject.SetValidValue(value, true, "Thumbnail");
                ReportPropertyChanged("Thumbnail");
                OnThumbnailChanged();
            }
        }
        private global::System.Byte[] _Thumbnail;
        partial void OnThumbnailChanging(global::System.Byte[] value);
        partial void OnThumbnailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileExtension
        {
            get
            {
                return _FileExtension;
            }
            set
            {
                OnFileExtensionChanging(value);
                ReportPropertyChanging("FileExtension");
                _FileExtension = StructuralObject.SetValidValue(value, true, "FileExtension");
                ReportPropertyChanged("FileExtension");
                OnFileExtensionChanged();
            }
        }
        private global::System.String _FileExtension;
        partial void OnFileExtensionChanging(global::System.String value);
        partial void OnFileExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsImageFile
        {
            get
            {
                return _IsImageFile;
            }
            set
            {
                OnIsImageFileChanging(value);
                ReportPropertyChanging("IsImageFile");
                _IsImageFile = StructuralObject.SetValidValue(value, "IsImageFile");
                ReportPropertyChanged("IsImageFile");
                OnIsImageFileChanged();
            }
        }
        private global::System.Boolean _IsImageFile;
        partial void OnIsImageFileChanging(global::System.Boolean value);
        partial void OnIsImageFileChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InventoryMobileDocumentMedia_InventoryMobileDocumentMedia", "InventoryMobileDocumentMedia")]
        public EntityCollection<InventoryMobileDocumentMedia> InventoryMobileDocumentMedias
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryMobileDocumentMedia>("StageBitz.Data.FK_InventoryMobileDocumentMedia_InventoryMobileDocumentMedia", "InventoryMobileDocumentMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryMobileDocumentMedia>("StageBitz.Data.FK_InventoryMobileDocumentMedia_InventoryMobileDocumentMedia", "InventoryMobileDocumentMedia", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefItemDocumentMedia_DocumentMedia", "ItemBriefItemDocumentMedia")]
        public EntityCollection<ItemBriefItemDocumentMedia> ItemBriefItemDocumentMedias
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBriefItemDocumentMedia>("StageBitz.Data.FK_ItemBriefItemDocumentMedia_DocumentMedia", "ItemBriefItemDocumentMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBriefItemDocumentMedia>("StageBitz.Data.FK_ItemBriefItemDocumentMedia_DocumentMedia", "ItemBriefItemDocumentMedia", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Email")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Email : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Email object.
        /// </summary>
        /// <param name="emailId">Initial value of the EmailId property.</param>
        /// <param name="toAddress">Initial value of the ToAddress property.</param>
        /// <param name="failureCount">Initial value of the FailureCount property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Email CreateEmail(global::System.Int32 emailId, global::System.String toAddress, global::System.Int32 failureCount, global::System.DateTime createdDate)
        {
            Email email = new Email();
            email.EmailId = emailId;
            email.ToAddress = toAddress;
            email.FailureCount = failureCount;
            email.CreatedDate = createdDate;
            return email;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailId
        {
            get
            {
                return _EmailId;
            }
            set
            {
                if (_EmailId != value)
                {
                    OnEmailIdChanging(value);
                    ReportPropertyChanging("EmailId");
                    _EmailId = StructuralObject.SetValidValue(value, "EmailId");
                    ReportPropertyChanged("EmailId");
                    OnEmailIdChanged();
                }
            }
        }
        private global::System.Int32 _EmailId;
        partial void OnEmailIdChanging(global::System.Int32 value);
        partial void OnEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ToAddress
        {
            get
            {
                return _ToAddress;
            }
            set
            {
                OnToAddressChanging(value);
                ReportPropertyChanging("ToAddress");
                _ToAddress = StructuralObject.SetValidValue(value, false, "ToAddress");
                ReportPropertyChanged("ToAddress");
                OnToAddressChanged();
            }
        }
        private global::System.String _ToAddress;
        partial void OnToAddressChanging(global::System.String value);
        partial void OnToAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true, "Body");
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailureCount
        {
            get
            {
                return _FailureCount;
            }
            set
            {
                OnFailureCountChanging(value);
                ReportPropertyChanging("FailureCount");
                _FailureCount = StructuralObject.SetValidValue(value, "FailureCount");
                ReportPropertyChanged("FailureCount");
                OnFailureCountChanged();
            }
        }
        private global::System.Int32 _FailureCount;
        partial void OnFailureCountChanging(global::System.Int32 value);
        partial void OnFailureCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailType
        {
            get
            {
                return _EmailType;
            }
            set
            {
                OnEmailTypeChanging(value);
                ReportPropertyChanging("EmailType");
                _EmailType = StructuralObject.SetValidValue(value, true, "EmailType");
                ReportPropertyChanged("EmailType");
                OnEmailTypeChanged();
            }
        }
        private global::System.String _EmailType;
        partial void OnEmailTypeChanging(global::System.String value);
        partial void OnEmailTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RelatedId;
        partial void OnRelatedIdChanging(Nullable<global::System.Int32> value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SentDate
        {
            get
            {
                return _SentDate;
            }
            set
            {
                OnSentDateChanging(value);
                ReportPropertyChanging("SentDate");
                _SentDate = StructuralObject.SetValidValue(value, "SentDate");
                ReportPropertyChanged("SentDate");
                OnSentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SentDate;
        partial void OnSentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastRetryDate
        {
            get
            {
                return _LastRetryDate;
            }
            set
            {
                OnLastRetryDateChanging(value);
                ReportPropertyChanging("LastRetryDate");
                _LastRetryDate = StructuralObject.SetValidValue(value, "LastRetryDate");
                ReportPropertyChanged("LastRetryDate");
                OnLastRetryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastRetryDate;
        partial void OnLastRetryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastRetryDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="EmailChangeRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailChangeRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailChangeRequest object.
        /// </summary>
        /// <param name="emailChangeRequestId">Initial value of the EmailChangeRequestId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="statusCode">Initial value of the StatusCode property.</param>
        public static EmailChangeRequest CreateEmailChangeRequest(global::System.Int32 emailChangeRequestId, global::System.Int32 userId, global::System.String email, global::System.Int32 statusCode)
        {
            EmailChangeRequest emailChangeRequest = new EmailChangeRequest();
            emailChangeRequest.EmailChangeRequestId = emailChangeRequestId;
            emailChangeRequest.UserId = userId;
            emailChangeRequest.Email = email;
            emailChangeRequest.StatusCode = statusCode;
            return emailChangeRequest;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailChangeRequestId
        {
            get
            {
                return _EmailChangeRequestId;
            }
            set
            {
                if (_EmailChangeRequestId != value)
                {
                    OnEmailChangeRequestIdChanging(value);
                    ReportPropertyChanging("EmailChangeRequestId");
                    _EmailChangeRequestId = StructuralObject.SetValidValue(value, "EmailChangeRequestId");
                    ReportPropertyChanged("EmailChangeRequestId");
                    OnEmailChangeRequestIdChanged();
                }
            }
        }
        private global::System.Int32 _EmailChangeRequestId;
        partial void OnEmailChangeRequestIdChanging(global::System.Int32 value);
        partial void OnEmailChangeRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusCode
        {
            get
            {
                return _StatusCode;
            }
            set
            {
                OnStatusCodeChanging(value);
                ReportPropertyChanging("StatusCode");
                _StatusCode = StructuralObject.SetValidValue(value, "StatusCode");
                ReportPropertyChanged("StatusCode");
                OnStatusCodeChanged();
            }
        }
        private global::System.Int32 _StatusCode;
        partial void OnStatusCodeChanging(global::System.Int32 value);
        partial void OnStatusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_EmailChangeRequests_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_EmailChangeRequests_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_EmailChangeRequests_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_EmailChangeRequests_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_EmailChangeRequests_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="EmailHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailHistory object.
        /// </summary>
        /// <param name="emailHistoryId">Initial value of the EmailHistoryId property.</param>
        /// <param name="relatedTable">Initial value of the RelatedTable property.</param>
        /// <param name="relatedId">Initial value of the RelatedId property.</param>
        /// <param name="emailTemplateTypeCodeId">Initial value of the EmailTemplateTypeCodeId property.</param>
        public static EmailHistory CreateEmailHistory(global::System.Int32 emailHistoryId, global::System.String relatedTable, global::System.Int32 relatedId, global::System.Int32 emailTemplateTypeCodeId)
        {
            EmailHistory emailHistory = new EmailHistory();
            emailHistory.EmailHistoryId = emailHistoryId;
            emailHistory.RelatedTable = relatedTable;
            emailHistory.RelatedId = relatedId;
            emailHistory.EmailTemplateTypeCodeId = emailTemplateTypeCodeId;
            return emailHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailHistoryId
        {
            get
            {
                return _EmailHistoryId;
            }
            set
            {
                if (_EmailHistoryId != value)
                {
                    OnEmailHistoryIdChanging(value);
                    ReportPropertyChanging("EmailHistoryId");
                    _EmailHistoryId = StructuralObject.SetValidValue(value, "EmailHistoryId");
                    ReportPropertyChanged("EmailHistoryId");
                    OnEmailHistoryIdChanged();
                }
            }
        }
        private global::System.Int32 _EmailHistoryId;
        partial void OnEmailHistoryIdChanging(global::System.Int32 value);
        partial void OnEmailHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelatedTable
        {
            get
            {
                return _RelatedTable;
            }
            set
            {
                OnRelatedTableChanging(value);
                ReportPropertyChanging("RelatedTable");
                _RelatedTable = StructuralObject.SetValidValue(value, false, "RelatedTable");
                ReportPropertyChanged("RelatedTable");
                OnRelatedTableChanged();
            }
        }
        private global::System.String _RelatedTable;
        partial void OnRelatedTableChanging(global::System.String value);
        partial void OnRelatedTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private global::System.Int32 _RelatedId;
        partial void OnRelatedIdChanging(global::System.Int32 value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailTemplateTypeCodeId
        {
            get
            {
                return _EmailTemplateTypeCodeId;
            }
            set
            {
                OnEmailTemplateTypeCodeIdChanging(value);
                ReportPropertyChanging("EmailTemplateTypeCodeId");
                _EmailTemplateTypeCodeId = StructuralObject.SetValidValue(value, "EmailTemplateTypeCodeId");
                ReportPropertyChanged("EmailTemplateTypeCodeId");
                OnEmailTemplateTypeCodeIdChanged();
            }
        }
        private global::System.Int32 _EmailTemplateTypeCodeId;
        partial void OnEmailTemplateTypeCodeIdChanging(global::System.Int32 value);
        partial void OnEmailTemplateTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="EmailTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailTemplate object.
        /// </summary>
        /// <param name="emailTemplateId">Initial value of the EmailTemplateId property.</param>
        /// <param name="emailTemplateTypeCodeId">Initial value of the EmailTemplateTypeCodeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static EmailTemplate CreateEmailTemplate(global::System.Int32 emailTemplateId, global::System.Int32 emailTemplateTypeCodeId, global::System.Boolean isActive)
        {
            EmailTemplate emailTemplate = new EmailTemplate();
            emailTemplate.EmailTemplateId = emailTemplateId;
            emailTemplate.EmailTemplateTypeCodeId = emailTemplateTypeCodeId;
            emailTemplate.IsActive = isActive;
            return emailTemplate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailTemplateId
        {
            get
            {
                return _EmailTemplateId;
            }
            set
            {
                if (_EmailTemplateId != value)
                {
                    OnEmailTemplateIdChanging(value);
                    ReportPropertyChanging("EmailTemplateId");
                    _EmailTemplateId = StructuralObject.SetValidValue(value, "EmailTemplateId");
                    ReportPropertyChanged("EmailTemplateId");
                    OnEmailTemplateIdChanged();
                }
            }
        }
        private global::System.Int32 _EmailTemplateId;
        partial void OnEmailTemplateIdChanging(global::System.Int32 value);
        partial void OnEmailTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailTemplateTypeCodeId
        {
            get
            {
                return _EmailTemplateTypeCodeId;
            }
            set
            {
                OnEmailTemplateTypeCodeIdChanging(value);
                ReportPropertyChanging("EmailTemplateTypeCodeId");
                _EmailTemplateTypeCodeId = StructuralObject.SetValidValue(value, "EmailTemplateTypeCodeId");
                ReportPropertyChanged("EmailTemplateTypeCodeId");
                OnEmailTemplateTypeCodeIdChanged();
            }
        }
        private global::System.Int32 _EmailTemplateTypeCodeId;
        partial void OnEmailTemplateTypeCodeIdChanging(global::System.Int32 value);
        partial void OnEmailTemplateTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageBody
        {
            get
            {
                return _MessageBody;
            }
            set
            {
                OnMessageBodyChanging(value);
                ReportPropertyChanging("MessageBody");
                _MessageBody = StructuralObject.SetValidValue(value, true, "MessageBody");
                ReportPropertyChanged("MessageBody");
                OnMessageBodyChanged();
            }
        }
        private global::System.String _MessageBody;
        partial void OnMessageBodyChanging(global::System.String value);
        partial void OnMessageBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_EmailTemplates_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_EmailTemplates_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_EmailTemplates_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_EmailTemplates_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_EmailTemplates_Codes", "Code", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ExportFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExportFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExportFile object.
        /// </summary>
        /// <param name="exportFileId">Initial value of the ExportFileId property.</param>
        /// <param name="relatedTable">Initial value of the RelatedTable property.</param>
        /// <param name="relatedId">Initial value of the RelatedId property.</param>
        /// <param name="exportFileStatusCodeId">Initial value of the ExportFileStatusCodeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdatedByUserId">Initial value of the LastUpdatedByUserId property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        /// <param name="fileSize">Initial value of the FileSize property.</param>
        public static ExportFile CreateExportFile(global::System.Int32 exportFileId, global::System.String relatedTable, global::System.Int32 relatedId, global::System.Int32 exportFileStatusCodeId, global::System.Boolean isActive, global::System.Int32 createdByUserId, global::System.DateTime createdDate, global::System.Int32 lastUpdatedByUserId, global::System.DateTime lastUpdatedDate, global::System.Int64 fileSize)
        {
            ExportFile exportFile = new ExportFile();
            exportFile.ExportFileId = exportFileId;
            exportFile.RelatedTable = relatedTable;
            exportFile.RelatedId = relatedId;
            exportFile.ExportFileStatusCodeId = exportFileStatusCodeId;
            exportFile.IsActive = isActive;
            exportFile.CreatedByUserId = createdByUserId;
            exportFile.CreatedDate = createdDate;
            exportFile.LastUpdatedByUserId = lastUpdatedByUserId;
            exportFile.LastUpdatedDate = lastUpdatedDate;
            exportFile.FileSize = fileSize;
            return exportFile;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExportFileId
        {
            get
            {
                return _ExportFileId;
            }
            set
            {
                if (_ExportFileId != value)
                {
                    OnExportFileIdChanging(value);
                    ReportPropertyChanging("ExportFileId");
                    _ExportFileId = StructuralObject.SetValidValue(value, "ExportFileId");
                    ReportPropertyChanged("ExportFileId");
                    OnExportFileIdChanged();
                }
            }
        }
        private global::System.Int32 _ExportFileId;
        partial void OnExportFileIdChanging(global::System.Int32 value);
        partial void OnExportFileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelatedTable
        {
            get
            {
                return _RelatedTable;
            }
            set
            {
                OnRelatedTableChanging(value);
                ReportPropertyChanging("RelatedTable");
                _RelatedTable = StructuralObject.SetValidValue(value, false, "RelatedTable");
                ReportPropertyChanged("RelatedTable");
                OnRelatedTableChanged();
            }
        }
        private global::System.String _RelatedTable;
        partial void OnRelatedTableChanging(global::System.String value);
        partial void OnRelatedTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private global::System.Int32 _RelatedId;
        partial void OnRelatedIdChanging(global::System.Int32 value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExportFileStatusCodeId
        {
            get
            {
                return _ExportFileStatusCodeId;
            }
            set
            {
                OnExportFileStatusCodeIdChanging(value);
                ReportPropertyChanging("ExportFileStatusCodeId");
                _ExportFileStatusCodeId = StructuralObject.SetValidValue(value, "ExportFileStatusCodeId");
                ReportPropertyChanged("ExportFileStatusCodeId");
                OnExportFileStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _ExportFileStatusCodeId;
        partial void OnExportFileStatusCodeIdChanging(global::System.Int32 value);
        partial void OnExportFileStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FileSize
        {
            get
            {
                return _FileSize;
            }
            set
            {
                OnFileSizeChanging(value);
                ReportPropertyChanging("FileSize");
                _FileSize = StructuralObject.SetValidValue(value, "FileSize");
                ReportPropertyChanged("FileSize");
                OnFileSizeChanged();
            }
        }
        private global::System.Int64 _FileSize;
        partial void OnFileSizeChanging(global::System.Int64 value);
        partial void OnFileSizeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Field")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Field : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Field object.
        /// </summary>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="fieldTypeId">Initial value of the FieldTypeId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Field CreateField(global::System.Int32 fieldId, global::System.String displayName, global::System.Int32 fieldTypeId, global::System.Int32 groupId, global::System.String tagName, global::System.Boolean isActive)
        {
            Field field = new Field();
            field.FieldId = fieldId;
            field.DisplayName = displayName;
            field.FieldTypeId = fieldTypeId;
            field.GroupId = groupId;
            field.TagName = tagName;
            field.IsActive = isActive;
            return field;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                if (_FieldId != value)
                {
                    OnFieldIdChanging(value);
                    ReportPropertyChanging("FieldId");
                    _FieldId = StructuralObject.SetValidValue(value, "FieldId");
                    ReportPropertyChanged("FieldId");
                    OnFieldIdChanged();
                }
            }
        }
        private global::System.Int32 _FieldId;
        partial void OnFieldIdChanging(global::System.Int32 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldTypeId
        {
            get
            {
                return _FieldTypeId;
            }
            set
            {
                OnFieldTypeIdChanging(value);
                ReportPropertyChanging("FieldTypeId");
                _FieldTypeId = StructuralObject.SetValidValue(value, "FieldTypeId");
                ReportPropertyChanged("FieldTypeId");
                OnFieldTypeIdChanged();
            }
        }
        private global::System.Int32 _FieldTypeId;
        partial void OnFieldTypeIdChanging(global::System.Int32 value);
        partial void OnFieldTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value, "GroupId");
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false, "TagName");
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_FieldAttributesField_Fields", "FieldAttribute")]
        public EntityCollection<FieldAttribute> FieldAttributes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldAttribute>("StageBitz.Data.FK_FieldAttributesField_Fields", "FieldAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldAttribute>("StageBitz.Data.FK_FieldAttributesField_Fields", "FieldAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Fields_FieldGroups", "FieldGroup")]
        public FieldGroup FieldGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldGroup>("StageBitz.Data.FK_Fields_FieldGroups", "FieldGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldGroup>("StageBitz.Data.FK_Fields_FieldGroups", "FieldGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldGroup> FieldGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldGroup>("StageBitz.Data.FK_Fields_FieldGroups", "FieldGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldGroup>("StageBitz.Data.FK_Fields_FieldGroups", "FieldGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_FieldOptions_Fields", "FieldOption")]
        public EntityCollection<FieldOption> FieldOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldOption>("StageBitz.Data.FK_FieldOptions_Fields", "FieldOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldOption>("StageBitz.Data.FK_FieldOptions_Fields", "FieldOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Fields_FieldTypes", "FieldType")]
        public FieldType FieldType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldType>("StageBitz.Data.FK_Fields_FieldTypes", "FieldType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldType>("StageBitz.Data.FK_Fields_FieldTypes", "FieldType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldType> FieldTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldType>("StageBitz.Data.FK_Fields_FieldTypes", "FieldType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldType>("StageBitz.Data.FK_Fields_FieldTypes", "FieldType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefValues_Fields", "ItemBriefValue")]
        public EntityCollection<ItemBriefValue> ItemBriefValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBriefValue>("StageBitz.Data.FK_ItemBriefValues_Fields", "ItemBriefValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBriefValue>("StageBitz.Data.FK_ItemBriefValues_Fields", "ItemBriefValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemTypeField_Fields", "ItemTypeField")]
        public EntityCollection<ItemTypeField> ItemTypeFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemTypeField>("StageBitz.Data.FK_ItemTypeField_Fields", "ItemTypeField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemTypeField>("StageBitz.Data.FK_ItemTypeField_Fields", "ItemTypeField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemValues_Fields", "ItemValue")]
        public EntityCollection<ItemValue> ItemValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemValue>("StageBitz.Data.FK_ItemValues_Fields", "ItemValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemValue>("StageBitz.Data.FK_ItemValues_Fields", "ItemValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_Fields", "ItemVersionHistoryValue")]
        public EntityCollection<ItemVersionHistoryValue> ItemVersionHistoryValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_Fields", "ItemVersionHistoryValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_Fields", "ItemVersionHistoryValue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="FieldAttribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldAttribute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldAttribute object.
        /// </summary>
        /// <param name="fieldAttributeId">Initial value of the FieldAttributeId property.</param>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        /// <param name="attributeId">Initial value of the AttributeId property.</param>
        /// <param name="fieldAttributeValue">Initial value of the FieldAttributeValue property.</param>
        public static FieldAttribute CreateFieldAttribute(global::System.Int32 fieldAttributeId, global::System.Int32 fieldId, global::System.Int32 attributeId, global::System.String fieldAttributeValue)
        {
            FieldAttribute fieldAttribute = new FieldAttribute();
            fieldAttribute.FieldAttributeId = fieldAttributeId;
            fieldAttribute.FieldId = fieldId;
            fieldAttribute.AttributeId = attributeId;
            fieldAttribute.FieldAttributeValue = fieldAttributeValue;
            return fieldAttribute;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldAttributeId
        {
            get
            {
                return _FieldAttributeId;
            }
            set
            {
                if (_FieldAttributeId != value)
                {
                    OnFieldAttributeIdChanging(value);
                    ReportPropertyChanging("FieldAttributeId");
                    _FieldAttributeId = StructuralObject.SetValidValue(value, "FieldAttributeId");
                    ReportPropertyChanged("FieldAttributeId");
                    OnFieldAttributeIdChanged();
                }
            }
        }
        private global::System.Int32 _FieldAttributeId;
        partial void OnFieldAttributeIdChanging(global::System.Int32 value);
        partial void OnFieldAttributeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                OnFieldIdChanging(value);
                ReportPropertyChanging("FieldId");
                _FieldId = StructuralObject.SetValidValue(value, "FieldId");
                ReportPropertyChanged("FieldId");
                OnFieldIdChanged();
            }
        }
        private global::System.Int32 _FieldId;
        partial void OnFieldIdChanging(global::System.Int32 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeId
        {
            get
            {
                return _AttributeId;
            }
            set
            {
                OnAttributeIdChanging(value);
                ReportPropertyChanging("AttributeId");
                _AttributeId = StructuralObject.SetValidValue(value, "AttributeId");
                ReportPropertyChanged("AttributeId");
                OnAttributeIdChanged();
            }
        }
        private global::System.Int32 _AttributeId;
        partial void OnAttributeIdChanging(global::System.Int32 value);
        partial void OnAttributeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldAttributeValue
        {
            get
            {
                return _FieldAttributeValue;
            }
            set
            {
                OnFieldAttributeValueChanging(value);
                ReportPropertyChanging("FieldAttributeValue");
                _FieldAttributeValue = StructuralObject.SetValidValue(value, false, "FieldAttributeValue");
                ReportPropertyChanged("FieldAttributeValue");
                OnFieldAttributeValueChanged();
            }
        }
        private global::System.String _FieldAttributeValue;
        partial void OnFieldAttributeValueChanging(global::System.String value);
        partial void OnFieldAttributeValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_FieldAttributesField_FieldAttributes", "Attribute")]
        public Attribute Attribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("StageBitz.Data.FK_FieldAttributesField_FieldAttributes", "Attribute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("StageBitz.Data.FK_FieldAttributesField_FieldAttributes", "Attribute").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attribute> AttributeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("StageBitz.Data.FK_FieldAttributesField_FieldAttributes", "Attribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attribute>("StageBitz.Data.FK_FieldAttributesField_FieldAttributes", "Attribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_FieldAttributesField_Fields", "Field")]
        public Field Field
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_FieldAttributesField_Fields", "Field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_FieldAttributesField_Fields", "Field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Field> FieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_FieldAttributesField_Fields", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Field>("StageBitz.Data.FK_FieldAttributesField_Fields", "Field", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="FieldGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldGroup object.
        /// </summary>
        /// <param name="fieldGroupId">Initial value of the FieldGroupId property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        /// <param name="fieldGroupHtml">Initial value of the FieldGroupHtml property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static FieldGroup CreateFieldGroup(global::System.Int32 fieldGroupId, global::System.String displayName, global::System.String tagName, global::System.String fieldGroupHtml, global::System.Boolean isActive, global::System.Int32 sortOrder)
        {
            FieldGroup fieldGroup = new FieldGroup();
            fieldGroup.FieldGroupId = fieldGroupId;
            fieldGroup.DisplayName = displayName;
            fieldGroup.TagName = tagName;
            fieldGroup.FieldGroupHtml = fieldGroupHtml;
            fieldGroup.IsActive = isActive;
            fieldGroup.SortOrder = sortOrder;
            return fieldGroup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldGroupId
        {
            get
            {
                return _FieldGroupId;
            }
            set
            {
                if (_FieldGroupId != value)
                {
                    OnFieldGroupIdChanging(value);
                    ReportPropertyChanging("FieldGroupId");
                    _FieldGroupId = StructuralObject.SetValidValue(value, "FieldGroupId");
                    ReportPropertyChanged("FieldGroupId");
                    OnFieldGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _FieldGroupId;
        partial void OnFieldGroupIdChanging(global::System.Int32 value);
        partial void OnFieldGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false, "TagName");
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldGroupHtml
        {
            get
            {
                return _FieldGroupHtml;
            }
            set
            {
                OnFieldGroupHtmlChanging(value);
                ReportPropertyChanging("FieldGroupHtml");
                _FieldGroupHtml = StructuralObject.SetValidValue(value, false, "FieldGroupHtml");
                ReportPropertyChanged("FieldGroupHtml");
                OnFieldGroupHtmlChanged();
            }
        }
        private global::System.String _FieldGroupHtml;
        partial void OnFieldGroupHtmlChanging(global::System.String value);
        partial void OnFieldGroupHtmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Fields_FieldGroups", "Field")]
        public EntityCollection<Field> Fields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Field>("StageBitz.Data.FK_Fields_FieldGroups", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Field>("StageBitz.Data.FK_Fields_FieldGroups", "Field", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="FieldOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldOption object.
        /// </summary>
        /// <param name="fieldOptionId">Initial value of the FieldOptionId property.</param>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        /// <param name="optionText">Initial value of the OptionText property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static FieldOption CreateFieldOption(global::System.Int32 fieldOptionId, global::System.Int32 fieldId, global::System.String optionText, global::System.Int32 sortOrder)
        {
            FieldOption fieldOption = new FieldOption();
            fieldOption.FieldOptionId = fieldOptionId;
            fieldOption.FieldId = fieldId;
            fieldOption.OptionText = optionText;
            fieldOption.SortOrder = sortOrder;
            return fieldOption;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldOptionId
        {
            get
            {
                return _FieldOptionId;
            }
            set
            {
                if (_FieldOptionId != value)
                {
                    OnFieldOptionIdChanging(value);
                    ReportPropertyChanging("FieldOptionId");
                    _FieldOptionId = StructuralObject.SetValidValue(value, "FieldOptionId");
                    ReportPropertyChanged("FieldOptionId");
                    OnFieldOptionIdChanged();
                }
            }
        }
        private global::System.Int32 _FieldOptionId;
        partial void OnFieldOptionIdChanging(global::System.Int32 value);
        partial void OnFieldOptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                OnFieldIdChanging(value);
                ReportPropertyChanging("FieldId");
                _FieldId = StructuralObject.SetValidValue(value, "FieldId");
                ReportPropertyChanged("FieldId");
                OnFieldIdChanged();
            }
        }
        private global::System.Int32 _FieldId;
        partial void OnFieldIdChanging(global::System.Int32 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OptionText
        {
            get
            {
                return _OptionText;
            }
            set
            {
                OnOptionTextChanging(value);
                ReportPropertyChanging("OptionText");
                _OptionText = StructuralObject.SetValidValue(value, false, "OptionText");
                ReportPropertyChanged("OptionText");
                OnOptionTextChanged();
            }
        }
        private global::System.String _OptionText;
        partial void OnOptionTextChanging(global::System.String value);
        partial void OnOptionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_FieldOptions_Fields", "Field")]
        public Field Field
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_FieldOptions_Fields", "Field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_FieldOptions_Fields", "Field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Field> FieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_FieldOptions_Fields", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Field>("StageBitz.Data.FK_FieldOptions_Fields", "Field", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefValues_ItemBriefValues1", "ItemBriefValue")]
        public EntityCollection<ItemBriefValue> ItemBriefValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBriefValue>("StageBitz.Data.FK_ItemBriefValues_ItemBriefValues1", "ItemBriefValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBriefValue>("StageBitz.Data.FK_ItemBriefValues_ItemBriefValues1", "ItemBriefValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemValues_FieldOptions", "ItemValue")]
        public EntityCollection<ItemValue> ItemValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemValue>("StageBitz.Data.FK_ItemValues_FieldOptions", "ItemValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemValue>("StageBitz.Data.FK_ItemValues_FieldOptions", "ItemValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_FieldOptions", "ItemVersionHistoryValue")]
        public EntityCollection<ItemVersionHistoryValue> ItemVersionHistoryValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_FieldOptions", "ItemVersionHistoryValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_FieldOptions", "ItemVersionHistoryValue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="FieldType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldType object.
        /// </summary>
        /// <param name="fieldTypeId">Initial value of the FieldTypeId property.</param>
        /// <param name="htmlControl">Initial value of the HtmlControl property.</param>
        /// <param name="fieldTypeHtml">Initial value of the FieldTypeHtml property.</param>
        public static FieldType CreateFieldType(global::System.Int32 fieldTypeId, global::System.String htmlControl, global::System.String fieldTypeHtml)
        {
            FieldType fieldType = new FieldType();
            fieldType.FieldTypeId = fieldTypeId;
            fieldType.HtmlControl = htmlControl;
            fieldType.FieldTypeHtml = fieldTypeHtml;
            return fieldType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldTypeId
        {
            get
            {
                return _FieldTypeId;
            }
            set
            {
                if (_FieldTypeId != value)
                {
                    OnFieldTypeIdChanging(value);
                    ReportPropertyChanging("FieldTypeId");
                    _FieldTypeId = StructuralObject.SetValidValue(value, "FieldTypeId");
                    ReportPropertyChanged("FieldTypeId");
                    OnFieldTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _FieldTypeId;
        partial void OnFieldTypeIdChanging(global::System.Int32 value);
        partial void OnFieldTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HtmlControl
        {
            get
            {
                return _HtmlControl;
            }
            set
            {
                OnHtmlControlChanging(value);
                ReportPropertyChanging("HtmlControl");
                _HtmlControl = StructuralObject.SetValidValue(value, false, "HtmlControl");
                ReportPropertyChanged("HtmlControl");
                OnHtmlControlChanged();
            }
        }
        private global::System.String _HtmlControl;
        partial void OnHtmlControlChanging(global::System.String value);
        partial void OnHtmlControlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldTypeHtml
        {
            get
            {
                return _FieldTypeHtml;
            }
            set
            {
                OnFieldTypeHtmlChanging(value);
                ReportPropertyChanging("FieldTypeHtml");
                _FieldTypeHtml = StructuralObject.SetValidValue(value, false, "FieldTypeHtml");
                ReportPropertyChanged("FieldTypeHtml");
                OnFieldTypeHtmlChanged();
            }
        }
        private global::System.String _FieldTypeHtml;
        partial void OnFieldTypeHtmlChanging(global::System.String value);
        partial void OnFieldTypeHtmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InnerHtmlTemplate
        {
            get
            {
                return _InnerHtmlTemplate;
            }
            set
            {
                OnInnerHtmlTemplateChanging(value);
                ReportPropertyChanging("InnerHtmlTemplate");
                _InnerHtmlTemplate = StructuralObject.SetValidValue(value, true, "InnerHtmlTemplate");
                ReportPropertyChanged("InnerHtmlTemplate");
                OnInnerHtmlTemplateChanged();
            }
        }
        private global::System.String _InnerHtmlTemplate;
        partial void OnInnerHtmlTemplateChanging(global::System.String value);
        partial void OnInnerHtmlTemplateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Fields_FieldTypes", "Field")]
        public EntityCollection<Field> Fields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Field>("StageBitz.Data.FK_Fields_FieldTypes", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Field>("StageBitz.Data.FK_Fields_FieldTypes", "Field", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="InventoryActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryActivity object.
        /// </summary>
        /// <param name="inventoryActivityId">Initial value of the InventoryActivityId property.</param>
        /// <param name="itemBookingId">Initial value of the ItemBookingId property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static InventoryActivity CreateInventoryActivity(global::System.Int32 inventoryActivityId, global::System.Int32 itemBookingId, global::System.DateTime startDate, global::System.DateTime createdDate, global::System.DateTime lastUpdatedDate)
        {
            InventoryActivity inventoryActivity = new InventoryActivity();
            inventoryActivity.InventoryActivityId = inventoryActivityId;
            inventoryActivity.ItemBookingId = itemBookingId;
            inventoryActivity.StartDate = startDate;
            inventoryActivity.CreatedDate = createdDate;
            inventoryActivity.LastUpdatedDate = lastUpdatedDate;
            return inventoryActivity;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryActivityId
        {
            get
            {
                return _InventoryActivityId;
            }
            set
            {
                if (_InventoryActivityId != value)
                {
                    OnInventoryActivityIdChanging(value);
                    ReportPropertyChanging("InventoryActivityId");
                    _InventoryActivityId = StructuralObject.SetValidValue(value, "InventoryActivityId");
                    ReportPropertyChanged("InventoryActivityId");
                    OnInventoryActivityIdChanged();
                }
            }
        }
        private global::System.Int32 _InventoryActivityId;
        partial void OnInventoryActivityIdChanging(global::System.Int32 value);
        partial void OnInventoryActivityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBookingId
        {
            get
            {
                return _ItemBookingId;
            }
            set
            {
                OnItemBookingIdChanging(value);
                ReportPropertyChanging("ItemBookingId");
                _ItemBookingId = StructuralObject.SetValidValue(value, "ItemBookingId");
                ReportPropertyChanged("ItemBookingId");
                OnItemBookingIdChanged();
            }
        }
        private global::System.Int32 _ItemBookingId;
        partial void OnItemBookingIdChanging(global::System.Int32 value);
        partial void OnItemBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="InventoryManagerSentEmail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryManagerSentEmail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryManagerSentEmail object.
        /// </summary>
        /// <param name="inventoryManagerSentEmailId">Initial value of the InventoryManagerSentEmailId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static InventoryManagerSentEmail CreateInventoryManagerSentEmail(global::System.Int32 inventoryManagerSentEmailId, global::System.Int32 userId, global::System.Int32 companyId)
        {
            InventoryManagerSentEmail inventoryManagerSentEmail = new InventoryManagerSentEmail();
            inventoryManagerSentEmail.InventoryManagerSentEmailId = inventoryManagerSentEmailId;
            inventoryManagerSentEmail.UserId = userId;
            inventoryManagerSentEmail.CompanyId = companyId;
            return inventoryManagerSentEmail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryManagerSentEmailId
        {
            get
            {
                return _InventoryManagerSentEmailId;
            }
            set
            {
                if (_InventoryManagerSentEmailId != value)
                {
                    OnInventoryManagerSentEmailIdChanging(value);
                    ReportPropertyChanging("InventoryManagerSentEmailId");
                    _InventoryManagerSentEmailId = StructuralObject.SetValidValue(value, "InventoryManagerSentEmailId");
                    ReportPropertyChanged("InventoryManagerSentEmailId");
                    OnInventoryManagerSentEmailIdChanged();
                }
            }
        }
        private global::System.Int32 _InventoryManagerSentEmailId;
        partial void OnInventoryManagerSentEmailIdChanging(global::System.Int32 value);
        partial void OnInventoryManagerSentEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InventoryManagerSentEmails_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_InventoryManagerSentEmails_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_InventoryManagerSentEmails_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_InventoryManagerSentEmails_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_InventoryManagerSentEmails_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InventoryManagerSentEmails_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_InventoryManagerSentEmails_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_InventoryManagerSentEmails_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_InventoryManagerSentEmails_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_InventoryManagerSentEmails_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="InventoryMobileDocumentMedia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryMobileDocumentMedia : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryMobileDocumentMedia object.
        /// </summary>
        /// <param name="inventoryMobileDocumentMediaId">Initial value of the InventoryMobileDocumentMediaId property.</param>
        /// <param name="mobileDocumentMediaId">Initial value of the MobileDocumentMediaId property.</param>
        /// <param name="relatedTable">Initial value of the RelatedTable property.</param>
        /// <param name="relatedId">Initial value of the RelatedId property.</param>
        public static InventoryMobileDocumentMedia CreateInventoryMobileDocumentMedia(global::System.Int32 inventoryMobileDocumentMediaId, global::System.String mobileDocumentMediaId, global::System.String relatedTable, global::System.Int32 relatedId)
        {
            InventoryMobileDocumentMedia inventoryMobileDocumentMedia = new InventoryMobileDocumentMedia();
            inventoryMobileDocumentMedia.InventoryMobileDocumentMediaId = inventoryMobileDocumentMediaId;
            inventoryMobileDocumentMedia.MobileDocumentMediaId = mobileDocumentMediaId;
            inventoryMobileDocumentMedia.RelatedTable = relatedTable;
            inventoryMobileDocumentMedia.RelatedId = relatedId;
            return inventoryMobileDocumentMedia;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryMobileDocumentMediaId
        {
            get
            {
                return _InventoryMobileDocumentMediaId;
            }
            set
            {
                if (_InventoryMobileDocumentMediaId != value)
                {
                    OnInventoryMobileDocumentMediaIdChanging(value);
                    ReportPropertyChanging("InventoryMobileDocumentMediaId");
                    _InventoryMobileDocumentMediaId = StructuralObject.SetValidValue(value, "InventoryMobileDocumentMediaId");
                    ReportPropertyChanged("InventoryMobileDocumentMediaId");
                    OnInventoryMobileDocumentMediaIdChanged();
                }
            }
        }
        private global::System.Int32 _InventoryMobileDocumentMediaId;
        partial void OnInventoryMobileDocumentMediaIdChanging(global::System.Int32 value);
        partial void OnInventoryMobileDocumentMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MobileDocumentMediaId
        {
            get
            {
                return _MobileDocumentMediaId;
            }
            set
            {
                OnMobileDocumentMediaIdChanging(value);
                ReportPropertyChanging("MobileDocumentMediaId");
                _MobileDocumentMediaId = StructuralObject.SetValidValue(value, false, "MobileDocumentMediaId");
                ReportPropertyChanged("MobileDocumentMediaId");
                OnMobileDocumentMediaIdChanged();
            }
        }
        private global::System.String _MobileDocumentMediaId;
        partial void OnMobileDocumentMediaIdChanging(global::System.String value);
        partial void OnMobileDocumentMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentMediaId
        {
            get
            {
                return _DocumentMediaId;
            }
            set
            {
                OnDocumentMediaIdChanging(value);
                ReportPropertyChanging("DocumentMediaId");
                _DocumentMediaId = StructuralObject.SetValidValue(value, "DocumentMediaId");
                ReportPropertyChanged("DocumentMediaId");
                OnDocumentMediaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentMediaId;
        partial void OnDocumentMediaIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelatedTable
        {
            get
            {
                return _RelatedTable;
            }
            set
            {
                OnRelatedTableChanging(value);
                ReportPropertyChanging("RelatedTable");
                _RelatedTable = StructuralObject.SetValidValue(value, false, "RelatedTable");
                ReportPropertyChanged("RelatedTable");
                OnRelatedTableChanged();
            }
        }
        private global::System.String _RelatedTable;
        partial void OnRelatedTableChanging(global::System.String value);
        partial void OnRelatedTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private global::System.Int32 _RelatedId;
        partial void OnRelatedIdChanging(global::System.Int32 value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateDate;
        partial void OnLastUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InventoryMobileDocumentMedia_InventoryMobileDocumentMedia", "DocumentMedia")]
        public DocumentMedia DocumentMedia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentMedia>("StageBitz.Data.FK_InventoryMobileDocumentMedia_InventoryMobileDocumentMedia", "DocumentMedia").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentMedia>("StageBitz.Data.FK_InventoryMobileDocumentMedia_InventoryMobileDocumentMedia", "DocumentMedia").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentMedia> DocumentMediaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentMedia>("StageBitz.Data.FK_InventoryMobileDocumentMedia_InventoryMobileDocumentMedia", "DocumentMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentMedia>("StageBitz.Data.FK_InventoryMobileDocumentMedia_InventoryMobileDocumentMedia", "DocumentMedia", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="InventoryMobileItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryMobileItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryMobileItem object.
        /// </summary>
        /// <param name="inventoryMobileItemId">Initial value of the InventoryMobileItemId property.</param>
        /// <param name="mobileItemId">Initial value of the MobileItemId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        public static InventoryMobileItem CreateInventoryMobileItem(global::System.Int32 inventoryMobileItemId, global::System.String mobileItemId, global::System.Int32 itemId)
        {
            InventoryMobileItem inventoryMobileItem = new InventoryMobileItem();
            inventoryMobileItem.InventoryMobileItemId = inventoryMobileItemId;
            inventoryMobileItem.MobileItemId = mobileItemId;
            inventoryMobileItem.ItemId = itemId;
            return inventoryMobileItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryMobileItemId
        {
            get
            {
                return _InventoryMobileItemId;
            }
            set
            {
                if (_InventoryMobileItemId != value)
                {
                    OnInventoryMobileItemIdChanging(value);
                    ReportPropertyChanging("InventoryMobileItemId");
                    _InventoryMobileItemId = StructuralObject.SetValidValue(value, "InventoryMobileItemId");
                    ReportPropertyChanged("InventoryMobileItemId");
                    OnInventoryMobileItemIdChanged();
                }
            }
        }
        private global::System.Int32 _InventoryMobileItemId;
        partial void OnInventoryMobileItemIdChanging(global::System.Int32 value);
        partial void OnInventoryMobileItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MobileItemId
        {
            get
            {
                return _MobileItemId;
            }
            set
            {
                OnMobileItemIdChanging(value);
                ReportPropertyChanging("MobileItemId");
                _MobileItemId = StructuralObject.SetValidValue(value, false, "MobileItemId");
                ReportPropertyChanged("MobileItemId");
                OnMobileItemIdChanged();
            }
        }
        private global::System.String _MobileItemId;
        partial void OnMobileItemIdChanging(global::System.String value);
        partial void OnMobileItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateDate;
        partial void OnLastUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InventoryMobileItems_Items", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_InventoryMobileItems_Items", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_InventoryMobileItems_Items", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_InventoryMobileItems_Items", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("StageBitz.Data.FK_InventoryMobileItems_Items", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="InventoryPaymentPackageDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryPaymentPackageDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryPaymentPackageDetail object.
        /// </summary>
        /// <param name="inventoryPaymentPackageDetailId">Initial value of the InventoryPaymentPackageDetailId property.</param>
        /// <param name="paymentPackageTypeId">Initial value of the PaymentPackageTypeId property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="anualAmount">Initial value of the AnualAmount property.</param>
        public static InventoryPaymentPackageDetail CreateInventoryPaymentPackageDetail(global::System.Int32 inventoryPaymentPackageDetailId, global::System.Int32 paymentPackageTypeId, global::System.DateTime startDate, global::System.Decimal amount, global::System.Decimal anualAmount)
        {
            InventoryPaymentPackageDetail inventoryPaymentPackageDetail = new InventoryPaymentPackageDetail();
            inventoryPaymentPackageDetail.InventoryPaymentPackageDetailId = inventoryPaymentPackageDetailId;
            inventoryPaymentPackageDetail.PaymentPackageTypeId = paymentPackageTypeId;
            inventoryPaymentPackageDetail.StartDate = startDate;
            inventoryPaymentPackageDetail.Amount = amount;
            inventoryPaymentPackageDetail.AnualAmount = anualAmount;
            return inventoryPaymentPackageDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryPaymentPackageDetailId
        {
            get
            {
                return _InventoryPaymentPackageDetailId;
            }
            set
            {
                if (_InventoryPaymentPackageDetailId != value)
                {
                    OnInventoryPaymentPackageDetailIdChanging(value);
                    ReportPropertyChanging("InventoryPaymentPackageDetailId");
                    _InventoryPaymentPackageDetailId = StructuralObject.SetValidValue(value, "InventoryPaymentPackageDetailId");
                    ReportPropertyChanged("InventoryPaymentPackageDetailId");
                    OnInventoryPaymentPackageDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _InventoryPaymentPackageDetailId;
        partial void OnInventoryPaymentPackageDetailIdChanging(global::System.Int32 value);
        partial void OnInventoryPaymentPackageDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentPackageTypeId
        {
            get
            {
                return _PaymentPackageTypeId;
            }
            set
            {
                OnPaymentPackageTypeIdChanging(value);
                ReportPropertyChanging("PaymentPackageTypeId");
                _PaymentPackageTypeId = StructuralObject.SetValidValue(value, "PaymentPackageTypeId");
                ReportPropertyChanged("PaymentPackageTypeId");
                OnPaymentPackageTypeIdChanged();
            }
        }
        private global::System.Int32 _PaymentPackageTypeId;
        partial void OnPaymentPackageTypeIdChanging(global::System.Int32 value);
        partial void OnPaymentPackageTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AnualAmount
        {
            get
            {
                return _AnualAmount;
            }
            set
            {
                OnAnualAmountChanging(value);
                ReportPropertyChanging("AnualAmount");
                _AnualAmount = StructuralObject.SetValidValue(value, "AnualAmount");
                ReportPropertyChanged("AnualAmount");
                OnAnualAmountChanged();
            }
        }
        private global::System.Decimal _AnualAmount;
        partial void OnAnualAmountChanging(global::System.Decimal value);
        partial void OnAnualAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemCount
        {
            get
            {
                return _ItemCount;
            }
            set
            {
                OnItemCountChanging(value);
                ReportPropertyChanging("ItemCount");
                _ItemCount = StructuralObject.SetValidValue(value, "ItemCount");
                ReportPropertyChanged("ItemCount");
                OnItemCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemCount;
        partial void OnItemCountChanging(Nullable<global::System.Int32> value);
        partial void OnItemCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InventoryPackageDetails_PaymentPackageTypes", "PaymentPackageType")]
        public PaymentPackageType PaymentPackageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_InventoryPackageDetails_PaymentPackageTypes", "PaymentPackageType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_InventoryPackageDetails_PaymentPackageTypes", "PaymentPackageType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentPackageType> PaymentPackageTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_InventoryPackageDetails_PaymentPackageTypes", "PaymentPackageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentPackageType>("StageBitz.Data.FK_InventoryPackageDetails_PaymentPackageTypes", "PaymentPackageType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Invitation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invitation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invitation object.
        /// </summary>
        /// <param name="invitationId">Initial value of the InvitationId property.</param>
        /// <param name="fromUserId">Initial value of the FromUserId property.</param>
        /// <param name="relatedTable">Initial value of the RelatedTable property.</param>
        /// <param name="relatedId">Initial value of the RelatedId property.</param>
        /// <param name="invitationTypeCodeId">Initial value of the InvitationTypeCodeId property.</param>
        /// <param name="invitationStatusCodeId">Initial value of the InvitationStatusCodeId property.</param>
        /// <param name="canSeeProjectBudgetSummary">Initial value of the CanSeeProjectBudgetSummary property.</param>
        public static Invitation CreateInvitation(global::System.Int32 invitationId, global::System.Int32 fromUserId, global::System.String relatedTable, global::System.Int32 relatedId, global::System.Int32 invitationTypeCodeId, global::System.Int32 invitationStatusCodeId, global::System.Boolean canSeeProjectBudgetSummary)
        {
            Invitation invitation = new Invitation();
            invitation.InvitationId = invitationId;
            invitation.FromUserId = fromUserId;
            invitation.RelatedTable = relatedTable;
            invitation.RelatedId = relatedId;
            invitation.InvitationTypeCodeId = invitationTypeCodeId;
            invitation.InvitationStatusCodeId = invitationStatusCodeId;
            invitation.CanSeeProjectBudgetSummary = canSeeProjectBudgetSummary;
            return invitation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvitationId
        {
            get
            {
                return _InvitationId;
            }
            set
            {
                if (_InvitationId != value)
                {
                    OnInvitationIdChanging(value);
                    ReportPropertyChanging("InvitationId");
                    _InvitationId = StructuralObject.SetValidValue(value, "InvitationId");
                    ReportPropertyChanged("InvitationId");
                    OnInvitationIdChanged();
                }
            }
        }
        private global::System.Int32 _InvitationId;
        partial void OnInvitationIdChanging(global::System.Int32 value);
        partial void OnInvitationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value, "FromUserId");
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private global::System.Int32 _FromUserId;
        partial void OnFromUserIdChanging(global::System.Int32 value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value, "ToUserId");
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ToUserId;
        partial void OnToUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ToEmail
        {
            get
            {
                return _ToEmail;
            }
            set
            {
                OnToEmailChanging(value);
                ReportPropertyChanging("ToEmail");
                _ToEmail = StructuralObject.SetValidValue(value, true, "ToEmail");
                ReportPropertyChanged("ToEmail");
                OnToEmailChanged();
            }
        }
        private global::System.String _ToEmail;
        partial void OnToEmailChanging(global::System.String value);
        partial void OnToEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ToName
        {
            get
            {
                return _ToName;
            }
            set
            {
                OnToNameChanging(value);
                ReportPropertyChanging("ToName");
                _ToName = StructuralObject.SetValidValue(value, true, "ToName");
                ReportPropertyChanged("ToName");
                OnToNameChanged();
            }
        }
        private global::System.String _ToName;
        partial void OnToNameChanging(global::System.String value);
        partial void OnToNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelatedTable
        {
            get
            {
                return _RelatedTable;
            }
            set
            {
                OnRelatedTableChanging(value);
                ReportPropertyChanging("RelatedTable");
                _RelatedTable = StructuralObject.SetValidValue(value, false, "RelatedTable");
                ReportPropertyChanged("RelatedTable");
                OnRelatedTableChanged();
            }
        }
        private global::System.String _RelatedTable;
        partial void OnRelatedTableChanging(global::System.String value);
        partial void OnRelatedTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private global::System.Int32 _RelatedId;
        partial void OnRelatedIdChanging(global::System.Int32 value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvitationTypeCodeId
        {
            get
            {
                return _InvitationTypeCodeId;
            }
            set
            {
                OnInvitationTypeCodeIdChanging(value);
                ReportPropertyChanging("InvitationTypeCodeId");
                _InvitationTypeCodeId = StructuralObject.SetValidValue(value, "InvitationTypeCodeId");
                ReportPropertyChanged("InvitationTypeCodeId");
                OnInvitationTypeCodeIdChanged();
            }
        }
        private global::System.Int32 _InvitationTypeCodeId;
        partial void OnInvitationTypeCodeIdChanging(global::System.Int32 value);
        partial void OnInvitationTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvitationStatusCodeId
        {
            get
            {
                return _InvitationStatusCodeId;
            }
            set
            {
                OnInvitationStatusCodeIdChanging(value);
                ReportPropertyChanging("InvitationStatusCodeId");
                _InvitationStatusCodeId = StructuralObject.SetValidValue(value, "InvitationStatusCodeId");
                ReportPropertyChanged("InvitationStatusCodeId");
                OnInvitationStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _InvitationStatusCodeId;
        partial void OnInvitationStatusCodeIdChanging(global::System.Int32 value);
        partial void OnInvitationStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectRole
        {
            get
            {
                return _ProjectRole;
            }
            set
            {
                OnProjectRoleChanging(value);
                ReportPropertyChanging("ProjectRole");
                _ProjectRole = StructuralObject.SetValidValue(value, true, "ProjectRole");
                ReportPropertyChanged("ProjectRole");
                OnProjectRoleChanged();
            }
        }
        private global::System.String _ProjectRole;
        partial void OnProjectRoleChanging(global::System.String value);
        partial void OnProjectRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeProjectBudgetSummary
        {
            get
            {
                return _CanSeeProjectBudgetSummary;
            }
            set
            {
                OnCanSeeProjectBudgetSummaryChanging(value);
                ReportPropertyChanging("CanSeeProjectBudgetSummary");
                _CanSeeProjectBudgetSummary = StructuralObject.SetValidValue(value, "CanSeeProjectBudgetSummary");
                ReportPropertyChanged("CanSeeProjectBudgetSummary");
                OnCanSeeProjectBudgetSummaryChanged();
            }
        }
        private global::System.Boolean _CanSeeProjectBudgetSummary;
        partial void OnCanSeeProjectBudgetSummaryChanging(global::System.Boolean value);
        partial void OnCanSeeProjectBudgetSummaryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invitations_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invitations_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invitations_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invitations_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_Invitations_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invitations_Codes2", "Code")]
        public Code Code1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invitations_Codes2", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invitations_Codes2", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> Code1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invitations_Codes2", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_Invitations_Codes2", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invitations_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_Invitations_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_Invitations_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_Invitations_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_Invitations_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InvitationUserRole_Invitations", "InvitationUserRole")]
        public EntityCollection<InvitationUserRole> InvitationUserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvitationUserRole>("StageBitz.Data.FK_InvitationUserRole_Invitations", "InvitationUserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvitationUserRole>("StageBitz.Data.FK_InvitationUserRole_Invitations", "InvitationUserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="InvitationUserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvitationUserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvitationUserRole object.
        /// </summary>
        /// <param name="invitationUserRoleId">Initial value of the InvitationUserRoleId property.</param>
        /// <param name="invitationId">Initial value of the InvitationId property.</param>
        /// <param name="userTypeCodeId">Initial value of the UserTypeCodeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static InvitationUserRole CreateInvitationUserRole(global::System.Int32 invitationUserRoleId, global::System.Int32 invitationId, global::System.Int32 userTypeCodeId, global::System.Boolean isActive)
        {
            InvitationUserRole invitationUserRole = new InvitationUserRole();
            invitationUserRole.InvitationUserRoleId = invitationUserRoleId;
            invitationUserRole.InvitationId = invitationId;
            invitationUserRole.UserTypeCodeId = userTypeCodeId;
            invitationUserRole.IsActive = isActive;
            return invitationUserRole;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvitationUserRoleId
        {
            get
            {
                return _InvitationUserRoleId;
            }
            set
            {
                if (_InvitationUserRoleId != value)
                {
                    OnInvitationUserRoleIdChanging(value);
                    ReportPropertyChanging("InvitationUserRoleId");
                    _InvitationUserRoleId = StructuralObject.SetValidValue(value, "InvitationUserRoleId");
                    ReportPropertyChanged("InvitationUserRoleId");
                    OnInvitationUserRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _InvitationUserRoleId;
        partial void OnInvitationUserRoleIdChanging(global::System.Int32 value);
        partial void OnInvitationUserRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvitationId
        {
            get
            {
                return _InvitationId;
            }
            set
            {
                OnInvitationIdChanging(value);
                ReportPropertyChanging("InvitationId");
                _InvitationId = StructuralObject.SetValidValue(value, "InvitationId");
                ReportPropertyChanged("InvitationId");
                OnInvitationIdChanged();
            }
        }
        private global::System.Int32 _InvitationId;
        partial void OnInvitationIdChanging(global::System.Int32 value);
        partial void OnInvitationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTypeCodeId
        {
            get
            {
                return _UserTypeCodeId;
            }
            set
            {
                OnUserTypeCodeIdChanging(value);
                ReportPropertyChanging("UserTypeCodeId");
                _UserTypeCodeId = StructuralObject.SetValidValue(value, "UserTypeCodeId");
                ReportPropertyChanged("UserTypeCodeId");
                OnUserTypeCodeIdChanged();
            }
        }
        private global::System.Int32 _UserTypeCodeId;
        partial void OnUserTypeCodeIdChanging(global::System.Int32 value);
        partial void OnUserTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value, "LocationId");
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnLocationIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InvitationUserRole_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_InvitationUserRole_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_InvitationUserRole_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_InvitationUserRole_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_InvitationUserRole_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InvitationUserRole_Invitations", "Invitation")]
        public Invitation Invitation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("StageBitz.Data.FK_InvitationUserRole_Invitations", "Invitation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("StageBitz.Data.FK_InvitationUserRole_Invitations", "Invitation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invitation> InvitationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("StageBitz.Data.FK_InvitationUserRole_Invitations", "Invitation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invitation>("StageBitz.Data.FK_InvitationUserRole_Invitations", "Invitation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InvitationUserRole_Locations", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_InvitationUserRole_Locations", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_InvitationUserRole_Locations", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_InvitationUserRole_Locations", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("StageBitz.Data.FK_InvitationUserRole_Locations", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="invoiceID">Initial value of the InvoiceID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="invoiceDate">Initial value of the InvoiceDate property.</param>
        /// <param name="invoiceDueDate">Initial value of the InvoiceDueDate property.</param>
        /// <param name="invoiceTypeCodeID">Initial value of the InvoiceTypeCodeID property.</param>
        /// <param name="invoiceStatusCodeId">Initial value of the InvoiceStatusCodeId property.</param>
        /// <param name="isVoid">Initial value of the IsVoid property.</param>
        /// <param name="relatedTableName">Initial value of the RelatedTableName property.</param>
        /// <param name="relatedID">Initial value of the RelatedID property.</param>
        /// <param name="fromDate">Initial value of the FromDate property.</param>
        /// <param name="toDate">Initial value of the ToDate property.</param>
        public static Invoice CreateInvoice(global::System.Int32 invoiceID, global::System.Int32 transactionID, global::System.Decimal amount, global::System.DateTime invoiceDate, global::System.DateTime invoiceDueDate, global::System.Int32 invoiceTypeCodeID, global::System.Int32 invoiceStatusCodeId, global::System.Boolean isVoid, global::System.String relatedTableName, global::System.Int32 relatedID, global::System.DateTime fromDate, global::System.DateTime toDate)
        {
            Invoice invoice = new Invoice();
            invoice.InvoiceID = invoiceID;
            invoice.TransactionID = transactionID;
            invoice.Amount = amount;
            invoice.InvoiceDate = invoiceDate;
            invoice.InvoiceDueDate = invoiceDueDate;
            invoice.InvoiceTypeCodeID = invoiceTypeCodeID;
            invoice.InvoiceStatusCodeId = invoiceStatusCodeId;
            invoice.IsVoid = isVoid;
            invoice.RelatedTableName = relatedTableName;
            invoice.RelatedID = relatedID;
            invoice.FromDate = fromDate;
            invoice.ToDate = toDate;
            return invoice;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                if (_InvoiceID != value)
                {
                    OnInvoiceIDChanging(value);
                    ReportPropertyChanging("InvoiceID");
                    _InvoiceID = StructuralObject.SetValidValue(value, "InvoiceID");
                    ReportPropertyChanged("InvoiceID");
                    OnInvoiceIDChanged();
                }
            }
        }
        private global::System.Int32 _InvoiceID;
        partial void OnInvoiceIDChanging(global::System.Int32 value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value, "TransactionID");
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Int32 _TransactionID;
        partial void OnTransactionIDChanging(global::System.Int32 value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value, "InvoiceDate");
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private global::System.DateTime _InvoiceDate;
        partial void OnInvoiceDateChanging(global::System.DateTime value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InvoiceDueDate
        {
            get
            {
                return _InvoiceDueDate;
            }
            set
            {
                OnInvoiceDueDateChanging(value);
                ReportPropertyChanging("InvoiceDueDate");
                _InvoiceDueDate = StructuralObject.SetValidValue(value, "InvoiceDueDate");
                ReportPropertyChanged("InvoiceDueDate");
                OnInvoiceDueDateChanged();
            }
        }
        private global::System.DateTime _InvoiceDueDate;
        partial void OnInvoiceDueDateChanging(global::System.DateTime value);
        partial void OnInvoiceDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceTypeCodeID
        {
            get
            {
                return _InvoiceTypeCodeID;
            }
            set
            {
                OnInvoiceTypeCodeIDChanging(value);
                ReportPropertyChanging("InvoiceTypeCodeID");
                _InvoiceTypeCodeID = StructuralObject.SetValidValue(value, "InvoiceTypeCodeID");
                ReportPropertyChanged("InvoiceTypeCodeID");
                OnInvoiceTypeCodeIDChanged();
            }
        }
        private global::System.Int32 _InvoiceTypeCodeID;
        partial void OnInvoiceTypeCodeIDChanging(global::System.Int32 value);
        partial void OnInvoiceTypeCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceStatusCodeId
        {
            get
            {
                return _InvoiceStatusCodeId;
            }
            set
            {
                OnInvoiceStatusCodeIdChanging(value);
                ReportPropertyChanging("InvoiceStatusCodeId");
                _InvoiceStatusCodeId = StructuralObject.SetValidValue(value, "InvoiceStatusCodeId");
                ReportPropertyChanged("InvoiceStatusCodeId");
                OnInvoiceStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _InvoiceStatusCodeId;
        partial void OnInvoiceStatusCodeIdChanging(global::System.Int32 value);
        partial void OnInvoiceStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVoid
        {
            get
            {
                return _IsVoid;
            }
            set
            {
                OnIsVoidChanging(value);
                ReportPropertyChanging("IsVoid");
                _IsVoid = StructuralObject.SetValidValue(value, "IsVoid");
                ReportPropertyChanged("IsVoid");
                OnIsVoidChanged();
            }
        }
        private global::System.Boolean _IsVoid;
        partial void OnIsVoidChanging(global::System.Boolean value);
        partial void OnIsVoidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReversalTransactionID
        {
            get
            {
                return _ReversalTransactionID;
            }
            set
            {
                OnReversalTransactionIDChanging(value);
                ReportPropertyChanging("ReversalTransactionID");
                _ReversalTransactionID = StructuralObject.SetValidValue(value, "ReversalTransactionID");
                ReportPropertyChanged("ReversalTransactionID");
                OnReversalTransactionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReversalTransactionID;
        partial void OnReversalTransactionIDChanging(Nullable<global::System.Int32> value);
        partial void OnReversalTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelatedTableName
        {
            get
            {
                return _RelatedTableName;
            }
            set
            {
                OnRelatedTableNameChanging(value);
                ReportPropertyChanging("RelatedTableName");
                _RelatedTableName = StructuralObject.SetValidValue(value, false, "RelatedTableName");
                ReportPropertyChanged("RelatedTableName");
                OnRelatedTableNameChanged();
            }
        }
        private global::System.String _RelatedTableName;
        partial void OnRelatedTableNameChanging(global::System.String value);
        partial void OnRelatedTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedID
        {
            get
            {
                return _RelatedID;
            }
            set
            {
                OnRelatedIDChanging(value);
                ReportPropertyChanging("RelatedID");
                _RelatedID = StructuralObject.SetValidValue(value, "RelatedID");
                ReportPropertyChanged("RelatedID");
                OnRelatedIDChanged();
            }
        }
        private global::System.Int32 _RelatedID;
        partial void OnRelatedIDChanging(global::System.Int32 value);
        partial void OnRelatedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value, "FromDate");
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private global::System.DateTime _FromDate;
        partial void OnFromDateChanging(global::System.DateTime value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value, "ToDate");
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private global::System.DateTime _ToDate;
        partial void OnToDateChanging(global::System.DateTime value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateDate;
        partial void OnLastUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invoices_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invoices_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invoices_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invoices_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_Invoices_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invoices_Status", "Code")]
        public Code Code1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invoices_Status", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invoices_Status", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> Code1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Invoices_Status", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_Invoices_Status", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentSummaries_Invoices", "CompanyPaymentSummary")]
        public EntityCollection<CompanyPaymentSummary> CompanyPaymentSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPaymentSummary>("StageBitz.Data.FK_CompanyPaymentSummaries_Invoices", "CompanyPaymentSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPaymentSummary>("StageBitz.Data.FK_CompanyPaymentSummaries_Invoices", "CompanyPaymentSummary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invoices_Transactions", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Invoices_Transactions", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Invoices_Transactions", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Invoices_Transactions", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("StageBitz.Data.FK_Invoices_Transactions", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invoices_Transactions_Reversal", "Transaction")]
        public Transaction Transaction1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Invoices_Transactions_Reversal", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Invoices_Transactions_Reversal", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> Transaction1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Invoices_Transactions_Reversal", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("StageBitz.Data.FK_Invoices_Transactions_Reversal", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isManuallyAdded">Initial value of the IsManuallyAdded property.</param>
        /// <param name="isHidden">Initial value of the IsHidden property.</param>
        /// <param name="visibilityLevelCodeId">Initial value of the VisibilityLevelCodeId property.</param>
        public static Item CreateItem(global::System.Int32 itemId, global::System.Boolean isActive, global::System.Boolean isManuallyAdded, global::System.Boolean isHidden, global::System.Int32 visibilityLevelCodeId)
        {
            Item item = new Item();
            item.ItemId = itemId;
            item.IsActive = isActive;
            item.IsManuallyAdded = isManuallyAdded;
            item.IsHidden = isHidden;
            item.VisibilityLevelCodeId = visibilityLevelCodeId;
            return item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value, "ItemTypeId");
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemTypeId;
        partial void OnItemTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsManuallyAdded
        {
            get
            {
                return _IsManuallyAdded;
            }
            set
            {
                OnIsManuallyAddedChanging(value);
                ReportPropertyChanging("IsManuallyAdded");
                _IsManuallyAdded = StructuralObject.SetValidValue(value, "IsManuallyAdded");
                ReportPropertyChanged("IsManuallyAdded");
                OnIsManuallyAddedChanged();
            }
        }
        private global::System.Boolean _IsManuallyAdded;
        partial void OnIsManuallyAddedChanging(global::System.Boolean value);
        partial void OnIsManuallyAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHidden
        {
            get
            {
                return _IsHidden;
            }
            set
            {
                OnIsHiddenChanging(value);
                ReportPropertyChanging("IsHidden");
                _IsHidden = StructuralObject.SetValidValue(value, "IsHidden");
                ReportPropertyChanged("IsHidden");
                OnIsHiddenChanged();
            }
        }
        private global::System.Boolean _IsHidden;
        partial void OnIsHiddenChanging(global::System.Boolean value);
        partial void OnIsHiddenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedFor
        {
            get
            {
                return _CreatedFor;
            }
            set
            {
                OnCreatedForChanging(value);
                ReportPropertyChanging("CreatedFor");
                _CreatedFor = StructuralObject.SetValidValue(value, true, "CreatedFor");
                ReportPropertyChanged("CreatedFor");
                OnCreatedForChanged();
            }
        }
        private global::System.String _CreatedFor;
        partial void OnCreatedForChanging(global::System.String value);
        partial void OnCreatedForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value, "LocationId");
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VisibilityLevelCodeId
        {
            get
            {
                return _VisibilityLevelCodeId;
            }
            set
            {
                OnVisibilityLevelCodeIdChanging(value);
                ReportPropertyChanging("VisibilityLevelCodeId");
                _VisibilityLevelCodeId = StructuralObject.SetValidValue(value, "VisibilityLevelCodeId");
                ReportPropertyChanged("VisibilityLevelCodeId");
                OnVisibilityLevelCodeIdChanged();
            }
        }
        private global::System.Int32 _VisibilityLevelCodeId;
        partial void OnVisibilityLevelCodeIdChanging(global::System.Int32 value);
        partial void OnVisibilityLevelCodeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Items_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_Items_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_Items_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_Items_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_Items_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InventoryMobileItems_Items", "InventoryMobileItem")]
        public EntityCollection<InventoryMobileItem> InventoryMobileItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryMobileItem>("StageBitz.Data.FK_InventoryMobileItems_Items", "InventoryMobileItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryMobileItem>("StageBitz.Data.FK_InventoryMobileItems_Items", "InventoryMobileItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemArchive_Items", "ItemArchive")]
        public EntityCollection<ItemArchive> ItemArchives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemArchive>("StageBitz.Data.FK_ItemArchive_Items", "ItemArchive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemArchive>("StageBitz.Data.FK_ItemArchive_Items", "ItemArchive", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookings_Items", "ItemBooking")]
        public EntityCollection<ItemBooking> ItemBookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBooking>("StageBitz.Data.FK_ItemBookings_Items", "ItemBooking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBooking>("StageBitz.Data.FK_ItemBookings_Items", "ItemBooking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Items_ItemTypes", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_Items_ItemTypes", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_Items_ItemTypes", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_Items_ItemTypes", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("StageBitz.Data.FK_Items_ItemTypes", "ItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemValues_Items", "ItemValue")]
        public EntityCollection<ItemValue> ItemValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemValue>("StageBitz.Data.FK_ItemValues_Items", "ItemValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemValue>("StageBitz.Data.FK_ItemValues_Items", "ItemValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_WatchListItems_Items", "WatchListItem")]
        public EntityCollection<WatchListItem> WatchListItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WatchListItem>("StageBitz.Data.FK_WatchListItems_Items", "WatchListItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WatchListItem>("StageBitz.Data.FK_WatchListItems_Items", "WatchListItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Items_Locations", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_Items_Locations", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_Items_Locations", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_Items_Locations", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("StageBitz.Data.FK_Items_Locations", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_Items", "ItemVersionHistory")]
        public EntityCollection<ItemVersionHistory> ItemVersionHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_Items", "ItemVersionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_Items", "ItemVersionHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Items_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Items_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Items_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Items_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_Items_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookingTimeline_Items", "ItemBookingTimeline")]
        public EntityCollection<ItemBookingTimeline> ItemBookingTimelines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBookingTimeline>("StageBitz.Data.FK_ItemBookingTimeline_Items", "ItemBookingTimeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBookingTimeline>("StageBitz.Data.FK_ItemBookingTimeline_Items", "ItemBookingTimeline", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemArchive")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemArchive : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemArchive object.
        /// </summary>
        /// <param name="itemArchiveId">Initial value of the ItemArchiveId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="itemDeletedBy">Initial value of the ItemDeletedBy property.</param>
        /// <param name="itemDeletedDate">Initial value of the ItemDeletedDate property.</param>
        public static ItemArchive CreateItemArchive(global::System.Int32 itemArchiveId, global::System.Int32 itemId, global::System.Int32 itemDeletedBy, global::System.DateTime itemDeletedDate)
        {
            ItemArchive itemArchive = new ItemArchive();
            itemArchive.ItemArchiveId = itemArchiveId;
            itemArchive.ItemId = itemId;
            itemArchive.ItemDeletedBy = itemDeletedBy;
            itemArchive.ItemDeletedDate = itemDeletedDate;
            return itemArchive;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemArchiveId
        {
            get
            {
                return _ItemArchiveId;
            }
            set
            {
                if (_ItemArchiveId != value)
                {
                    OnItemArchiveIdChanging(value);
                    ReportPropertyChanging("ItemArchiveId");
                    _ItemArchiveId = StructuralObject.SetValidValue(value, "ItemArchiveId");
                    ReportPropertyChanged("ItemArchiveId");
                    OnItemArchiveIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemArchiveId;
        partial void OnItemArchiveIdChanging(global::System.Int32 value);
        partial void OnItemArchiveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemDeletedBy
        {
            get
            {
                return _ItemDeletedBy;
            }
            set
            {
                OnItemDeletedByChanging(value);
                ReportPropertyChanging("ItemDeletedBy");
                _ItemDeletedBy = StructuralObject.SetValidValue(value, "ItemDeletedBy");
                ReportPropertyChanged("ItemDeletedBy");
                OnItemDeletedByChanged();
            }
        }
        private global::System.Int32 _ItemDeletedBy;
        partial void OnItemDeletedByChanging(global::System.Int32 value);
        partial void OnItemDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ItemDeletedDate
        {
            get
            {
                return _ItemDeletedDate;
            }
            set
            {
                OnItemDeletedDateChanging(value);
                ReportPropertyChanging("ItemDeletedDate");
                _ItemDeletedDate = StructuralObject.SetValidValue(value, "ItemDeletedDate");
                ReportPropertyChanged("ItemDeletedDate");
                OnItemDeletedDateChanged();
            }
        }
        private global::System.DateTime _ItemDeletedDate;
        partial void OnItemDeletedDateChanging(global::System.DateTime value);
        partial void OnItemDeletedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemArchive_Items", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemArchive_Items", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemArchive_Items", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemArchive_Items", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("StageBitz.Data.FK_ItemArchive_Items", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemBooking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemBooking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemBooking object.
        /// </summary>
        /// <param name="itemBookingId">Initial value of the ItemBookingId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="relatedTable">Initial value of the RelatedTable property.</param>
        /// <param name="relatedId">Initial value of the RelatedId property.</param>
        /// <param name="fromDate">Initial value of the FromDate property.</param>
        /// <param name="itemBookingStatusCodeId">Initial value of the ItemBookingStatusCodeId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="inventoryStatusCodeId">Initial value of the InventoryStatusCodeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdatedBy">Initial value of the LastUpdatedBy property.</param>
        /// <param name="lastUpdateDate">Initial value of the LastUpdateDate property.</param>
        public static ItemBooking CreateItemBooking(global::System.Int32 itemBookingId, global::System.Int32 itemId, global::System.String relatedTable, global::System.Int32 relatedId, global::System.DateTime fromDate, global::System.Int32 itemBookingStatusCodeId, global::System.Int32 quantity, global::System.Int32 inventoryStatusCodeId, global::System.Boolean isActive, global::System.Int32 createdBy, global::System.DateTime createdDate, global::System.Int32 lastUpdatedBy, global::System.DateTime lastUpdateDate)
        {
            ItemBooking itemBooking = new ItemBooking();
            itemBooking.ItemBookingId = itemBookingId;
            itemBooking.ItemId = itemId;
            itemBooking.RelatedTable = relatedTable;
            itemBooking.RelatedId = relatedId;
            itemBooking.FromDate = fromDate;
            itemBooking.ItemBookingStatusCodeId = itemBookingStatusCodeId;
            itemBooking.Quantity = quantity;
            itemBooking.InventoryStatusCodeId = inventoryStatusCodeId;
            itemBooking.IsActive = isActive;
            itemBooking.CreatedBy = createdBy;
            itemBooking.CreatedDate = createdDate;
            itemBooking.LastUpdatedBy = lastUpdatedBy;
            itemBooking.LastUpdateDate = lastUpdateDate;
            return itemBooking;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBookingId
        {
            get
            {
                return _ItemBookingId;
            }
            set
            {
                if (_ItemBookingId != value)
                {
                    OnItemBookingIdChanging(value);
                    ReportPropertyChanging("ItemBookingId");
                    _ItemBookingId = StructuralObject.SetValidValue(value, "ItemBookingId");
                    ReportPropertyChanged("ItemBookingId");
                    OnItemBookingIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemBookingId;
        partial void OnItemBookingIdChanging(global::System.Int32 value);
        partial void OnItemBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelatedTable
        {
            get
            {
                return _RelatedTable;
            }
            set
            {
                OnRelatedTableChanging(value);
                ReportPropertyChanging("RelatedTable");
                _RelatedTable = StructuralObject.SetValidValue(value, false, "RelatedTable");
                ReportPropertyChanged("RelatedTable");
                OnRelatedTableChanged();
            }
        }
        private global::System.String _RelatedTable;
        partial void OnRelatedTableChanging(global::System.String value);
        partial void OnRelatedTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private global::System.Int32 _RelatedId;
        partial void OnRelatedIdChanging(global::System.Int32 value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BookingId
        {
            get
            {
                return _BookingId;
            }
            set
            {
                OnBookingIdChanging(value);
                ReportPropertyChanging("BookingId");
                _BookingId = StructuralObject.SetValidValue(value, "BookingId");
                ReportPropertyChanged("BookingId");
                OnBookingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BookingId;
        partial void OnBookingIdChanging(Nullable<global::System.Int32> value);
        partial void OnBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value, "FromDate");
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private global::System.DateTime _FromDate;
        partial void OnFromDateChanging(global::System.DateTime value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value, "ToDate");
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBookingStatusCodeId
        {
            get
            {
                return _ItemBookingStatusCodeId;
            }
            set
            {
                OnItemBookingStatusCodeIdChanging(value);
                ReportPropertyChanging("ItemBookingStatusCodeId");
                _ItemBookingStatusCodeId = StructuralObject.SetValidValue(value, "ItemBookingStatusCodeId");
                ReportPropertyChanged("ItemBookingStatusCodeId");
                OnItemBookingStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _ItemBookingStatusCodeId;
        partial void OnItemBookingStatusCodeIdChanging(global::System.Int32 value);
        partial void OnItemBookingStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryStatusCodeId
        {
            get
            {
                return _InventoryStatusCodeId;
            }
            set
            {
                OnInventoryStatusCodeIdChanging(value);
                ReportPropertyChanging("InventoryStatusCodeId");
                _InventoryStatusCodeId = StructuralObject.SetValidValue(value, "InventoryStatusCodeId");
                ReportPropertyChanged("InventoryStatusCodeId");
                OnInventoryStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _InventoryStatusCodeId;
        partial void OnInventoryStatusCodeIdChanging(global::System.Int32 value);
        partial void OnInventoryStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private global::System.Int32 _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(global::System.Int32 value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private global::System.DateTime _LastUpdateDate;
        partial void OnLastUpdateDateChanging(global::System.DateTime value);
        partial void OnLastUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookings_Items", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemBookings_Items", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemBookings_Items", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemBookings_Items", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("StageBitz.Data.FK_ItemBookings_Items", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookingStatusHistories_ItemBookingStatusHistories", "ItemBookingStatusHistory")]
        public EntityCollection<ItemBookingStatusHistory> ItemBookingStatusHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBookingStatusHistory>("StageBitz.Data.FK_ItemBookingStatusHistories_ItemBookingStatusHistories", "ItemBookingStatusHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBookingStatusHistory>("StageBitz.Data.FK_ItemBookingStatusHistories_ItemBookingStatusHistories", "ItemBookingStatusHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemBookings", "ItemVersionHistory")]
        public EntityCollection<ItemVersionHistory> ItemVersionHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_ItemBookings", "ItemVersionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_ItemBookings", "ItemVersionHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookings_Bookings", "Booking")]
        public Booking Booking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("StageBitz.Data.FK_ItemBookings_Bookings", "Booking").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("StageBitz.Data.FK_ItemBookings_Bookings", "Booking").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Booking> BookingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("StageBitz.Data.FK_ItemBookings_Bookings", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Booking>("StageBitz.Data.FK_ItemBookings_Bookings", "Booking", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemBookingStatusHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemBookingStatusHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemBookingStatusHistory object.
        /// </summary>
        /// <param name="itemBookingStatusHistoryId">Initial value of the ItemBookingStatusHistoryId property.</param>
        /// <param name="itemBookingId">Initial value of the ItemBookingId property.</param>
        /// <param name="itemBookingStatusCodeId">Initial value of the ItemBookingStatusCodeId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static ItemBookingStatusHistory CreateItemBookingStatusHistory(global::System.Int32 itemBookingStatusHistoryId, global::System.Int32 itemBookingId, global::System.Int32 itemBookingStatusCodeId, global::System.DateTime createdDate)
        {
            ItemBookingStatusHistory itemBookingStatusHistory = new ItemBookingStatusHistory();
            itemBookingStatusHistory.ItemBookingStatusHistoryId = itemBookingStatusHistoryId;
            itemBookingStatusHistory.ItemBookingId = itemBookingId;
            itemBookingStatusHistory.ItemBookingStatusCodeId = itemBookingStatusCodeId;
            itemBookingStatusHistory.CreatedDate = createdDate;
            return itemBookingStatusHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBookingStatusHistoryId
        {
            get
            {
                return _ItemBookingStatusHistoryId;
            }
            set
            {
                if (_ItemBookingStatusHistoryId != value)
                {
                    OnItemBookingStatusHistoryIdChanging(value);
                    ReportPropertyChanging("ItemBookingStatusHistoryId");
                    _ItemBookingStatusHistoryId = StructuralObject.SetValidValue(value, "ItemBookingStatusHistoryId");
                    ReportPropertyChanged("ItemBookingStatusHistoryId");
                    OnItemBookingStatusHistoryIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemBookingStatusHistoryId;
        partial void OnItemBookingStatusHistoryIdChanging(global::System.Int32 value);
        partial void OnItemBookingStatusHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBookingId
        {
            get
            {
                return _ItemBookingId;
            }
            set
            {
                OnItemBookingIdChanging(value);
                ReportPropertyChanging("ItemBookingId");
                _ItemBookingId = StructuralObject.SetValidValue(value, "ItemBookingId");
                ReportPropertyChanged("ItemBookingId");
                OnItemBookingIdChanged();
            }
        }
        private global::System.Int32 _ItemBookingId;
        partial void OnItemBookingIdChanging(global::System.Int32 value);
        partial void OnItemBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBookingStatusCodeId
        {
            get
            {
                return _ItemBookingStatusCodeId;
            }
            set
            {
                OnItemBookingStatusCodeIdChanging(value);
                ReportPropertyChanging("ItemBookingStatusCodeId");
                _ItemBookingStatusCodeId = StructuralObject.SetValidValue(value, "ItemBookingStatusCodeId");
                ReportPropertyChanged("ItemBookingStatusCodeId");
                OnItemBookingStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _ItemBookingStatusCodeId;
        partial void OnItemBookingStatusCodeIdChanging(global::System.Int32 value);
        partial void OnItemBookingStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookingStatusHistories_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBookingStatusHistories_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBookingStatusHistories_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBookingStatusHistories_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_ItemBookingStatusHistories_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookingStatusHistories_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ItemBookingStatusHistories_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ItemBookingStatusHistories_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ItemBookingStatusHistories_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_ItemBookingStatusHistories_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookingStatusHistories_ItemBookingStatusHistories", "ItemBooking")]
        public ItemBooking ItemBooking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBooking>("StageBitz.Data.FK_ItemBookingStatusHistories_ItemBookingStatusHistories", "ItemBooking").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBooking>("StageBitz.Data.FK_ItemBookingStatusHistories_ItemBookingStatusHistories", "ItemBooking").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemBooking> ItemBookingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBooking>("StageBitz.Data.FK_ItemBookingStatusHistories_ItemBookingStatusHistories", "ItemBooking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemBooking>("StageBitz.Data.FK_ItemBookingStatusHistories_ItemBookingStatusHistories", "ItemBooking", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemBookingTimeline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemBookingTimeline : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemBookingTimeline object.
        /// </summary>
        /// <param name="itemBookingTimelineId">Initial value of the ItemBookingTimelineId property.</param>
        /// <param name="bookedQuntity">Initial value of the BookedQuntity property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        public static ItemBookingTimeline CreateItemBookingTimeline(global::System.Int32 itemBookingTimelineId, global::System.Int32 bookedQuntity, global::System.Int32 itemId)
        {
            ItemBookingTimeline itemBookingTimeline = new ItemBookingTimeline();
            itemBookingTimeline.ItemBookingTimelineId = itemBookingTimelineId;
            itemBookingTimeline.BookedQuntity = bookedQuntity;
            itemBookingTimeline.ItemId = itemId;
            return itemBookingTimeline;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBookingTimelineId
        {
            get
            {
                return _ItemBookingTimelineId;
            }
            set
            {
                if (_ItemBookingTimelineId != value)
                {
                    OnItemBookingTimelineIdChanging(value);
                    ReportPropertyChanging("ItemBookingTimelineId");
                    _ItemBookingTimelineId = StructuralObject.SetValidValue(value, "ItemBookingTimelineId");
                    ReportPropertyChanged("ItemBookingTimelineId");
                    OnItemBookingTimelineIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemBookingTimelineId;
        partial void OnItemBookingTimelineIdChanging(global::System.Int32 value);
        partial void OnItemBookingTimelineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookedQuntity
        {
            get
            {
                return _BookedQuntity;
            }
            set
            {
                OnBookedQuntityChanging(value);
                ReportPropertyChanging("BookedQuntity");
                _BookedQuntity = StructuralObject.SetValidValue(value, "BookedQuntity");
                ReportPropertyChanged("BookedQuntity");
                OnBookedQuntityChanged();
            }
        }
        private global::System.Int32 _BookedQuntity;
        partial void OnBookedQuntityChanging(global::System.Int32 value);
        partial void OnBookedQuntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookingTimeline_Items", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemBookingTimeline_Items", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemBookingTimeline_Items", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemBookingTimeline_Items", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("StageBitz.Data.FK_ItemBookingTimeline_Items", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemBrief")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemBrief : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemBrief object.
        /// </summary>
        /// <param name="itemBriefId">Initial value of the ItemBriefId property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="itemBriefStatusCodeId">Initial value of the ItemBriefStatusCodeId property.</param>
        public static ItemBrief CreateItemBrief(global::System.Int32 itemBriefId, global::System.Int32 projectId, global::System.String name, global::System.Int32 itemBriefStatusCodeId)
        {
            ItemBrief itemBrief = new ItemBrief();
            itemBrief.ItemBriefId = itemBriefId;
            itemBrief.ProjectId = projectId;
            itemBrief.Name = name;
            itemBrief.ItemBriefStatusCodeId = itemBriefStatusCodeId;
            return itemBrief;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefId
        {
            get
            {
                return _ItemBriefId;
            }
            set
            {
                if (_ItemBriefId != value)
                {
                    OnItemBriefIdChanging(value);
                    ReportPropertyChanging("ItemBriefId");
                    _ItemBriefId = StructuralObject.SetValidValue(value, "ItemBriefId");
                    ReportPropertyChanged("ItemBriefId");
                    OnItemBriefIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemBriefId;
        partial void OnItemBriefIdChanging(global::System.Int32 value);
        partial void OnItemBriefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value, "DueDate");
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefStatusCodeId
        {
            get
            {
                return _ItemBriefStatusCodeId;
            }
            set
            {
                OnItemBriefStatusCodeIdChanging(value);
                ReportPropertyChanging("ItemBriefStatusCodeId");
                _ItemBriefStatusCodeId = StructuralObject.SetValidValue(value, "ItemBriefStatusCodeId");
                ReportPropertyChanged("ItemBriefStatusCodeId");
                OnItemBriefStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _ItemBriefStatusCodeId;
        partial void OnItemBriefStatusCodeIdChanging(global::System.Int32 value);
        partial void OnItemBriefStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Brief
        {
            get
            {
                return _Brief;
            }
            set
            {
                OnBriefChanging(value);
                ReportPropertyChanging("Brief");
                _Brief = StructuralObject.SetValidValue(value, true, "Brief");
                ReportPropertyChanged("Brief");
                OnBriefChanged();
            }
        }
        private global::System.String _Brief;
        partial void OnBriefChanging(global::System.String value);
        partial void OnBriefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Act
        {
            get
            {
                return _Act;
            }
            set
            {
                OnActChanging(value);
                ReportPropertyChanging("Act");
                _Act = StructuralObject.SetValidValue(value, true, "Act");
                ReportPropertyChanged("Act");
                OnActChanged();
            }
        }
        private global::System.String _Act;
        partial void OnActChanging(global::System.String value);
        partial void OnActChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Scene
        {
            get
            {
                return _Scene;
            }
            set
            {
                OnSceneChanging(value);
                ReportPropertyChanging("Scene");
                _Scene = StructuralObject.SetValidValue(value, true, "Scene");
                ReportPropertyChanged("Scene");
                OnSceneChanged();
            }
        }
        private global::System.String _Scene;
        partial void OnSceneChanging(global::System.String value);
        partial void OnSceneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Page
        {
            get
            {
                return _Page;
            }
            set
            {
                OnPageChanging(value);
                ReportPropertyChanging("Page");
                _Page = StructuralObject.SetValidValue(value, true, "Page");
                ReportPropertyChanged("Page");
                OnPageChanged();
            }
        }
        private global::System.String _Page;
        partial void OnPageChanging(global::System.String value);
        partial void OnPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true, "Category");
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Character
        {
            get
            {
                return _Character;
            }
            set
            {
                OnCharacterChanging(value);
                ReportPropertyChanging("Character");
                _Character = StructuralObject.SetValidValue(value, true, "Character");
                ReportPropertyChanged("Character");
                OnCharacterChanged();
            }
        }
        private global::System.String _Character;
        partial void OnCharacterChanging(global::System.String value);
        partial void OnCharacterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Preset
        {
            get
            {
                return _Preset;
            }
            set
            {
                OnPresetChanging(value);
                ReportPropertyChanging("Preset");
                _Preset = StructuralObject.SetValidValue(value, true, "Preset");
                ReportPropertyChanged("Preset");
                OnPresetChanged();
            }
        }
        private global::System.String _Preset;
        partial void OnPresetChanging(global::System.String value);
        partial void OnPresetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Approver
        {
            get
            {
                return _Approver;
            }
            set
            {
                OnApproverChanging(value);
                ReportPropertyChanging("Approver");
                _Approver = StructuralObject.SetValidValue(value, true, "Approver");
                ReportPropertyChanged("Approver");
                OnApproverChanged();
            }
        }
        private global::System.String _Approver;
        partial void OnApproverChanging(global::System.String value);
        partial void OnApproverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RehearsalItem
        {
            get
            {
                return _RehearsalItem;
            }
            set
            {
                OnRehearsalItemChanging(value);
                ReportPropertyChanging("RehearsalItem");
                _RehearsalItem = StructuralObject.SetValidValue(value, true, "RehearsalItem");
                ReportPropertyChanged("RehearsalItem");
                OnRehearsalItemChanged();
            }
        }
        private global::System.String _RehearsalItem;
        partial void OnRehearsalItemChanging(global::System.String value);
        partial void OnRehearsalItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Usage
        {
            get
            {
                return _Usage;
            }
            set
            {
                OnUsageChanging(value);
                ReportPropertyChanging("Usage");
                _Usage = StructuralObject.SetValidValue(value, true, "Usage");
                ReportPropertyChanged("Usage");
                OnUsageChanged();
            }
        }
        private global::System.String _Usage;
        partial void OnUsageChanging(global::System.String value);
        partial void OnUsageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Considerations
        {
            get
            {
                return _Considerations;
            }
            set
            {
                OnConsiderationsChanging(value);
                ReportPropertyChanging("Considerations");
                _Considerations = StructuralObject.SetValidValue(value, true, "Considerations");
                ReportPropertyChanged("Considerations");
                OnConsiderationsChanged();
            }
        }
        private global::System.String _Considerations;
        partial void OnConsiderationsChanging(global::System.String value);
        partial void OnConsiderationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Budget
        {
            get
            {
                return _Budget;
            }
            set
            {
                OnBudgetChanging(value);
                ReportPropertyChanging("Budget");
                _Budget = StructuralObject.SetValidValue(value, "Budget");
                ReportPropertyChanged("Budget");
                OnBudgetChanged();
            }
        }
        private Nullable<global::System.Decimal> _Budget;
        partial void OnBudgetChanging(Nullable<global::System.Decimal> value);
        partial void OnBudgetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefs_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBriefs_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBriefs_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBriefs_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_ItemBriefs_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefs_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ItemBriefs_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ItemBriefs_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ItemBriefs_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("StageBitz.Data.FK_ItemBriefs_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefTasks_ItemBriefs", "ItemBriefTask")]
        public EntityCollection<ItemBriefTask> ItemBriefTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBriefTask>("StageBitz.Data.FK_ItemBriefTasks_ItemBriefs", "ItemBriefTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBriefTask>("StageBitz.Data.FK_ItemBriefTasks_ItemBriefs", "ItemBriefTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefTypes_ItemBriefTypes", "ItemBriefType")]
        public EntityCollection<ItemBriefType> ItemBriefTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBriefType>("StageBitz.Data.FK_ItemBriefTypes_ItemBriefTypes", "ItemBriefType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBriefType>("StageBitz.Data.FK_ItemBriefTypes_ItemBriefTypes", "ItemBriefType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefValues_ItemBriefs", "ItemBriefValue")]
        public EntityCollection<ItemBriefValue> ItemBriefValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBriefValue>("StageBitz.Data.FK_ItemBriefValues_ItemBriefs", "ItemBriefValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBriefValue>("StageBitz.Data.FK_ItemBriefValues_ItemBriefs", "ItemBriefValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemBriefs", "ItemVersionHistory")]
        public EntityCollection<ItemVersionHistory> ItemVersionHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_ItemBriefs", "ItemVersionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_ItemBriefs", "ItemVersionHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemBriefItemDocumentMedia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemBriefItemDocumentMedia : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemBriefItemDocumentMedia object.
        /// </summary>
        /// <param name="itemBriefItemDocumentMediaId">Initial value of the ItemBriefItemDocumentMediaId property.</param>
        /// <param name="itemBriefDocumentMediaId">Initial value of the ItemBriefDocumentMediaId property.</param>
        /// <param name="itemDocumentMediaId">Initial value of the ItemDocumentMediaId property.</param>
        /// <param name="sourceTable">Initial value of the SourceTable property.</param>
        public static ItemBriefItemDocumentMedia CreateItemBriefItemDocumentMedia(global::System.Int32 itemBriefItemDocumentMediaId, global::System.Int32 itemBriefDocumentMediaId, global::System.Int32 itemDocumentMediaId, global::System.String sourceTable)
        {
            ItemBriefItemDocumentMedia itemBriefItemDocumentMedia = new ItemBriefItemDocumentMedia();
            itemBriefItemDocumentMedia.ItemBriefItemDocumentMediaId = itemBriefItemDocumentMediaId;
            itemBriefItemDocumentMedia.ItemBriefDocumentMediaId = itemBriefDocumentMediaId;
            itemBriefItemDocumentMedia.ItemDocumentMediaId = itemDocumentMediaId;
            itemBriefItemDocumentMedia.SourceTable = sourceTable;
            return itemBriefItemDocumentMedia;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefItemDocumentMediaId
        {
            get
            {
                return _ItemBriefItemDocumentMediaId;
            }
            set
            {
                if (_ItemBriefItemDocumentMediaId != value)
                {
                    OnItemBriefItemDocumentMediaIdChanging(value);
                    ReportPropertyChanging("ItemBriefItemDocumentMediaId");
                    _ItemBriefItemDocumentMediaId = StructuralObject.SetValidValue(value, "ItemBriefItemDocumentMediaId");
                    ReportPropertyChanged("ItemBriefItemDocumentMediaId");
                    OnItemBriefItemDocumentMediaIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemBriefItemDocumentMediaId;
        partial void OnItemBriefItemDocumentMediaIdChanging(global::System.Int32 value);
        partial void OnItemBriefItemDocumentMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefDocumentMediaId
        {
            get
            {
                return _ItemBriefDocumentMediaId;
            }
            set
            {
                OnItemBriefDocumentMediaIdChanging(value);
                ReportPropertyChanging("ItemBriefDocumentMediaId");
                _ItemBriefDocumentMediaId = StructuralObject.SetValidValue(value, "ItemBriefDocumentMediaId");
                ReportPropertyChanged("ItemBriefDocumentMediaId");
                OnItemBriefDocumentMediaIdChanged();
            }
        }
        private global::System.Int32 _ItemBriefDocumentMediaId;
        partial void OnItemBriefDocumentMediaIdChanging(global::System.Int32 value);
        partial void OnItemBriefDocumentMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemDocumentMediaId
        {
            get
            {
                return _ItemDocumentMediaId;
            }
            set
            {
                OnItemDocumentMediaIdChanging(value);
                ReportPropertyChanging("ItemDocumentMediaId");
                _ItemDocumentMediaId = StructuralObject.SetValidValue(value, "ItemDocumentMediaId");
                ReportPropertyChanged("ItemDocumentMediaId");
                OnItemDocumentMediaIdChanged();
            }
        }
        private global::System.Int32 _ItemDocumentMediaId;
        partial void OnItemDocumentMediaIdChanging(global::System.Int32 value);
        partial void OnItemDocumentMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceTable
        {
            get
            {
                return _SourceTable;
            }
            set
            {
                OnSourceTableChanging(value);
                ReportPropertyChanging("SourceTable");
                _SourceTable = StructuralObject.SetValidValue(value, false, "SourceTable");
                ReportPropertyChanged("SourceTable");
                OnSourceTableChanged();
            }
        }
        private global::System.String _SourceTable;
        partial void OnSourceTableChanging(global::System.String value);
        partial void OnSourceTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateDate;
        partial void OnLastUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefItemDocumentMedia_DocumentMedia", "DocumentMedia")]
        public DocumentMedia DocumentMedia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentMedia>("StageBitz.Data.FK_ItemBriefItemDocumentMedia_DocumentMedia", "DocumentMedia").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentMedia>("StageBitz.Data.FK_ItemBriefItemDocumentMedia_DocumentMedia", "DocumentMedia").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentMedia> DocumentMediaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentMedia>("StageBitz.Data.FK_ItemBriefItemDocumentMedia_DocumentMedia", "DocumentMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentMedia>("StageBitz.Data.FK_ItemBriefItemDocumentMedia_DocumentMedia", "DocumentMedia", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemBriefTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemBriefTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemBriefTask object.
        /// </summary>
        /// <param name="itemBriefTaskId">Initial value of the ItemBriefTaskId property.</param>
        /// <param name="itemBriefId">Initial value of the ItemBriefId property.</param>
        /// <param name="itemBriefTaskStatusCodeId">Initial value of the ItemBriefTaskStatusCodeId property.</param>
        public static ItemBriefTask CreateItemBriefTask(global::System.Int32 itemBriefTaskId, global::System.Int32 itemBriefId, global::System.Int32 itemBriefTaskStatusCodeId)
        {
            ItemBriefTask itemBriefTask = new ItemBriefTask();
            itemBriefTask.ItemBriefTaskId = itemBriefTaskId;
            itemBriefTask.ItemBriefId = itemBriefId;
            itemBriefTask.ItemBriefTaskStatusCodeId = itemBriefTaskStatusCodeId;
            return itemBriefTask;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefTaskId
        {
            get
            {
                return _ItemBriefTaskId;
            }
            set
            {
                if (_ItemBriefTaskId != value)
                {
                    OnItemBriefTaskIdChanging(value);
                    ReportPropertyChanging("ItemBriefTaskId");
                    _ItemBriefTaskId = StructuralObject.SetValidValue(value, "ItemBriefTaskId");
                    ReportPropertyChanged("ItemBriefTaskId");
                    OnItemBriefTaskIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemBriefTaskId;
        partial void OnItemBriefTaskIdChanging(global::System.Int32 value);
        partial void OnItemBriefTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefId
        {
            get
            {
                return _ItemBriefId;
            }
            set
            {
                OnItemBriefIdChanging(value);
                ReportPropertyChanging("ItemBriefId");
                _ItemBriefId = StructuralObject.SetValidValue(value, "ItemBriefId");
                ReportPropertyChanged("ItemBriefId");
                OnItemBriefIdChanged();
            }
        }
        private global::System.Int32 _ItemBriefId;
        partial void OnItemBriefIdChanging(global::System.Int32 value);
        partial void OnItemBriefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefTaskStatusCodeId
        {
            get
            {
                return _ItemBriefTaskStatusCodeId;
            }
            set
            {
                OnItemBriefTaskStatusCodeIdChanging(value);
                ReportPropertyChanging("ItemBriefTaskStatusCodeId");
                _ItemBriefTaskStatusCodeId = StructuralObject.SetValidValue(value, "ItemBriefTaskStatusCodeId");
                ReportPropertyChanged("ItemBriefTaskStatusCodeId");
                OnItemBriefTaskStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _ItemBriefTaskStatusCodeId;
        partial void OnItemBriefTaskStatusCodeIdChanging(global::System.Int32 value);
        partial void OnItemBriefTaskStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Vendor
        {
            get
            {
                return _Vendor;
            }
            set
            {
                OnVendorChanging(value);
                ReportPropertyChanging("Vendor");
                _Vendor = StructuralObject.SetValidValue(value, true, "Vendor");
                ReportPropertyChanged("Vendor");
                OnVendorChanged();
            }
        }
        private global::System.String _Vendor;
        partial void OnVendorChanging(global::System.String value);
        partial void OnVendorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstimatedCost
        {
            get
            {
                return _EstimatedCost;
            }
            set
            {
                OnEstimatedCostChanging(value);
                ReportPropertyChanging("EstimatedCost");
                _EstimatedCost = StructuralObject.SetValidValue(value, "EstimatedCost");
                ReportPropertyChanged("EstimatedCost");
                OnEstimatedCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstimatedCost;
        partial void OnEstimatedCostChanging(Nullable<global::System.Decimal> value);
        partial void OnEstimatedCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetCost
        {
            get
            {
                return _NetCost;
            }
            set
            {
                OnNetCostChanging(value);
                ReportPropertyChanging("NetCost");
                _NetCost = StructuralObject.SetValidValue(value, "NetCost");
                ReportPropertyChanged("NetCost");
                OnNetCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetCost;
        partial void OnNetCostChanging(Nullable<global::System.Decimal> value);
        partial void OnNetCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Tax
        {
            get
            {
                return _Tax;
            }
            set
            {
                OnTaxChanging(value);
                ReportPropertyChanging("Tax");
                _Tax = StructuralObject.SetValidValue(value, "Tax");
                ReportPropertyChanged("Tax");
                OnTaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _Tax;
        partial void OnTaxChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletedDate
        {
            get
            {
                return _CompletedDate;
            }
            set
            {
                OnCompletedDateChanging(value);
                ReportPropertyChanging("CompletedDate");
                _CompletedDate = StructuralObject.SetValidValue(value, "CompletedDate");
                ReportPropertyChanged("CompletedDate");
                OnCompletedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletedDate;
        partial void OnCompletedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalCost
        {
            get
            {
                return _TotalCost;
            }
            set
            {
                OnTotalCostChanging(value);
                ReportPropertyChanging("TotalCost");
                _TotalCost = StructuralObject.SetValidValue(value, "TotalCost");
                ReportPropertyChanged("TotalCost");
                OnTotalCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalCost;
        partial void OnTotalCostChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalCostChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefTasks_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBriefTasks_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBriefTasks_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBriefTasks_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_ItemBriefTasks_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefTasks_ItemBriefs", "ItemBrief")]
        public ItemBrief ItemBrief
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefTasks_ItemBriefs", "ItemBrief").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefTasks_ItemBriefs", "ItemBrief").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemBrief> ItemBriefReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefTasks_ItemBriefs", "ItemBrief");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefTasks_ItemBriefs", "ItemBrief", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_TaskListsItemBriefTasks_ItemBriefTasks", "TaskListsItemBriefTask")]
        public EntityCollection<TaskListsItemBriefTask> TaskListsItemBriefTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskListsItemBriefTask>("StageBitz.Data.FK_TaskListsItemBriefTasks_ItemBriefTasks", "TaskListsItemBriefTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskListsItemBriefTask>("StageBitz.Data.FK_TaskListsItemBriefTasks_ItemBriefTasks", "TaskListsItemBriefTask", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemBriefType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemBriefType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemBriefType object.
        /// </summary>
        /// <param name="itemBriefTypeId">Initial value of the ItemBriefTypeId property.</param>
        /// <param name="itemTypeId">Initial value of the ItemTypeId property.</param>
        /// <param name="itemBriefId">Initial value of the ItemBriefId property.</param>
        /// <param name="itemBriefTypeCodeId">Initial value of the ItemBriefTypeCodeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ItemBriefType CreateItemBriefType(global::System.Int32 itemBriefTypeId, global::System.Int32 itemTypeId, global::System.Int32 itemBriefId, global::System.Int32 itemBriefTypeCodeId, global::System.Boolean isActive)
        {
            ItemBriefType itemBriefType = new ItemBriefType();
            itemBriefType.ItemBriefTypeId = itemBriefTypeId;
            itemBriefType.ItemTypeId = itemTypeId;
            itemBriefType.ItemBriefId = itemBriefId;
            itemBriefType.ItemBriefTypeCodeId = itemBriefTypeCodeId;
            itemBriefType.IsActive = isActive;
            return itemBriefType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefTypeId
        {
            get
            {
                return _ItemBriefTypeId;
            }
            set
            {
                if (_ItemBriefTypeId != value)
                {
                    OnItemBriefTypeIdChanging(value);
                    ReportPropertyChanging("ItemBriefTypeId");
                    _ItemBriefTypeId = StructuralObject.SetValidValue(value, "ItemBriefTypeId");
                    ReportPropertyChanged("ItemBriefTypeId");
                    OnItemBriefTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemBriefTypeId;
        partial void OnItemBriefTypeIdChanging(global::System.Int32 value);
        partial void OnItemBriefTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value, "ItemTypeId");
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private global::System.Int32 _ItemTypeId;
        partial void OnItemTypeIdChanging(global::System.Int32 value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefId
        {
            get
            {
                return _ItemBriefId;
            }
            set
            {
                OnItemBriefIdChanging(value);
                ReportPropertyChanging("ItemBriefId");
                _ItemBriefId = StructuralObject.SetValidValue(value, "ItemBriefId");
                ReportPropertyChanged("ItemBriefId");
                OnItemBriefIdChanged();
            }
        }
        private global::System.Int32 _ItemBriefId;
        partial void OnItemBriefIdChanging(global::System.Int32 value);
        partial void OnItemBriefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefTypeCodeId
        {
            get
            {
                return _ItemBriefTypeCodeId;
            }
            set
            {
                OnItemBriefTypeCodeIdChanging(value);
                ReportPropertyChanging("ItemBriefTypeCodeId");
                _ItemBriefTypeCodeId = StructuralObject.SetValidValue(value, "ItemBriefTypeCodeId");
                ReportPropertyChanged("ItemBriefTypeCodeId");
                OnItemBriefTypeCodeIdChanged();
            }
        }
        private global::System.Int32 _ItemBriefTypeCodeId;
        partial void OnItemBriefTypeCodeIdChanging(global::System.Int32 value);
        partial void OnItemBriefTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefTypes_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBriefTypes_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBriefTypes_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ItemBriefTypes_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_ItemBriefTypes_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefTypes_ItemBriefTypes", "ItemBrief")]
        public ItemBrief ItemBrief
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefTypes_ItemBriefTypes", "ItemBrief").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefTypes_ItemBriefTypes", "ItemBrief").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemBrief> ItemBriefReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefTypes_ItemBriefTypes", "ItemBrief");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefTypes_ItemBriefTypes", "ItemBrief", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefTypes_ItemTypes", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemBriefTypes_ItemTypes", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemBriefTypes_ItemTypes", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemBriefTypes_ItemTypes", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("StageBitz.Data.FK_ItemBriefTypes_ItemTypes", "ItemType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemBriefValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemBriefValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemBriefValue object.
        /// </summary>
        /// <param name="itemBriefValueId">Initial value of the ItemBriefValueId property.</param>
        /// <param name="itemBriefId">Initial value of the ItemBriefId property.</param>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        public static ItemBriefValue CreateItemBriefValue(global::System.Int32 itemBriefValueId, global::System.Int32 itemBriefId, global::System.Int32 fieldId)
        {
            ItemBriefValue itemBriefValue = new ItemBriefValue();
            itemBriefValue.ItemBriefValueId = itemBriefValueId;
            itemBriefValue.ItemBriefId = itemBriefId;
            itemBriefValue.FieldId = fieldId;
            return itemBriefValue;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefValueId
        {
            get
            {
                return _ItemBriefValueId;
            }
            set
            {
                if (_ItemBriefValueId != value)
                {
                    OnItemBriefValueIdChanging(value);
                    ReportPropertyChanging("ItemBriefValueId");
                    _ItemBriefValueId = StructuralObject.SetValidValue(value, "ItemBriefValueId");
                    ReportPropertyChanged("ItemBriefValueId");
                    OnItemBriefValueIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemBriefValueId;
        partial void OnItemBriefValueIdChanging(global::System.Int32 value);
        partial void OnItemBriefValueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefId
        {
            get
            {
                return _ItemBriefId;
            }
            set
            {
                OnItemBriefIdChanging(value);
                ReportPropertyChanging("ItemBriefId");
                _ItemBriefId = StructuralObject.SetValidValue(value, "ItemBriefId");
                ReportPropertyChanged("ItemBriefId");
                OnItemBriefIdChanged();
            }
        }
        private global::System.Int32 _ItemBriefId;
        partial void OnItemBriefIdChanging(global::System.Int32 value);
        partial void OnItemBriefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                OnFieldIdChanging(value);
                ReportPropertyChanging("FieldId");
                _FieldId = StructuralObject.SetValidValue(value, "FieldId");
                ReportPropertyChanged("FieldId");
                OnFieldIdChanged();
            }
        }
        private global::System.Int32 _FieldId;
        partial void OnFieldIdChanging(global::System.Int32 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldOptionId
        {
            get
            {
                return _FieldOptionId;
            }
            set
            {
                OnFieldOptionIdChanging(value);
                ReportPropertyChanging("FieldOptionId");
                _FieldOptionId = StructuralObject.SetValidValue(value, "FieldOptionId");
                ReportPropertyChanged("FieldOptionId");
                OnFieldOptionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldOptionId;
        partial void OnFieldOptionIdChanging(Nullable<global::System.Int32> value);
        partial void OnFieldOptionIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefValues_ItemBriefs", "ItemBrief")]
        public ItemBrief ItemBrief
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefValues_ItemBriefs", "ItemBrief").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefValues_ItemBriefs", "ItemBrief").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemBrief> ItemBriefReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefValues_ItemBriefs", "ItemBrief");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemBriefValues_ItemBriefs", "ItemBrief", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefValues_ItemBriefValues1", "FieldOption")]
        public FieldOption FieldOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOption>("StageBitz.Data.FK_ItemBriefValues_ItemBriefValues1", "FieldOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOption>("StageBitz.Data.FK_ItemBriefValues_ItemBriefValues1", "FieldOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldOption> FieldOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOption>("StageBitz.Data.FK_ItemBriefValues_ItemBriefValues1", "FieldOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldOption>("StageBitz.Data.FK_ItemBriefValues_ItemBriefValues1", "FieldOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefValues_Fields", "Field")]
        public Field Field
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemBriefValues_Fields", "Field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemBriefValues_Fields", "Field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Field> FieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemBriefValues_Fields", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Field>("StageBitz.Data.FK_ItemBriefValues_Fields", "Field", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemType object.
        /// </summary>
        /// <param name="itemTypeId">Initial value of the ItemTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ItemType CreateItemType(global::System.Int32 itemTypeId, global::System.String name)
        {
            ItemType itemType = new ItemType();
            itemType.ItemTypeId = itemTypeId;
            itemType.Name = name;
            return itemType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                if (_ItemTypeId != value)
                {
                    OnItemTypeIdChanging(value);
                    ReportPropertyChanging("ItemTypeId");
                    _ItemTypeId = StructuralObject.SetValidValue(value, "ItemTypeId");
                    ReportPropertyChanged("ItemTypeId");
                    OnItemTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemTypeId;
        partial void OnItemTypeIdChanging(global::System.Int32 value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefTypes_ItemTypes", "ItemBriefType")]
        public EntityCollection<ItemBriefType> ItemBriefTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBriefType>("StageBitz.Data.FK_ItemBriefTypes_ItemTypes", "ItemBriefType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBriefType>("StageBitz.Data.FK_ItemBriefTypes_ItemTypes", "ItemBriefType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemTypeField_ItemTypes", "ItemTypeField")]
        public EntityCollection<ItemTypeField> ItemTypeFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemTypeField>("StageBitz.Data.FK_ItemTypeField_ItemTypes", "ItemTypeField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemTypeField>("StageBitz.Data.FK_ItemTypeField_ItemTypes", "ItemTypeField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemTypeHtml_ItemTypes", "ItemTypeHtml")]
        public EntityCollection<ItemTypeHtml> ItemTypeHtmls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemTypeHtml>("StageBitz.Data.FK_ItemTypeHtml_ItemTypes", "ItemTypeHtml");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemTypeHtml>("StageBitz.Data.FK_ItemTypeHtml_ItemTypes", "ItemTypeHtml", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectItemTypes_ItemTypes", "ProjectItemType")]
        public EntityCollection<ProjectItemType> ProjectItemTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectItemType>("StageBitz.Data.FK_ProjectItemTypes_ItemTypes", "ProjectItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectItemType>("StageBitz.Data.FK_ProjectItemTypes_ItemTypes", "ProjectItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_UserLastVisitedtItemTypes_ItemTypes", "UserLastVisitedtItemType")]
        public EntityCollection<UserLastVisitedtItemType> UserLastVisitedtItemTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserLastVisitedtItemType>("StageBitz.Data.FK_UserLastVisitedtItemTypes_ItemTypes", "UserLastVisitedtItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserLastVisitedtItemType>("StageBitz.Data.FK_UserLastVisitedtItemTypes_ItemTypes", "UserLastVisitedtItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Items_ItemTypes", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("StageBitz.Data.FK_Items_ItemTypes", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("StageBitz.Data.FK_Items_ItemTypes", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemTypes", "ItemVersionHistory")]
        public EntityCollection<ItemVersionHistory> ItemVersionHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_ItemTypes", "ItemVersionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_ItemTypes", "ItemVersionHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemTypeField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemTypeField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemTypeField object.
        /// </summary>
        /// <param name="itemTypeFieldId">Initial value of the ItemTypeFieldId property.</param>
        /// <param name="itemTypeId">Initial value of the ItemTypeId property.</param>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        public static ItemTypeField CreateItemTypeField(global::System.Int32 itemTypeFieldId, global::System.Int32 itemTypeId, global::System.Int32 fieldId)
        {
            ItemTypeField itemTypeField = new ItemTypeField();
            itemTypeField.ItemTypeFieldId = itemTypeFieldId;
            itemTypeField.ItemTypeId = itemTypeId;
            itemTypeField.FieldId = fieldId;
            return itemTypeField;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemTypeFieldId
        {
            get
            {
                return _ItemTypeFieldId;
            }
            set
            {
                if (_ItemTypeFieldId != value)
                {
                    OnItemTypeFieldIdChanging(value);
                    ReportPropertyChanging("ItemTypeFieldId");
                    _ItemTypeFieldId = StructuralObject.SetValidValue(value, "ItemTypeFieldId");
                    ReportPropertyChanged("ItemTypeFieldId");
                    OnItemTypeFieldIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemTypeFieldId;
        partial void OnItemTypeFieldIdChanging(global::System.Int32 value);
        partial void OnItemTypeFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value, "ItemTypeId");
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private global::System.Int32 _ItemTypeId;
        partial void OnItemTypeIdChanging(global::System.Int32 value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                OnFieldIdChanging(value);
                ReportPropertyChanging("FieldId");
                _FieldId = StructuralObject.SetValidValue(value, "FieldId");
                ReportPropertyChanged("FieldId");
                OnFieldIdChanged();
            }
        }
        private global::System.Int32 _FieldId;
        partial void OnFieldIdChanging(global::System.Int32 value);
        partial void OnFieldIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemTypeField_ItemTypes", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemTypeField_ItemTypes", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemTypeField_ItemTypes", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemTypeField_ItemTypes", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("StageBitz.Data.FK_ItemTypeField_ItemTypes", "ItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemTypeField_Fields", "Field")]
        public Field Field
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemTypeField_Fields", "Field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemTypeField_Fields", "Field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Field> FieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemTypeField_Fields", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Field>("StageBitz.Data.FK_ItemTypeField_Fields", "Field", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemTypeHtml")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemTypeHtml : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemTypeHtml object.
        /// </summary>
        /// <param name="itemTypeHtmlId">Initial value of the ItemTypeHtmlId property.</param>
        /// <param name="itemTypeId">Initial value of the ItemTypeId property.</param>
        /// <param name="html">Initial value of the Html property.</param>
        public static ItemTypeHtml CreateItemTypeHtml(global::System.Int32 itemTypeHtmlId, global::System.Int32 itemTypeId, global::System.String html)
        {
            ItemTypeHtml itemTypeHtml = new ItemTypeHtml();
            itemTypeHtml.ItemTypeHtmlId = itemTypeHtmlId;
            itemTypeHtml.ItemTypeId = itemTypeId;
            itemTypeHtml.Html = html;
            return itemTypeHtml;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemTypeHtmlId
        {
            get
            {
                return _ItemTypeHtmlId;
            }
            set
            {
                if (_ItemTypeHtmlId != value)
                {
                    OnItemTypeHtmlIdChanging(value);
                    ReportPropertyChanging("ItemTypeHtmlId");
                    _ItemTypeHtmlId = StructuralObject.SetValidValue(value, "ItemTypeHtmlId");
                    ReportPropertyChanged("ItemTypeHtmlId");
                    OnItemTypeHtmlIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemTypeHtmlId;
        partial void OnItemTypeHtmlIdChanging(global::System.Int32 value);
        partial void OnItemTypeHtmlIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value, "ItemTypeId");
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private global::System.Int32 _ItemTypeId;
        partial void OnItemTypeIdChanging(global::System.Int32 value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Html
        {
            get
            {
                return _Html;
            }
            set
            {
                OnHtmlChanging(value);
                ReportPropertyChanging("Html");
                _Html = StructuralObject.SetValidValue(value, false, "Html");
                ReportPropertyChanged("Html");
                OnHtmlChanged();
            }
        }
        private global::System.String _Html;
        partial void OnHtmlChanging(global::System.String value);
        partial void OnHtmlChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemTypeHtml_ItemTypes", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemTypeHtml_ItemTypes", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemTypeHtml_ItemTypes", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemTypeHtml_ItemTypes", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("StageBitz.Data.FK_ItemTypeHtml_ItemTypes", "ItemType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemValue object.
        /// </summary>
        /// <param name="itemValueId">Initial value of the ItemValueId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        public static ItemValue CreateItemValue(global::System.Int32 itemValueId, global::System.Int32 itemId, global::System.Int32 fieldId)
        {
            ItemValue itemValue = new ItemValue();
            itemValue.ItemValueId = itemValueId;
            itemValue.ItemId = itemId;
            itemValue.FieldId = fieldId;
            return itemValue;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemValueId
        {
            get
            {
                return _ItemValueId;
            }
            set
            {
                if (_ItemValueId != value)
                {
                    OnItemValueIdChanging(value);
                    ReportPropertyChanging("ItemValueId");
                    _ItemValueId = StructuralObject.SetValidValue(value, "ItemValueId");
                    ReportPropertyChanged("ItemValueId");
                    OnItemValueIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemValueId;
        partial void OnItemValueIdChanging(global::System.Int32 value);
        partial void OnItemValueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                OnFieldIdChanging(value);
                ReportPropertyChanging("FieldId");
                _FieldId = StructuralObject.SetValidValue(value, "FieldId");
                ReportPropertyChanged("FieldId");
                OnFieldIdChanged();
            }
        }
        private global::System.Int32 _FieldId;
        partial void OnFieldIdChanging(global::System.Int32 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldOptionId
        {
            get
            {
                return _FieldOptionId;
            }
            set
            {
                OnFieldOptionIdChanging(value);
                ReportPropertyChanging("FieldOptionId");
                _FieldOptionId = StructuralObject.SetValidValue(value, "FieldOptionId");
                ReportPropertyChanged("FieldOptionId");
                OnFieldOptionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldOptionId;
        partial void OnFieldOptionIdChanging(Nullable<global::System.Int32> value);
        partial void OnFieldOptionIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemValues_FieldOptions", "FieldOption")]
        public FieldOption FieldOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOption>("StageBitz.Data.FK_ItemValues_FieldOptions", "FieldOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOption>("StageBitz.Data.FK_ItemValues_FieldOptions", "FieldOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldOption> FieldOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOption>("StageBitz.Data.FK_ItemValues_FieldOptions", "FieldOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldOption>("StageBitz.Data.FK_ItemValues_FieldOptions", "FieldOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemValues_Fields", "Field")]
        public Field Field
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemValues_Fields", "Field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemValues_Fields", "Field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Field> FieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemValues_Fields", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Field>("StageBitz.Data.FK_ItemValues_Fields", "Field", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemValues_Items", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemValues_Items", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemValues_Items", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemValues_Items", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("StageBitz.Data.FK_ItemValues_Items", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemVersionHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemVersionHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemVersionHistory object.
        /// </summary>
        /// <param name="itemVersionHistoryId">Initial value of the ItemVersionHistoryId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="itemBriefId">Initial value of the ItemBriefId property.</param>
        public static ItemVersionHistory CreateItemVersionHistory(global::System.Int32 itemVersionHistoryId, global::System.Int32 itemId, global::System.Int32 itemBriefId)
        {
            ItemVersionHistory itemVersionHistory = new ItemVersionHistory();
            itemVersionHistory.ItemVersionHistoryId = itemVersionHistoryId;
            itemVersionHistory.ItemId = itemId;
            itemVersionHistory.ItemBriefId = itemBriefId;
            return itemVersionHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemVersionHistoryId
        {
            get
            {
                return _ItemVersionHistoryId;
            }
            set
            {
                if (_ItemVersionHistoryId != value)
                {
                    OnItemVersionHistoryIdChanging(value);
                    ReportPropertyChanging("ItemVersionHistoryId");
                    _ItemVersionHistoryId = StructuralObject.SetValidValue(value, "ItemVersionHistoryId");
                    ReportPropertyChanged("ItemVersionHistoryId");
                    OnItemVersionHistoryIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemVersionHistoryId;
        partial void OnItemVersionHistoryIdChanging(global::System.Int32 value);
        partial void OnItemVersionHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefId
        {
            get
            {
                return _ItemBriefId;
            }
            set
            {
                OnItemBriefIdChanging(value);
                ReportPropertyChanging("ItemBriefId");
                _ItemBriefId = StructuralObject.SetValidValue(value, "ItemBriefId");
                ReportPropertyChanged("ItemBriefId");
                OnItemBriefIdChanged();
            }
        }
        private global::System.Int32 _ItemBriefId;
        partial void OnItemBriefIdChanging(global::System.Int32 value);
        partial void OnItemBriefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value, "ItemTypeId");
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemTypeId;
        partial void OnItemTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemBookingId
        {
            get
            {
                return _ItemBookingId;
            }
            set
            {
                OnItemBookingIdChanging(value);
                ReportPropertyChanging("ItemBookingId");
                _ItemBookingId = StructuralObject.SetValidValue(value, "ItemBookingId");
                ReportPropertyChanged("ItemBookingId");
                OnItemBookingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemBookingId;
        partial void OnItemBookingIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemBookingIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemBookings", "ItemBooking")]
        public ItemBooking ItemBooking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBooking>("StageBitz.Data.FK_ItemVersionHistory_ItemBookings", "ItemBooking").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBooking>("StageBitz.Data.FK_ItemVersionHistory_ItemBookings", "ItemBooking").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemBooking> ItemBookingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBooking>("StageBitz.Data.FK_ItemVersionHistory_ItemBookings", "ItemBooking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemBooking>("StageBitz.Data.FK_ItemVersionHistory_ItemBookings", "ItemBooking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemBriefs", "ItemBrief")]
        public ItemBrief ItemBrief
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemVersionHistory_ItemBriefs", "ItemBrief").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemVersionHistory_ItemBriefs", "ItemBrief").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemBrief> ItemBriefReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemVersionHistory_ItemBriefs", "ItemBrief");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemBrief>("StageBitz.Data.FK_ItemVersionHistory_ItemBriefs", "ItemBrief", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_Items", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemVersionHistory_Items", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemVersionHistory_Items", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_ItemVersionHistory_Items", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("StageBitz.Data.FK_ItemVersionHistory_Items", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemTypes", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemVersionHistory_ItemTypes", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemVersionHistory_ItemTypes", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ItemVersionHistory_ItemTypes", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("StageBitz.Data.FK_ItemVersionHistory_ItemTypes", "ItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemVersionHistory1", "ItemVersionHistoryValue")]
        public EntityCollection<ItemVersionHistoryValue> ItemVersionHistoryValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory1", "ItemVersionHistoryValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory1", "ItemVersionHistoryValue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ItemVersionHistoryValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemVersionHistoryValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemVersionHistoryValue object.
        /// </summary>
        /// <param name="itemVersionHistoryValueId">Initial value of the ItemVersionHistoryValueId property.</param>
        /// <param name="itemVersionHistoryId">Initial value of the ItemVersionHistoryId property.</param>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        public static ItemVersionHistoryValue CreateItemVersionHistoryValue(global::System.Int32 itemVersionHistoryValueId, global::System.Int32 itemVersionHistoryId, global::System.Int32 fieldId)
        {
            ItemVersionHistoryValue itemVersionHistoryValue = new ItemVersionHistoryValue();
            itemVersionHistoryValue.ItemVersionHistoryValueId = itemVersionHistoryValueId;
            itemVersionHistoryValue.ItemVersionHistoryId = itemVersionHistoryId;
            itemVersionHistoryValue.FieldId = fieldId;
            return itemVersionHistoryValue;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemVersionHistoryValueId
        {
            get
            {
                return _ItemVersionHistoryValueId;
            }
            set
            {
                if (_ItemVersionHistoryValueId != value)
                {
                    OnItemVersionHistoryValueIdChanging(value);
                    ReportPropertyChanging("ItemVersionHistoryValueId");
                    _ItemVersionHistoryValueId = StructuralObject.SetValidValue(value, "ItemVersionHistoryValueId");
                    ReportPropertyChanged("ItemVersionHistoryValueId");
                    OnItemVersionHistoryValueIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemVersionHistoryValueId;
        partial void OnItemVersionHistoryValueIdChanging(global::System.Int32 value);
        partial void OnItemVersionHistoryValueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemVersionHistoryId
        {
            get
            {
                return _ItemVersionHistoryId;
            }
            set
            {
                OnItemVersionHistoryIdChanging(value);
                ReportPropertyChanging("ItemVersionHistoryId");
                _ItemVersionHistoryId = StructuralObject.SetValidValue(value, "ItemVersionHistoryId");
                ReportPropertyChanged("ItemVersionHistoryId");
                OnItemVersionHistoryIdChanged();
            }
        }
        private global::System.Int32 _ItemVersionHistoryId;
        partial void OnItemVersionHistoryIdChanging(global::System.Int32 value);
        partial void OnItemVersionHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                OnFieldIdChanging(value);
                ReportPropertyChanging("FieldId");
                _FieldId = StructuralObject.SetValidValue(value, "FieldId");
                ReportPropertyChanged("FieldId");
                OnFieldIdChanged();
            }
        }
        private global::System.Int32 _FieldId;
        partial void OnFieldIdChanging(global::System.Int32 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldOptionId
        {
            get
            {
                return _FieldOptionId;
            }
            set
            {
                OnFieldOptionIdChanging(value);
                ReportPropertyChanging("FieldOptionId");
                _FieldOptionId = StructuralObject.SetValidValue(value, "FieldOptionId");
                ReportPropertyChanged("FieldOptionId");
                OnFieldOptionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldOptionId;
        partial void OnFieldOptionIdChanging(Nullable<global::System.Int32> value);
        partial void OnFieldOptionIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_FieldOptions", "FieldOption")]
        public FieldOption FieldOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOption>("StageBitz.Data.FK_ItemVersionHistory_FieldOptions", "FieldOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOption>("StageBitz.Data.FK_ItemVersionHistory_FieldOptions", "FieldOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldOption> FieldOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOption>("StageBitz.Data.FK_ItemVersionHistory_FieldOptions", "FieldOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldOption>("StageBitz.Data.FK_ItemVersionHistory_FieldOptions", "FieldOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemVersionHistory", "ItemVersionHistoryValue1")]
        public EntityCollection<ItemVersionHistoryValue> ItemVersionHistoryValues1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory", "ItemVersionHistoryValue1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory", "ItemVersionHistoryValue1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemVersionHistory", "ItemVersionHistoryValue")]
        public ItemVersionHistoryValue ItemVersionHistoryValue1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory", "ItemVersionHistoryValue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory", "ItemVersionHistoryValue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemVersionHistoryValue> ItemVersionHistoryValue1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory", "ItemVersionHistoryValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemVersionHistoryValue>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory", "ItemVersionHistoryValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_Fields", "Field")]
        public Field Field
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemVersionHistory_Fields", "Field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemVersionHistory_Fields", "Field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Field> FieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("StageBitz.Data.FK_ItemVersionHistory_Fields", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Field>("StageBitz.Data.FK_ItemVersionHistory_Fields", "Field", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemVersionHistory_ItemVersionHistory1", "ItemVersionHistory")]
        public ItemVersionHistory ItemVersionHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory1", "ItemVersionHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory1", "ItemVersionHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemVersionHistory> ItemVersionHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory1", "ItemVersionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemVersionHistory>("StageBitz.Data.FK_ItemVersionHistory_ItemVersionHistory1", "ItemVersionHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="locationName">Initial value of the LocationName property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdatedByUserId">Initial value of the LastUpdatedByUserId property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Location CreateLocation(global::System.Int32 locationId, global::System.String locationName, global::System.Int32 companyId, global::System.Int32 createdByUserId, global::System.DateTime createdDate, global::System.Int32 lastUpdatedByUserId, global::System.DateTime lastUpdatedDate, global::System.Boolean isActive)
        {
            Location location = new Location();
            location.LocationId = locationId;
            location.LocationName = locationName;
            location.CompanyId = companyId;
            location.CreatedByUserId = createdByUserId;
            location.CreatedDate = createdDate;
            location.LastUpdatedByUserId = lastUpdatedByUserId;
            location.LastUpdatedDate = lastUpdatedDate;
            location.IsActive = isActive;
            return location;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                if (_LocationId != value)
                {
                    OnLocationIdChanging(value);
                    ReportPropertyChanging("LocationId");
                    _LocationId = StructuralObject.SetValidValue(value, "LocationId");
                    ReportPropertyChanged("LocationId");
                    OnLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, false, "LocationName");
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentLocationId
        {
            get
            {
                return _ParentLocationId;
            }
            set
            {
                OnParentLocationIdChanging(value);
                ReportPropertyChanging("ParentLocationId");
                _ParentLocationId = StructuralObject.SetValidValue(value, "ParentLocationId");
                ReportPropertyChanged("ParentLocationId");
                OnParentLocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentLocationId;
        partial void OnParentLocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Locations_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_Locations_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_Locations_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_Locations_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_Locations_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Items_Locations", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("StageBitz.Data.FK_Items_Locations", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("StageBitz.Data.FK_Items_Locations", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ParentLocation_Locations", "Location1")]
        public EntityCollection<Location> Locations1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("StageBitz.Data.FK_ParentLocation_Locations", "Location1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("StageBitz.Data.FK_ParentLocation_Locations", "Location1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ParentLocation_Locations", "Location")]
        public Location Location1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_ParentLocation_Locations", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_ParentLocation_Locations", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> Location1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("StageBitz.Data.FK_ParentLocation_Locations", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("StageBitz.Data.FK_ParentLocation_Locations", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyUserRole_Locations", "CompanyUserRole")]
        public EntityCollection<CompanyUserRole> CompanyUserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyUserRole>("StageBitz.Data.FK_CompanyUserRole_Locations", "CompanyUserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyUserRole>("StageBitz.Data.FK_CompanyUserRole_Locations", "CompanyUserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InvitationUserRole_Locations", "InvitationUserRole")]
        public EntityCollection<InvitationUserRole> InvitationUserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvitationUserRole>("StageBitz.Data.FK_InvitationUserRole_Locations", "InvitationUserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvitationUserRole>("StageBitz.Data.FK_InvitationUserRole_Locations", "InvitationUserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="MasterChart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterChart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterChart object.
        /// </summary>
        /// <param name="masterChartID">Initial value of the MasterChartID property.</param>
        public static MasterChart CreateMasterChart(global::System.Int32 masterChartID)
        {
            MasterChart masterChart = new MasterChart();
            masterChart.MasterChartID = masterChartID;
            return masterChart;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterChartID
        {
            get
            {
                return _MasterChartID;
            }
            set
            {
                if (_MasterChartID != value)
                {
                    OnMasterChartIDChanging(value);
                    ReportPropertyChanging("MasterChartID");
                    _MasterChartID = StructuralObject.SetValidValue(value, "MasterChartID");
                    ReportPropertyChanged("MasterChartID");
                    OnMasterChartIDChanged();
                }
            }
        }
        private global::System.Int32 _MasterChartID;
        partial void OnMasterChartIDChanging(global::System.Int32 value);
        partial void OnMasterChartIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountCode
        {
            get
            {
                return _AccountCode;
            }
            set
            {
                OnAccountCodeChanging(value);
                ReportPropertyChanging("AccountCode");
                _AccountCode = StructuralObject.SetValidValue(value, true, "AccountCode");
                ReportPropertyChanged("AccountCode");
                OnAccountCodeChanged();
            }
        }
        private global::System.String _AccountCode;
        partial void OnAccountCodeChanging(global::System.String value);
        partial void OnAccountCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value, "ActiveFlag");
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _ActiveFlag;
        partial void OnActiveFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateDate;
        partial void OnLastUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_TransactionLines_MasterChart", "TransactionLine")]
        public EntityCollection<TransactionLine> TransactionLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionLine>("StageBitz.Data.FK_TransactionLines_MasterChart", "TransactionLine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionLine>("StageBitz.Data.FK_TransactionLines_MasterChart", "TransactionLine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="NonProjectBooking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NonProjectBooking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NonProjectBooking object.
        /// </summary>
        /// <param name="nonProjectBookingId">Initial value of the NonProjectBookingId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static NonProjectBooking CreateNonProjectBooking(global::System.Int32 nonProjectBookingId, global::System.String name, global::System.Int32 createdBy, global::System.Boolean isActive)
        {
            NonProjectBooking nonProjectBooking = new NonProjectBooking();
            nonProjectBooking.NonProjectBookingId = nonProjectBookingId;
            nonProjectBooking.Name = name;
            nonProjectBooking.CreatedBy = createdBy;
            nonProjectBooking.IsActive = isActive;
            return nonProjectBooking;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NonProjectBookingId
        {
            get
            {
                return _NonProjectBookingId;
            }
            set
            {
                if (_NonProjectBookingId != value)
                {
                    OnNonProjectBookingIdChanging(value);
                    ReportPropertyChanging("NonProjectBookingId");
                    _NonProjectBookingId = StructuralObject.SetValidValue(value, "NonProjectBookingId");
                    ReportPropertyChanged("NonProjectBookingId");
                    OnNonProjectBookingIdChanged();
                }
            }
        }
        private global::System.Int32 _NonProjectBookingId;
        partial void OnNonProjectBookingIdChanging(global::System.Int32 value);
        partial void OnNonProjectBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_NonProjectBookings_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_NonProjectBookings_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_NonProjectBookings_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_NonProjectBookings_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_NonProjectBookings_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Notification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Notification object.
        /// </summary>
        /// <param name="notificationId">Initial value of the NotificationId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static Notification CreateNotification(global::System.Int32 notificationId, global::System.String message)
        {
            Notification notification = new Notification();
            notification.NotificationId = notificationId;
            notification.Message = message;
            return notification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotificationId
        {
            get
            {
                return _NotificationId;
            }
            set
            {
                if (_NotificationId != value)
                {
                    OnNotificationIdChanging(value);
                    ReportPropertyChanging("NotificationId");
                    _NotificationId = StructuralObject.SetValidValue(value, "NotificationId");
                    ReportPropertyChanged("NotificationId");
                    OnNotificationIdChanged();
                }
            }
        }
        private global::System.Int32 _NotificationId;
        partial void OnNotificationIdChanging(global::System.Int32 value);
        partial void OnNotificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModuleTypeCodeId
        {
            get
            {
                return _ModuleTypeCodeId;
            }
            set
            {
                OnModuleTypeCodeIdChanging(value);
                ReportPropertyChanging("ModuleTypeCodeId");
                _ModuleTypeCodeId = StructuralObject.SetValidValue(value, "ModuleTypeCodeId");
                ReportPropertyChanged("ModuleTypeCodeId");
                OnModuleTypeCodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ModuleTypeCodeId;
        partial void OnModuleTypeCodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnModuleTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RelatedId;
        partial void OnRelatedIdChanging(Nullable<global::System.Int32> value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OperationTypeCodeId
        {
            get
            {
                return _OperationTypeCodeId;
            }
            set
            {
                OnOperationTypeCodeIdChanging(value);
                ReportPropertyChanging("OperationTypeCodeId");
                _OperationTypeCodeId = StructuralObject.SetValidValue(value, "OperationTypeCodeId");
                ReportPropertyChanged("OperationTypeCodeId");
                OnOperationTypeCodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OperationTypeCodeId;
        partial void OnOperationTypeCodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnOperationTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectId;
        partial void OnProjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Notifications_Notifications", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_Notifications_Notifications", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_Notifications_Notifications", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_Notifications_Notifications", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("StageBitz.Data.FK_Notifications_Notifications", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="PaymentLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentLog object.
        /// </summary>
        /// <param name="paymentLogId">Initial value of the PaymentLogId property.</param>
        /// <param name="relatedId">Initial value of the RelatedId property.</param>
        /// <param name="relatedTableName">Initial value of the RelatedTableName property.</param>
        /// <param name="isSentToPaymentGateway">Initial value of the IsSentToPaymentGateway property.</param>
        /// <param name="isPaymentSuccess">Initial value of the IsPaymentSuccess property.</param>
        public static PaymentLog CreatePaymentLog(global::System.Int32 paymentLogId, global::System.Int32 relatedId, global::System.String relatedTableName, global::System.Boolean isSentToPaymentGateway, global::System.Boolean isPaymentSuccess)
        {
            PaymentLog paymentLog = new PaymentLog();
            paymentLog.PaymentLogId = paymentLogId;
            paymentLog.RelatedId = relatedId;
            paymentLog.RelatedTableName = relatedTableName;
            paymentLog.IsSentToPaymentGateway = isSentToPaymentGateway;
            paymentLog.IsPaymentSuccess = isPaymentSuccess;
            return paymentLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentLogId
        {
            get
            {
                return _PaymentLogId;
            }
            set
            {
                if (_PaymentLogId != value)
                {
                    OnPaymentLogIdChanging(value);
                    ReportPropertyChanging("PaymentLogId");
                    _PaymentLogId = StructuralObject.SetValidValue(value, "PaymentLogId");
                    ReportPropertyChanged("PaymentLogId");
                    OnPaymentLogIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentLogId;
        partial void OnPaymentLogIdChanging(global::System.Int32 value);
        partial void OnPaymentLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private global::System.Int32 _RelatedId;
        partial void OnRelatedIdChanging(global::System.Int32 value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelatedTableName
        {
            get
            {
                return _RelatedTableName;
            }
            set
            {
                OnRelatedTableNameChanging(value);
                ReportPropertyChanging("RelatedTableName");
                _RelatedTableName = StructuralObject.SetValidValue(value, false, "RelatedTableName");
                ReportPropertyChanged("RelatedTableName");
                OnRelatedTableNameChanged();
            }
        }
        private global::System.String _RelatedTableName;
        partial void OnRelatedTableNameChanging(global::System.String value);
        partial void OnRelatedTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSentToPaymentGateway
        {
            get
            {
                return _IsSentToPaymentGateway;
            }
            set
            {
                OnIsSentToPaymentGatewayChanging(value);
                ReportPropertyChanging("IsSentToPaymentGateway");
                _IsSentToPaymentGateway = StructuralObject.SetValidValue(value, "IsSentToPaymentGateway");
                ReportPropertyChanged("IsSentToPaymentGateway");
                OnIsSentToPaymentGatewayChanged();
            }
        }
        private global::System.Boolean _IsSentToPaymentGateway;
        partial void OnIsSentToPaymentGatewayChanging(global::System.Boolean value);
        partial void OnIsSentToPaymentGatewayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPaymentSuccess
        {
            get
            {
                return _IsPaymentSuccess;
            }
            set
            {
                OnIsPaymentSuccessChanging(value);
                ReportPropertyChanging("IsPaymentSuccess");
                _IsPaymentSuccess = StructuralObject.SetValidValue(value, "IsPaymentSuccess");
                ReportPropertyChanged("IsPaymentSuccess");
                OnIsPaymentSuccessChanged();
            }
        }
        private global::System.Boolean _IsPaymentSuccess;
        partial void OnIsPaymentSuccessChanging(global::System.Boolean value);
        partial void OnIsPaymentSuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResponseId
        {
            get
            {
                return _ResponseId;
            }
            set
            {
                OnResponseIdChanging(value);
                ReportPropertyChanging("ResponseId");
                _ResponseId = StructuralObject.SetValidValue(value, true, "ResponseId");
                ReportPropertyChanged("ResponseId");
                OnResponseIdChanged();
            }
        }
        private global::System.String _ResponseId;
        partial void OnResponseIdChanging(global::System.String value);
        partial void OnResponseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreditCardTokenId
        {
            get
            {
                return _CreditCardTokenId;
            }
            set
            {
                OnCreditCardTokenIdChanging(value);
                ReportPropertyChanging("CreditCardTokenId");
                _CreditCardTokenId = StructuralObject.SetValidValue(value, "CreditCardTokenId");
                ReportPropertyChanged("CreditCardTokenId");
                OnCreditCardTokenIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreditCardTokenId;
        partial void OnCreditCardTokenIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreditCardTokenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferenceNumber
        {
            get
            {
                return _ReferenceNumber;
            }
            set
            {
                OnReferenceNumberChanging(value);
                ReportPropertyChanging("ReferenceNumber");
                _ReferenceNumber = StructuralObject.SetValidValue(value, true, "ReferenceNumber");
                ReportPropertyChanged("ReferenceNumber");
                OnReferenceNumberChanged();
            }
        }
        private global::System.String _ReferenceNumber;
        partial void OnReferenceNumberChanging(global::System.String value);
        partial void OnReferenceNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_PaymentLogs_CreditCardTokens", "CreditCardToken")]
        public CreditCardToken CreditCardToken
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditCardToken>("StageBitz.Data.FK_PaymentLogs_CreditCardTokens", "CreditCardToken").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditCardToken>("StageBitz.Data.FK_PaymentLogs_CreditCardTokens", "CreditCardToken").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CreditCardToken> CreditCardTokenReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditCardToken>("StageBitz.Data.FK_PaymentLogs_CreditCardTokens", "CreditCardToken");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CreditCardToken>("StageBitz.Data.FK_PaymentLogs_CreditCardTokens", "CreditCardToken", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="PaymentPackageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentPackageType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentPackageType object.
        /// </summary>
        /// <param name="paymentPackageTypeId">Initial value of the PaymentPackageTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="packageTypeCodeId">Initial value of the PackageTypeCodeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static PaymentPackageType CreatePaymentPackageType(global::System.Int32 paymentPackageTypeId, global::System.String name, global::System.Int32 packageTypeCodeId, global::System.Boolean isActive)
        {
            PaymentPackageType paymentPackageType = new PaymentPackageType();
            paymentPackageType.PaymentPackageTypeId = paymentPackageTypeId;
            paymentPackageType.Name = name;
            paymentPackageType.PackageTypeCodeId = packageTypeCodeId;
            paymentPackageType.IsActive = isActive;
            return paymentPackageType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentPackageTypeId
        {
            get
            {
                return _PaymentPackageTypeId;
            }
            set
            {
                if (_PaymentPackageTypeId != value)
                {
                    OnPaymentPackageTypeIdChanging(value);
                    ReportPropertyChanging("PaymentPackageTypeId");
                    _PaymentPackageTypeId = StructuralObject.SetValidValue(value, "PaymentPackageTypeId");
                    ReportPropertyChanged("PaymentPackageTypeId");
                    OnPaymentPackageTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentPackageTypeId;
        partial void OnPaymentPackageTypeIdChanging(global::System.Int32 value);
        partial void OnPaymentPackageTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PackageTitleDiscription
        {
            get
            {
                return _PackageTitleDiscription;
            }
            set
            {
                OnPackageTitleDiscriptionChanging(value);
                ReportPropertyChanging("PackageTitleDiscription");
                _PackageTitleDiscription = StructuralObject.SetValidValue(value, true, "PackageTitleDiscription");
                ReportPropertyChanged("PackageTitleDiscription");
                OnPackageTitleDiscriptionChanged();
            }
        }
        private global::System.String _PackageTitleDiscription;
        partial void OnPackageTitleDiscriptionChanging(global::System.String value);
        partial void OnPackageTitleDiscriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PackageDisplayName
        {
            get
            {
                return _PackageDisplayName;
            }
            set
            {
                OnPackageDisplayNameChanging(value);
                ReportPropertyChanging("PackageDisplayName");
                _PackageDisplayName = StructuralObject.SetValidValue(value, true, "PackageDisplayName");
                ReportPropertyChanged("PackageDisplayName");
                OnPackageDisplayNameChanged();
            }
        }
        private global::System.String _PackageDisplayName;
        partial void OnPackageDisplayNameChanging(global::System.String value);
        partial void OnPackageDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PackageTypeCodeId
        {
            get
            {
                return _PackageTypeCodeId;
            }
            set
            {
                OnPackageTypeCodeIdChanging(value);
                ReportPropertyChanging("PackageTypeCodeId");
                _PackageTypeCodeId = StructuralObject.SetValidValue(value, "PackageTypeCodeId");
                ReportPropertyChanged("PackageTypeCodeId");
                OnPackageTypeCodeIdChanged();
            }
        }
        private global::System.Int32 _PackageTypeCodeId;
        partial void OnPackageTypeCodeIdChanging(global::System.Int32 value);
        partial void OnPackageTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayText
        {
            get
            {
                return _DisplayText;
            }
            set
            {
                OnDisplayTextChanging(value);
                ReportPropertyChanging("DisplayText");
                _DisplayText = StructuralObject.SetValidValue(value, true, "DisplayText");
                ReportPropertyChanged("DisplayText");
                OnDisplayTextChanged();
            }
        }
        private global::System.String _DisplayText;
        partial void OnDisplayTextChanging(global::System.String value);
        partial void OnDisplayTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_PaymentPackageTypes_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_PaymentPackageTypes_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_PaymentPackageTypes_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_PaymentPackageTypes_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_PaymentPackageTypes_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_PaymentPackageTypes", "CompanyPaymentPackage")]
        public EntityCollection<CompanyPaymentPackage> CompanyPaymentPackages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes", "CompanyPaymentPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes", "CompanyPaymentPackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyPaymentPackages_PaymentPackageTypes1", "CompanyPaymentPackage")]
        public EntityCollection<CompanyPaymentPackage> CompanyPaymentPackages1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes1", "CompanyPaymentPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPaymentPackage>("StageBitz.Data.FK_CompanyPaymentPackages_PaymentPackageTypes1", "CompanyPaymentPackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InventoryPackageDetails_PaymentPackageTypes", "InventoryPaymentPackageDetail")]
        public EntityCollection<InventoryPaymentPackageDetail> InventoryPaymentPackageDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryPaymentPackageDetail>("StageBitz.Data.FK_InventoryPackageDetails_PaymentPackageTypes", "InventoryPaymentPackageDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryPaymentPackageDetail>("StageBitz.Data.FK_InventoryPackageDetails_PaymentPackageTypes", "InventoryPaymentPackageDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectPaymentPackageDetailIs_PaymentPackageTypes", "ProjectPaymentPackageDetail")]
        public EntityCollection<ProjectPaymentPackageDetail> ProjectPaymentPackageDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPaymentPackageDetail>("StageBitz.Data.FK_ProjectPaymentPackageDetailIs_PaymentPackageTypes", "ProjectPaymentPackageDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPaymentPackageDetail>("StageBitz.Data.FK_ProjectPaymentPackageDetailIs_PaymentPackageTypes", "ProjectPaymentPackageDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="projectStatusCodeId">Initial value of the ProjectStatusCodeId property.</param>
        public static Project CreateProject(global::System.Int32 projectId, global::System.Int32 companyId, global::System.String projectName, global::System.Boolean isActive, global::System.Int32 projectStatusCodeId)
        {
            Project project = new Project();
            project.ProjectId = projectId;
            project.CompanyId = companyId;
            project.ProjectName = projectName;
            project.IsActive = isActive;
            project.ProjectStatusCodeId = projectStatusCodeId;
            return project;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                if (_ProjectId != value)
                {
                    OnProjectIdChanging(value);
                    ReportPropertyChanging("ProjectId");
                    _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                    ReportPropertyChanged("ProjectId");
                    OnProjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = StructuralObject.SetValidValue(value, false, "ProjectName");
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectStatusCodeId
        {
            get
            {
                return _ProjectStatusCodeId;
            }
            set
            {
                OnProjectStatusCodeIdChanging(value);
                ReportPropertyChanging("ProjectStatusCodeId");
                _ProjectStatusCodeId = StructuralObject.SetValidValue(value, "ProjectStatusCodeId");
                ReportPropertyChanged("ProjectStatusCodeId");
                OnProjectStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _ProjectStatusCodeId;
        partial void OnProjectStatusCodeIdChanging(global::System.Int32 value);
        partial void OnProjectStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value, "ExpirationDate");
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectTypeCodeId
        {
            get
            {
                return _ProjectTypeCodeId;
            }
            set
            {
                OnProjectTypeCodeIdChanging(value);
                ReportPropertyChanging("ProjectTypeCodeId");
                _ProjectTypeCodeId = StructuralObject.SetValidValue(value, "ProjectTypeCodeId");
                ReportPropertyChanged("ProjectTypeCodeId");
                OnProjectTypeCodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectTypeCodeId;
        partial void OnProjectTypeCodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnProjectTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value, "CountryId");
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Projects_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_Projects_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_Projects_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_Projects_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_Projects_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Projects_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("StageBitz.Data.FK_Projects_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("StageBitz.Data.FK_Projects_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("StageBitz.Data.FK_Projects_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("StageBitz.Data.FK_Projects_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBriefs_Projects", "ItemBrief")]
        public EntityCollection<ItemBrief> ItemBriefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBrief>("StageBitz.Data.FK_ItemBriefs_Projects", "ItemBrief");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBrief>("StageBitz.Data.FK_ItemBriefs_Projects", "ItemBrief", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Notifications_Notifications", "Notification")]
        public EntityCollection<Notification> Notifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notification>("StageBitz.Data.FK_Notifications_Notifications", "Notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notification>("StageBitz.Data.FK_Notifications_Notifications", "Notification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectArchives_Projects", "ProjectArchive")]
        public EntityCollection<ProjectArchive> ProjectArchives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectArchive>("StageBitz.Data.FK_ProjectArchives_Projects", "ProjectArchive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectArchive>("StageBitz.Data.FK_ProjectArchives_Projects", "ProjectArchive", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectEvents_Projects", "ProjectEvent")]
        public EntityCollection<ProjectEvent> ProjectEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectEvent>("StageBitz.Data.FK_ProjectEvents_Projects", "ProjectEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectEvent>("StageBitz.Data.FK_ProjectEvents_Projects", "ProjectEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectItemTypes_Projects", "ProjectItemType")]
        public EntityCollection<ProjectItemType> ProjectItemTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectItemType>("StageBitz.Data.FK_ProjectItemTypes_Projects", "ProjectItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectItemType>("StageBitz.Data.FK_ProjectItemTypes_Projects", "ProjectItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectLocations_Projects", "ProjectLocation")]
        public EntityCollection<ProjectLocation> ProjectLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectLocation>("StageBitz.Data.FK_ProjectLocations_Projects", "ProjectLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectLocation>("StageBitz.Data.FK_ProjectLocations_Projects", "ProjectLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectStatusHistory_Projects", "ProjectStatusHistory")]
        public EntityCollection<ProjectStatusHistory> ProjectStatusHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectStatusHistory>("StageBitz.Data.FK_ProjectStatusHistory_Projects", "ProjectStatusHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectStatusHistory>("StageBitz.Data.FK_ProjectStatusHistory_Projects", "ProjectStatusHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectUsers_Projects", "ProjectUser")]
        public EntityCollection<ProjectUser> ProjectUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUser>("StageBitz.Data.FK_ProjectUsers_Projects", "ProjectUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUser>("StageBitz.Data.FK_ProjectUsers_Projects", "ProjectUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_TaskLists_Projects", "TaskList")]
        public EntityCollection<TaskList> TaskLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskList>("StageBitz.Data.FK_TaskLists_Projects", "TaskList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskList>("StageBitz.Data.FK_TaskLists_Projects", "TaskList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_UserLastVisitedtItemTypes_Projects", "UserLastVisitedtItemType")]
        public EntityCollection<UserLastVisitedtItemType> UserLastVisitedtItemTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserLastVisitedtItemType>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Projects", "UserLastVisitedtItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserLastVisitedtItemType>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Projects", "UserLastVisitedtItemType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ProjectArchive")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectArchive : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectArchive object.
        /// </summary>
        /// <param name="projectArchiveId">Initial value of the ProjectArchiveId property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="projectClosedDate">Initial value of the ProjectClosedDate property.</param>
        /// <param name="projectClosedBy">Initial value of the ProjectClosedBy property.</param>
        public static ProjectArchive CreateProjectArchive(global::System.Int32 projectArchiveId, global::System.Int32 projectId, global::System.DateTime projectClosedDate, global::System.Int32 projectClosedBy)
        {
            ProjectArchive projectArchive = new ProjectArchive();
            projectArchive.ProjectArchiveId = projectArchiveId;
            projectArchive.ProjectId = projectId;
            projectArchive.ProjectClosedDate = projectClosedDate;
            projectArchive.ProjectClosedBy = projectClosedBy;
            return projectArchive;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectArchiveId
        {
            get
            {
                return _ProjectArchiveId;
            }
            set
            {
                if (_ProjectArchiveId != value)
                {
                    OnProjectArchiveIdChanging(value);
                    ReportPropertyChanging("ProjectArchiveId");
                    _ProjectArchiveId = StructuralObject.SetValidValue(value, "ProjectArchiveId");
                    ReportPropertyChanged("ProjectArchiveId");
                    OnProjectArchiveIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectArchiveId;
        partial void OnProjectArchiveIdChanging(global::System.Int32 value);
        partial void OnProjectArchiveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                if (_ProjectId != value)
                {
                    OnProjectIdChanging(value);
                    ReportPropertyChanging("ProjectId");
                    _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                    ReportPropertyChanged("ProjectId");
                    OnProjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ProjectClosedDate
        {
            get
            {
                return _ProjectClosedDate;
            }
            set
            {
                if (_ProjectClosedDate != value)
                {
                    OnProjectClosedDateChanging(value);
                    ReportPropertyChanging("ProjectClosedDate");
                    _ProjectClosedDate = StructuralObject.SetValidValue(value, "ProjectClosedDate");
                    ReportPropertyChanged("ProjectClosedDate");
                    OnProjectClosedDateChanged();
                }
            }
        }
        private global::System.DateTime _ProjectClosedDate;
        partial void OnProjectClosedDateChanging(global::System.DateTime value);
        partial void OnProjectClosedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectClosedBy
        {
            get
            {
                return _ProjectClosedBy;
            }
            set
            {
                if (_ProjectClosedBy != value)
                {
                    OnProjectClosedByChanging(value);
                    ReportPropertyChanging("ProjectClosedBy");
                    _ProjectClosedBy = StructuralObject.SetValidValue(value, "ProjectClosedBy");
                    ReportPropertyChanged("ProjectClosedBy");
                    OnProjectClosedByChanged();
                }
            }
        }
        private global::System.Int32 _ProjectClosedBy;
        partial void OnProjectClosedByChanging(global::System.Int32 value);
        partial void OnProjectClosedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectArchives_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectArchives_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectArchives_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectArchives_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("StageBitz.Data.FK_ProjectArchives_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectArchives_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ProjectArchives_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ProjectArchives_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ProjectArchives_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_ProjectArchives_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ProjectEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectEvent object.
        /// </summary>
        /// <param name="projectEventId">Initial value of the ProjectEventId property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        public static ProjectEvent CreateProjectEvent(global::System.Int32 projectEventId, global::System.Int32 projectId)
        {
            ProjectEvent projectEvent = new ProjectEvent();
            projectEvent.ProjectEventId = projectEventId;
            projectEvent.ProjectId = projectId;
            return projectEvent;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectEventId
        {
            get
            {
                return _ProjectEventId;
            }
            set
            {
                if (_ProjectEventId != value)
                {
                    OnProjectEventIdChanging(value);
                    ReportPropertyChanging("ProjectEventId");
                    _ProjectEventId = StructuralObject.SetValidValue(value, "ProjectEventId");
                    ReportPropertyChanged("ProjectEventId");
                    OnProjectEventIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectEventId;
        partial void OnProjectEventIdChanging(global::System.Int32 value);
        partial void OnProjectEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventName
        {
            get
            {
                return _EventName;
            }
            set
            {
                OnEventNameChanging(value);
                ReportPropertyChanging("EventName");
                _EventName = StructuralObject.SetValidValue(value, true, "EventName");
                ReportPropertyChanged("EventName");
                OnEventNameChanged();
            }
        }
        private global::System.String _EventName;
        partial void OnEventNameChanging(global::System.String value);
        partial void OnEventNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EventDate
        {
            get
            {
                return _EventDate;
            }
            set
            {
                OnEventDateChanging(value);
                ReportPropertyChanging("EventDate");
                _EventDate = StructuralObject.SetValidValue(value, "EventDate");
                ReportPropertyChanged("EventDate");
                OnEventDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EventDate;
        partial void OnEventDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEventDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectEvents_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectEvents_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectEvents_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectEvents_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("StageBitz.Data.FK_ProjectEvents_Projects", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ProjectItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectItemType object.
        /// </summary>
        /// <param name="projectItemTypeId">Initial value of the ProjectItemTypeId property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="itemTypeId">Initial value of the ItemTypeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ProjectItemType CreateProjectItemType(global::System.Int32 projectItemTypeId, global::System.Int32 projectId, global::System.Int32 itemTypeId, global::System.Boolean isActive)
        {
            ProjectItemType projectItemType = new ProjectItemType();
            projectItemType.ProjectItemTypeId = projectItemTypeId;
            projectItemType.ProjectId = projectId;
            projectItemType.ItemTypeId = itemTypeId;
            projectItemType.IsActive = isActive;
            return projectItemType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectItemTypeId
        {
            get
            {
                return _ProjectItemTypeId;
            }
            set
            {
                if (_ProjectItemTypeId != value)
                {
                    OnProjectItemTypeIdChanging(value);
                    ReportPropertyChanging("ProjectItemTypeId");
                    _ProjectItemTypeId = StructuralObject.SetValidValue(value, "ProjectItemTypeId");
                    ReportPropertyChanged("ProjectItemTypeId");
                    OnProjectItemTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectItemTypeId;
        partial void OnProjectItemTypeIdChanging(global::System.Int32 value);
        partial void OnProjectItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value, "ItemTypeId");
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private global::System.Int32 _ItemTypeId;
        partial void OnItemTypeIdChanging(global::System.Int32 value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectItemTypes_ItemTypes", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ProjectItemTypes_ItemTypes", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ProjectItemTypes_ItemTypes", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_ProjectItemTypes_ItemTypes", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("StageBitz.Data.FK_ProjectItemTypes_ItemTypes", "ItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectItemTypes_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectItemTypes_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectItemTypes_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectItemTypes_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("StageBitz.Data.FK_ProjectItemTypes_Projects", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ProjectLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectLocation object.
        /// </summary>
        /// <param name="projectLocationId">Initial value of the ProjectLocationId property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        public static ProjectLocation CreateProjectLocation(global::System.Int32 projectLocationId, global::System.Int32 projectId, global::System.String location)
        {
            ProjectLocation projectLocation = new ProjectLocation();
            projectLocation.ProjectLocationId = projectLocationId;
            projectLocation.ProjectId = projectId;
            projectLocation.Location = location;
            return projectLocation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectLocationId
        {
            get
            {
                return _ProjectLocationId;
            }
            set
            {
                if (_ProjectLocationId != value)
                {
                    OnProjectLocationIdChanging(value);
                    ReportPropertyChanging("ProjectLocationId");
                    _ProjectLocationId = StructuralObject.SetValidValue(value, "ProjectLocationId");
                    ReportPropertyChanged("ProjectLocationId");
                    OnProjectLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectLocationId;
        partial void OnProjectLocationIdChanging(global::System.Int32 value);
        partial void OnProjectLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectLocations_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectLocations_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectLocations_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectLocations_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("StageBitz.Data.FK_ProjectLocations_Projects", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ProjectPaymentPackageDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectPaymentPackageDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectPaymentPackageDetail object.
        /// </summary>
        /// <param name="projectPaymentPackageDetailId">Initial value of the ProjectPaymentPackageDetailId property.</param>
        /// <param name="paymentPackageTypeId">Initial value of the PaymentPackageTypeId property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="anualAmount">Initial value of the AnualAmount property.</param>
        /// <param name="projectCount">Initial value of the ProjectCount property.</param>
        /// <param name="headCount">Initial value of the HeadCount property.</param>
        public static ProjectPaymentPackageDetail CreateProjectPaymentPackageDetail(global::System.Int32 projectPaymentPackageDetailId, global::System.Int32 paymentPackageTypeId, global::System.DateTime startDate, global::System.Decimal amount, global::System.Decimal anualAmount, global::System.Int32 projectCount, global::System.Int32 headCount)
        {
            ProjectPaymentPackageDetail projectPaymentPackageDetail = new ProjectPaymentPackageDetail();
            projectPaymentPackageDetail.ProjectPaymentPackageDetailId = projectPaymentPackageDetailId;
            projectPaymentPackageDetail.PaymentPackageTypeId = paymentPackageTypeId;
            projectPaymentPackageDetail.StartDate = startDate;
            projectPaymentPackageDetail.Amount = amount;
            projectPaymentPackageDetail.AnualAmount = anualAmount;
            projectPaymentPackageDetail.ProjectCount = projectCount;
            projectPaymentPackageDetail.HeadCount = headCount;
            return projectPaymentPackageDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectPaymentPackageDetailId
        {
            get
            {
                return _ProjectPaymentPackageDetailId;
            }
            set
            {
                if (_ProjectPaymentPackageDetailId != value)
                {
                    OnProjectPaymentPackageDetailIdChanging(value);
                    ReportPropertyChanging("ProjectPaymentPackageDetailId");
                    _ProjectPaymentPackageDetailId = StructuralObject.SetValidValue(value, "ProjectPaymentPackageDetailId");
                    ReportPropertyChanged("ProjectPaymentPackageDetailId");
                    OnProjectPaymentPackageDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectPaymentPackageDetailId;
        partial void OnProjectPaymentPackageDetailIdChanging(global::System.Int32 value);
        partial void OnProjectPaymentPackageDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentPackageTypeId
        {
            get
            {
                return _PaymentPackageTypeId;
            }
            set
            {
                OnPaymentPackageTypeIdChanging(value);
                ReportPropertyChanging("PaymentPackageTypeId");
                _PaymentPackageTypeId = StructuralObject.SetValidValue(value, "PaymentPackageTypeId");
                ReportPropertyChanged("PaymentPackageTypeId");
                OnPaymentPackageTypeIdChanged();
            }
        }
        private global::System.Int32 _PaymentPackageTypeId;
        partial void OnPaymentPackageTypeIdChanging(global::System.Int32 value);
        partial void OnPaymentPackageTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AnualAmount
        {
            get
            {
                return _AnualAmount;
            }
            set
            {
                OnAnualAmountChanging(value);
                ReportPropertyChanging("AnualAmount");
                _AnualAmount = StructuralObject.SetValidValue(value, "AnualAmount");
                ReportPropertyChanged("AnualAmount");
                OnAnualAmountChanged();
            }
        }
        private global::System.Decimal _AnualAmount;
        partial void OnAnualAmountChanging(global::System.Decimal value);
        partial void OnAnualAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCount
        {
            get
            {
                return _ProjectCount;
            }
            set
            {
                OnProjectCountChanging(value);
                ReportPropertyChanging("ProjectCount");
                _ProjectCount = StructuralObject.SetValidValue(value, "ProjectCount");
                ReportPropertyChanged("ProjectCount");
                OnProjectCountChanged();
            }
        }
        private global::System.Int32 _ProjectCount;
        partial void OnProjectCountChanging(global::System.Int32 value);
        partial void OnProjectCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HeadCount
        {
            get
            {
                return _HeadCount;
            }
            set
            {
                OnHeadCountChanging(value);
                ReportPropertyChanging("HeadCount");
                _HeadCount = StructuralObject.SetValidValue(value, "HeadCount");
                ReportPropertyChanged("HeadCount");
                OnHeadCountChanged();
            }
        }
        private global::System.Int32 _HeadCount;
        partial void OnHeadCountChanging(global::System.Int32 value);
        partial void OnHeadCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectPaymentPackageDetailIs_PaymentPackageTypes", "PaymentPackageType")]
        public PaymentPackageType PaymentPackageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_ProjectPaymentPackageDetailIs_PaymentPackageTypes", "PaymentPackageType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_ProjectPaymentPackageDetailIs_PaymentPackageTypes", "PaymentPackageType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentPackageType> PaymentPackageTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentPackageType>("StageBitz.Data.FK_ProjectPaymentPackageDetailIs_PaymentPackageTypes", "PaymentPackageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentPackageType>("StageBitz.Data.FK_ProjectPaymentPackageDetailIs_PaymentPackageTypes", "PaymentPackageType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ProjectStatusHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectStatusHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectStatusHistory object.
        /// </summary>
        /// <param name="projectStatusHistoryId">Initial value of the ProjectStatusHistoryId property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="projectStatusCodeId">Initial value of the ProjectStatusCodeId property.</param>
        public static ProjectStatusHistory CreateProjectStatusHistory(global::System.Int32 projectStatusHistoryId, global::System.Int32 projectId, global::System.Int32 projectStatusCodeId)
        {
            ProjectStatusHistory projectStatusHistory = new ProjectStatusHistory();
            projectStatusHistory.ProjectStatusHistoryId = projectStatusHistoryId;
            projectStatusHistory.ProjectId = projectId;
            projectStatusHistory.ProjectStatusCodeId = projectStatusCodeId;
            return projectStatusHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectStatusHistoryId
        {
            get
            {
                return _ProjectStatusHistoryId;
            }
            set
            {
                if (_ProjectStatusHistoryId != value)
                {
                    OnProjectStatusHistoryIdChanging(value);
                    ReportPropertyChanging("ProjectStatusHistoryId");
                    _ProjectStatusHistoryId = StructuralObject.SetValidValue(value, "ProjectStatusHistoryId");
                    ReportPropertyChanged("ProjectStatusHistoryId");
                    OnProjectStatusHistoryIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectStatusHistoryId;
        partial void OnProjectStatusHistoryIdChanging(global::System.Int32 value);
        partial void OnProjectStatusHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectStatusCodeId
        {
            get
            {
                return _ProjectStatusCodeId;
            }
            set
            {
                OnProjectStatusCodeIdChanging(value);
                ReportPropertyChanging("ProjectStatusCodeId");
                _ProjectStatusCodeId = StructuralObject.SetValidValue(value, "ProjectStatusCodeId");
                ReportPropertyChanged("ProjectStatusCodeId");
                OnProjectStatusCodeIdChanged();
            }
        }
        private global::System.Int32 _ProjectStatusCodeId;
        partial void OnProjectStatusCodeIdChanging(global::System.Int32 value);
        partial void OnProjectStatusCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectStatusHistory_Codes_Current", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ProjectStatusHistory_Codes_Current", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ProjectStatusHistory_Codes_Current", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ProjectStatusHistory_Codes_Current", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_ProjectStatusHistory_Codes_Current", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectStatusHistory_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectStatusHistory_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectStatusHistory_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectStatusHistory_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("StageBitz.Data.FK_ProjectStatusHistory_Projects", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ProjectUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectUser object.
        /// </summary>
        /// <param name="projectUserId">Initial value of the ProjectUserId property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="projectUserTypeCodeId">Initial value of the ProjectUserTypeCodeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="canSeeBudgetSummary">Initial value of the CanSeeBudgetSummary property.</param>
        public static ProjectUser CreateProjectUser(global::System.Int32 projectUserId, global::System.Int32 projectId, global::System.Int32 userId, global::System.Int32 projectUserTypeCodeId, global::System.Boolean isActive, global::System.Boolean canSeeBudgetSummary)
        {
            ProjectUser projectUser = new ProjectUser();
            projectUser.ProjectUserId = projectUserId;
            projectUser.ProjectId = projectId;
            projectUser.UserId = userId;
            projectUser.ProjectUserTypeCodeId = projectUserTypeCodeId;
            projectUser.IsActive = isActive;
            projectUser.CanSeeBudgetSummary = canSeeBudgetSummary;
            return projectUser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUserId
        {
            get
            {
                return _ProjectUserId;
            }
            set
            {
                if (_ProjectUserId != value)
                {
                    OnProjectUserIdChanging(value);
                    ReportPropertyChanging("ProjectUserId");
                    _ProjectUserId = StructuralObject.SetValidValue(value, "ProjectUserId");
                    ReportPropertyChanged("ProjectUserId");
                    OnProjectUserIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectUserId;
        partial void OnProjectUserIdChanging(global::System.Int32 value);
        partial void OnProjectUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUserTypeCodeId
        {
            get
            {
                return _ProjectUserTypeCodeId;
            }
            set
            {
                OnProjectUserTypeCodeIdChanging(value);
                ReportPropertyChanging("ProjectUserTypeCodeId");
                _ProjectUserTypeCodeId = StructuralObject.SetValidValue(value, "ProjectUserTypeCodeId");
                ReportPropertyChanged("ProjectUserTypeCodeId");
                OnProjectUserTypeCodeIdChanged();
            }
        }
        private global::System.Int32 _ProjectUserTypeCodeId;
        partial void OnProjectUserTypeCodeIdChanging(global::System.Int32 value);
        partial void OnProjectUserTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, true, "Role");
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeBudgetSummary
        {
            get
            {
                return _CanSeeBudgetSummary;
            }
            set
            {
                OnCanSeeBudgetSummaryChanging(value);
                ReportPropertyChanging("CanSeeBudgetSummary");
                _CanSeeBudgetSummary = StructuralObject.SetValidValue(value, "CanSeeBudgetSummary");
                ReportPropertyChanged("CanSeeBudgetSummary");
                OnCanSeeBudgetSummaryChanged();
            }
        }
        private global::System.Boolean _CanSeeBudgetSummary;
        partial void OnCanSeeBudgetSummaryChanging(global::System.Boolean value);
        partial void OnCanSeeBudgetSummaryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectUsers_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ProjectUsers_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ProjectUsers_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ProjectUsers_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_ProjectUsers_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectUsers_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectUsers_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectUsers_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_ProjectUsers_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("StageBitz.Data.FK_ProjectUsers_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectUsers_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ProjectUsers_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ProjectUsers_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ProjectUsers_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_ProjectUsers_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Receipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Receipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Receipt object.
        /// </summary>
        /// <param name="receiptID">Initial value of the ReceiptID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="receiptDate">Initial value of the ReceiptDate property.</param>
        /// <param name="isVoid">Initial value of the IsVoid property.</param>
        public static Receipt CreateReceipt(global::System.Int32 receiptID, global::System.Int32 transactionID, global::System.DateTime receiptDate, global::System.Boolean isVoid)
        {
            Receipt receipt = new Receipt();
            receipt.ReceiptID = receiptID;
            receipt.TransactionID = transactionID;
            receipt.ReceiptDate = receiptDate;
            receipt.IsVoid = isVoid;
            return receipt;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceiptID
        {
            get
            {
                return _ReceiptID;
            }
            set
            {
                if (_ReceiptID != value)
                {
                    OnReceiptIDChanging(value);
                    ReportPropertyChanging("ReceiptID");
                    _ReceiptID = StructuralObject.SetValidValue(value, "ReceiptID");
                    ReportPropertyChanged("ReceiptID");
                    OnReceiptIDChanged();
                }
            }
        }
        private global::System.Int32 _ReceiptID;
        partial void OnReceiptIDChanging(global::System.Int32 value);
        partial void OnReceiptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value, "TransactionID");
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Int32 _TransactionID;
        partial void OnTransactionIDChanging(global::System.Int32 value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReceiptDate
        {
            get
            {
                return _ReceiptDate;
            }
            set
            {
                OnReceiptDateChanging(value);
                ReportPropertyChanging("ReceiptDate");
                _ReceiptDate = StructuralObject.SetValidValue(value, "ReceiptDate");
                ReportPropertyChanged("ReceiptDate");
                OnReceiptDateChanged();
            }
        }
        private global::System.DateTime _ReceiptDate;
        partial void OnReceiptDateChanging(global::System.DateTime value);
        partial void OnReceiptDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVoid
        {
            get
            {
                return _IsVoid;
            }
            set
            {
                OnIsVoidChanging(value);
                ReportPropertyChanging("IsVoid");
                _IsVoid = StructuralObject.SetValidValue(value, "IsVoid");
                ReportPropertyChanged("IsVoid");
                OnIsVoidChanged();
            }
        }
        private global::System.Boolean _IsVoid;
        partial void OnIsVoidChanging(global::System.Boolean value);
        partial void OnIsVoidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReversalTransactionID
        {
            get
            {
                return _ReversalTransactionID;
            }
            set
            {
                OnReversalTransactionIDChanging(value);
                ReportPropertyChanging("ReversalTransactionID");
                _ReversalTransactionID = StructuralObject.SetValidValue(value, "ReversalTransactionID");
                ReportPropertyChanged("ReversalTransactionID");
                OnReversalTransactionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReversalTransactionID;
        partial void OnReversalTransactionIDChanging(Nullable<global::System.Int32> value);
        partial void OnReversalTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReceiptForTransactionID
        {
            get
            {
                return _ReceiptForTransactionID;
            }
            set
            {
                OnReceiptForTransactionIDChanging(value);
                ReportPropertyChanging("ReceiptForTransactionID");
                _ReceiptForTransactionID = StructuralObject.SetValidValue(value, "ReceiptForTransactionID");
                ReportPropertyChanged("ReceiptForTransactionID");
                OnReceiptForTransactionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReceiptForTransactionID;
        partial void OnReceiptForTransactionIDChanging(Nullable<global::System.Int32> value);
        partial void OnReceiptForTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateDate;
        partial void OnLastUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Receipts_Transactions", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Receipts_Transactions1", "Transaction")]
        public Transaction Transaction1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions1", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions1", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> Transaction1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions1", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions1", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Receipts_Transactions2", "Transaction")]
        public Transaction Transaction2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions2", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions2", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> Transaction2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions2", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("StageBitz.Data.FK_Receipts_Transactions2", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="RemovedWatchListItemsNotification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RemovedWatchListItemsNotification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RemovedWatchListItemsNotification object.
        /// </summary>
        /// <param name="removedWatchListItemNotificationId">Initial value of the RemovedWatchListItemNotificationId property.</param>
        /// <param name="companyToNotify">Initial value of the CompanyToNotify property.</param>
        /// <param name="userToNotify">Initial value of the UserToNotify property.</param>
        /// <param name="removedCompany">Initial value of the RemovedCompany property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static RemovedWatchListItemsNotification CreateRemovedWatchListItemsNotification(global::System.Int32 removedWatchListItemNotificationId, global::System.Int32 companyToNotify, global::System.Int32 userToNotify, global::System.Int32 removedCompany, global::System.Boolean isActive)
        {
            RemovedWatchListItemsNotification removedWatchListItemsNotification = new RemovedWatchListItemsNotification();
            removedWatchListItemsNotification.RemovedWatchListItemNotificationId = removedWatchListItemNotificationId;
            removedWatchListItemsNotification.CompanyToNotify = companyToNotify;
            removedWatchListItemsNotification.UserToNotify = userToNotify;
            removedWatchListItemsNotification.RemovedCompany = removedCompany;
            removedWatchListItemsNotification.IsActive = isActive;
            return removedWatchListItemsNotification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RemovedWatchListItemNotificationId
        {
            get
            {
                return _RemovedWatchListItemNotificationId;
            }
            set
            {
                if (_RemovedWatchListItemNotificationId != value)
                {
                    OnRemovedWatchListItemNotificationIdChanging(value);
                    ReportPropertyChanging("RemovedWatchListItemNotificationId");
                    _RemovedWatchListItemNotificationId = StructuralObject.SetValidValue(value, "RemovedWatchListItemNotificationId");
                    ReportPropertyChanged("RemovedWatchListItemNotificationId");
                    OnRemovedWatchListItemNotificationIdChanged();
                }
            }
        }
        private global::System.Int32 _RemovedWatchListItemNotificationId;
        partial void OnRemovedWatchListItemNotificationIdChanging(global::System.Int32 value);
        partial void OnRemovedWatchListItemNotificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyToNotify
        {
            get
            {
                return _CompanyToNotify;
            }
            set
            {
                OnCompanyToNotifyChanging(value);
                ReportPropertyChanging("CompanyToNotify");
                _CompanyToNotify = StructuralObject.SetValidValue(value, "CompanyToNotify");
                ReportPropertyChanged("CompanyToNotify");
                OnCompanyToNotifyChanged();
            }
        }
        private global::System.Int32 _CompanyToNotify;
        partial void OnCompanyToNotifyChanging(global::System.Int32 value);
        partial void OnCompanyToNotifyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserToNotify
        {
            get
            {
                return _UserToNotify;
            }
            set
            {
                OnUserToNotifyChanging(value);
                ReportPropertyChanging("UserToNotify");
                _UserToNotify = StructuralObject.SetValidValue(value, "UserToNotify");
                ReportPropertyChanged("UserToNotify");
                OnUserToNotifyChanged();
            }
        }
        private global::System.Int32 _UserToNotify;
        partial void OnUserToNotifyChanging(global::System.Int32 value);
        partial void OnUserToNotifyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RemovedCompany
        {
            get
            {
                return _RemovedCompany;
            }
            set
            {
                OnRemovedCompanyChanging(value);
                ReportPropertyChanging("RemovedCompany");
                _RemovedCompany = StructuralObject.SetValidValue(value, "RemovedCompany");
                ReportPropertyChanged("RemovedCompany");
                OnRemovedCompanyChanged();
            }
        }
        private global::System.Int32 _RemovedCompany;
        partial void OnRemovedCompanyChanging(global::System.Int32 value);
        partial void OnRemovedCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_RemovedWatchListItemsNotifications_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_RemovedWatchListItemsNotifications_Companies1", "Company")]
        public Company Company1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies1", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies1", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> Company1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies1", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Companies1", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_RemovedWatchListItemsNotifications_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Skill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Skill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Skill object.
        /// </summary>
        /// <param name="skillId">Initial value of the SkillId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Skill CreateSkill(global::System.Int32 skillId, global::System.String name)
        {
            Skill skill = new Skill();
            skill.SkillId = skillId;
            skill.Name = name;
            return skill;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                if (_SkillId != value)
                {
                    OnSkillIdChanging(value);
                    ReportPropertyChanging("SkillId");
                    _SkillId = StructuralObject.SetValidValue(value, "SkillId");
                    ReportPropertyChanged("SkillId");
                    OnSkillIdChanged();
                }
            }
        }
        private global::System.Int32 _SkillId;
        partial void OnSkillIdChanging(global::System.Int32 value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_UserSkills_Skills", "UserSkill")]
        public EntityCollection<UserSkill> UserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSkill>("StageBitz.Data.FK_UserSkills_Skills", "UserSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSkill>("StageBitz.Data.FK_UserSkills_Skills", "UserSkill", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="SystemTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemTask object.
        /// </summary>
        /// <param name="systemTaskId">Initial value of the SystemTaskId property.</param>
        /// <param name="taskTypeCodeId">Initial value of the TaskTypeCodeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static SystemTask CreateSystemTask(global::System.Int32 systemTaskId, global::System.Int32 taskTypeCodeId, global::System.Boolean isActive)
        {
            SystemTask systemTask = new SystemTask();
            systemTask.SystemTaskId = systemTaskId;
            systemTask.TaskTypeCodeId = taskTypeCodeId;
            systemTask.IsActive = isActive;
            return systemTask;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemTaskId
        {
            get
            {
                return _SystemTaskId;
            }
            set
            {
                if (_SystemTaskId != value)
                {
                    OnSystemTaskIdChanging(value);
                    ReportPropertyChanging("SystemTaskId");
                    _SystemTaskId = StructuralObject.SetValidValue(value, "SystemTaskId");
                    ReportPropertyChanged("SystemTaskId");
                    OnSystemTaskIdChanged();
                }
            }
        }
        private global::System.Int32 _SystemTaskId;
        partial void OnSystemTaskIdChanging(global::System.Int32 value);
        partial void OnSystemTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskTypeCodeId
        {
            get
            {
                return _TaskTypeCodeId;
            }
            set
            {
                OnTaskTypeCodeIdChanging(value);
                ReportPropertyChanging("TaskTypeCodeId");
                _TaskTypeCodeId = StructuralObject.SetValidValue(value, "TaskTypeCodeId");
                ReportPropertyChanged("TaskTypeCodeId");
                OnTaskTypeCodeIdChanged();
            }
        }
        private global::System.Int32 _TaskTypeCodeId;
        partial void OnTaskTypeCodeIdChanging(global::System.Int32 value);
        partial void OnTaskTypeCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastRunDate
        {
            get
            {
                return _LastRunDate;
            }
            set
            {
                OnLastRunDateChanging(value);
                ReportPropertyChanging("LastRunDate");
                _LastRunDate = StructuralObject.SetValidValue(value, "LastRunDate");
                ReportPropertyChanged("LastRunDate");
                OnLastRunDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastRunDate;
        partial void OnLastRunDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastRunDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_SystemTasks_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_SystemTasks_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_SystemTasks_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_SystemTasks_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_SystemTasks_Codes", "Code", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="SystemValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemValue object.
        /// </summary>
        /// <param name="systemValueId">Initial value of the SystemValueId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static SystemValue CreateSystemValue(global::System.Int32 systemValueId, global::System.String name, global::System.String value)
        {
            SystemValue systemValue = new SystemValue();
            systemValue.SystemValueId = systemValueId;
            systemValue.Name = name;
            systemValue.Value = value;
            return systemValue;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemValueId
        {
            get
            {
                return _SystemValueId;
            }
            set
            {
                if (_SystemValueId != value)
                {
                    OnSystemValueIdChanging(value);
                    ReportPropertyChanging("SystemValueId");
                    _SystemValueId = StructuralObject.SetValidValue(value, "SystemValueId");
                    ReportPropertyChanged("SystemValueId");
                    OnSystemValueIdChanged();
                }
            }
        }
        private global::System.Int32 _SystemValueId;
        partial void OnSystemValueIdChanging(global::System.Int32 value);
        partial void OnSystemValueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="TaskList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskList object.
        /// </summary>
        /// <param name="taskListId">Initial value of the TaskListId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TaskList CreateTaskList(global::System.Int32 taskListId, global::System.String name)
        {
            TaskList taskList = new TaskList();
            taskList.TaskListId = taskListId;
            taskList.Name = name;
            return taskList;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskListId
        {
            get
            {
                return _TaskListId;
            }
            set
            {
                if (_TaskListId != value)
                {
                    OnTaskListIdChanging(value);
                    ReportPropertyChanging("TaskListId");
                    _TaskListId = StructuralObject.SetValidValue(value, "TaskListId");
                    ReportPropertyChanged("TaskListId");
                    OnTaskListIdChanged();
                }
            }
        }
        private global::System.Int32 _TaskListId;
        partial void OnTaskListIdChanging(global::System.Int32 value);
        partial void OnTaskListIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectId;
        partial void OnProjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value, "ItemTypeId");
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemTypeId;
        partial void OnItemTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemTypeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_TaskLists_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_TaskLists_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_TaskLists_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_TaskLists_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("StageBitz.Data.FK_TaskLists_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_TaskListsItemBriefTasks_TaskLists", "TaskListsItemBriefTask")]
        public EntityCollection<TaskListsItemBriefTask> TaskListsItemBriefTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskListsItemBriefTask>("StageBitz.Data.FK_TaskListsItemBriefTasks_TaskLists", "TaskListsItemBriefTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskListsItemBriefTask>("StageBitz.Data.FK_TaskListsItemBriefTasks_TaskLists", "TaskListsItemBriefTask", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="TaskListsItemBriefTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskListsItemBriefTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskListsItemBriefTask object.
        /// </summary>
        /// <param name="taskListItemBriefTaskId">Initial value of the TaskListItemBriefTaskId property.</param>
        /// <param name="taskListId">Initial value of the TaskListId property.</param>
        /// <param name="itemBriefTaskId">Initial value of the ItemBriefTaskId property.</param>
        public static TaskListsItemBriefTask CreateTaskListsItemBriefTask(global::System.Int32 taskListItemBriefTaskId, global::System.Int32 taskListId, global::System.Int32 itemBriefTaskId)
        {
            TaskListsItemBriefTask taskListsItemBriefTask = new TaskListsItemBriefTask();
            taskListsItemBriefTask.TaskListItemBriefTaskId = taskListItemBriefTaskId;
            taskListsItemBriefTask.TaskListId = taskListId;
            taskListsItemBriefTask.ItemBriefTaskId = itemBriefTaskId;
            return taskListsItemBriefTask;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskListItemBriefTaskId
        {
            get
            {
                return _TaskListItemBriefTaskId;
            }
            set
            {
                if (_TaskListItemBriefTaskId != value)
                {
                    OnTaskListItemBriefTaskIdChanging(value);
                    ReportPropertyChanging("TaskListItemBriefTaskId");
                    _TaskListItemBriefTaskId = StructuralObject.SetValidValue(value, "TaskListItemBriefTaskId");
                    ReportPropertyChanged("TaskListItemBriefTaskId");
                    OnTaskListItemBriefTaskIdChanged();
                }
            }
        }
        private global::System.Int32 _TaskListItemBriefTaskId;
        partial void OnTaskListItemBriefTaskIdChanging(global::System.Int32 value);
        partial void OnTaskListItemBriefTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskListId
        {
            get
            {
                return _TaskListId;
            }
            set
            {
                OnTaskListIdChanging(value);
                ReportPropertyChanging("TaskListId");
                _TaskListId = StructuralObject.SetValidValue(value, "TaskListId");
                ReportPropertyChanged("TaskListId");
                OnTaskListIdChanged();
            }
        }
        private global::System.Int32 _TaskListId;
        partial void OnTaskListIdChanging(global::System.Int32 value);
        partial void OnTaskListIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefTaskId
        {
            get
            {
                return _ItemBriefTaskId;
            }
            set
            {
                OnItemBriefTaskIdChanging(value);
                ReportPropertyChanging("ItemBriefTaskId");
                _ItemBriefTaskId = StructuralObject.SetValidValue(value, "ItemBriefTaskId");
                ReportPropertyChanged("ItemBriefTaskId");
                OnItemBriefTaskIdChanged();
            }
        }
        private global::System.Int32 _ItemBriefTaskId;
        partial void OnItemBriefTaskIdChanging(global::System.Int32 value);
        partial void OnItemBriefTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_TaskListsItemBriefTasks_ItemBriefTasks", "ItemBriefTask")]
        public ItemBriefTask ItemBriefTask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBriefTask>("StageBitz.Data.FK_TaskListsItemBriefTasks_ItemBriefTasks", "ItemBriefTask").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBriefTask>("StageBitz.Data.FK_TaskListsItemBriefTasks_ItemBriefTasks", "ItemBriefTask").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemBriefTask> ItemBriefTaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBriefTask>("StageBitz.Data.FK_TaskListsItemBriefTasks_ItemBriefTasks", "ItemBriefTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemBriefTask>("StageBitz.Data.FK_TaskListsItemBriefTasks_ItemBriefTasks", "ItemBriefTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_TaskListsItemBriefTasks_TaskLists", "TaskList")]
        public TaskList TaskList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskList>("StageBitz.Data.FK_TaskListsItemBriefTasks_TaskLists", "TaskList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskList>("StageBitz.Data.FK_TaskListsItemBriefTasks_TaskLists", "TaskList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskList> TaskListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskList>("StageBitz.Data.FK_TaskListsItemBriefTasks_TaskLists", "TaskList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskList>("StageBitz.Data.FK_TaskListsItemBriefTasks_TaskLists", "TaskList", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        public static Transaction CreateTransaction(global::System.Int32 transactionID)
        {
            Transaction transaction = new Transaction();
            transaction.TransactionID = transactionID;
            return transaction;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                if (_TransactionID != value)
                {
                    OnTransactionIDChanging(value);
                    ReportPropertyChanging("TransactionID");
                    _TransactionID = StructuralObject.SetValidValue(value, "TransactionID");
                    ReportPropertyChanged("TransactionID");
                    OnTransactionIDChanged();
                }
            }
        }
        private global::System.Int32 _TransactionID;
        partial void OnTransactionIDChanging(global::System.Int32 value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionTypeCodeID
        {
            get
            {
                return _TransactionTypeCodeID;
            }
            set
            {
                OnTransactionTypeCodeIDChanging(value);
                ReportPropertyChanging("TransactionTypeCodeID");
                _TransactionTypeCodeID = StructuralObject.SetValidValue(value, "TransactionTypeCodeID");
                ReportPropertyChanged("TransactionTypeCodeID");
                OnTransactionTypeCodeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionTypeCodeID;
        partial void OnTransactionTypeCodeIDChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionTypeCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelatedID
        {
            get
            {
                return _RelatedID;
            }
            set
            {
                OnRelatedIDChanging(value);
                ReportPropertyChanging("RelatedID");
                _RelatedID = StructuralObject.SetValidValue(value, "RelatedID");
                ReportPropertyChanged("RelatedID");
                OnRelatedIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RelatedID;
        partial void OnRelatedIDChanging(Nullable<global::System.Int32> value);
        partial void OnRelatedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelatedTable
        {
            get
            {
                return _RelatedTable;
            }
            set
            {
                OnRelatedTableChanging(value);
                ReportPropertyChanging("RelatedTable");
                _RelatedTable = StructuralObject.SetValidValue(value, true, "RelatedTable");
                ReportPropertyChanged("RelatedTable");
                OnRelatedTableChanged();
            }
        }
        private global::System.String _RelatedTable;
        partial void OnRelatedTableChanging(global::System.String value);
        partial void OnRelatedTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value, "TransactionDate");
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionDate;
        partial void OnTransactionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ReversedFlag
        {
            get
            {
                return _ReversedFlag;
            }
            set
            {
                OnReversedFlagChanging(value);
                ReportPropertyChanging("ReversedFlag");
                _ReversedFlag = StructuralObject.SetValidValue(value, "ReversedFlag");
                ReportPropertyChanged("ReversedFlag");
                OnReversedFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _ReversedFlag;
        partial void OnReversedFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnReversedFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateDate;
        partial void OnLastUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Transactions_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Transactions_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Transactions_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Transactions_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_Transactions_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invoices_Transactions", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("StageBitz.Data.FK_Invoices_Transactions", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("StageBitz.Data.FK_Invoices_Transactions", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invoices_Transactions_Reversal", "Invoice")]
        public EntityCollection<Invoice> Invoices1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("StageBitz.Data.FK_Invoices_Transactions_Reversal", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("StageBitz.Data.FK_Invoices_Transactions_Reversal", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Receipts_Transactions", "Receipt")]
        public EntityCollection<Receipt> Receipts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receipt>("StageBitz.Data.FK_Receipts_Transactions", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receipt>("StageBitz.Data.FK_Receipts_Transactions", "Receipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Receipts_Transactions1", "Receipt")]
        public EntityCollection<Receipt> Receipts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receipt>("StageBitz.Data.FK_Receipts_Transactions1", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receipt>("StageBitz.Data.FK_Receipts_Transactions1", "Receipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Receipts_Transactions2", "Receipt")]
        public EntityCollection<Receipt> Receipts2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receipt>("StageBitz.Data.FK_Receipts_Transactions2", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receipt>("StageBitz.Data.FK_Receipts_Transactions2", "Receipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_TransactionLines_Transactions", "TransactionLine")]
        public EntityCollection<TransactionLine> TransactionLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionLine>("StageBitz.Data.FK_TransactionLines_Transactions", "TransactionLine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionLine>("StageBitz.Data.FK_TransactionLines_Transactions", "TransactionLine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="TransactionLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionLine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionLine object.
        /// </summary>
        /// <param name="transactionLineID">Initial value of the TransactionLineID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="masterChartId">Initial value of the MasterChartId property.</param>
        public static TransactionLine CreateTransactionLine(global::System.Int32 transactionLineID, global::System.Int32 transactionID, global::System.Decimal amount, global::System.Int32 masterChartId)
        {
            TransactionLine transactionLine = new TransactionLine();
            transactionLine.TransactionLineID = transactionLineID;
            transactionLine.TransactionID = transactionID;
            transactionLine.Amount = amount;
            transactionLine.MasterChartId = masterChartId;
            return transactionLine;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionLineID
        {
            get
            {
                return _TransactionLineID;
            }
            set
            {
                if (_TransactionLineID != value)
                {
                    OnTransactionLineIDChanging(value);
                    ReportPropertyChanging("TransactionLineID");
                    _TransactionLineID = StructuralObject.SetValidValue(value, "TransactionLineID");
                    ReportPropertyChanged("TransactionLineID");
                    OnTransactionLineIDChanged();
                }
            }
        }
        private global::System.Int32 _TransactionLineID;
        partial void OnTransactionLineIDChanging(global::System.Int32 value);
        partial void OnTransactionLineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value, "TransactionID");
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Int32 _TransactionID;
        partial void OnTransactionIDChanging(global::System.Int32 value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterChartId
        {
            get
            {
                return _MasterChartId;
            }
            set
            {
                OnMasterChartIdChanging(value);
                ReportPropertyChanging("MasterChartId");
                _MasterChartId = StructuralObject.SetValidValue(value, "MasterChartId");
                ReportPropertyChanged("MasterChartId");
                OnMasterChartIdChanged();
            }
        }
        private global::System.Int32 _MasterChartId;
        partial void OnMasterChartIdChanging(global::System.Int32 value);
        partial void OnMasterChartIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateDate;
        partial void OnLastUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_TransactionLines_MasterChart", "MasterChart")]
        public MasterChart MasterChart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterChart>("StageBitz.Data.FK_TransactionLines_MasterChart", "MasterChart").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterChart>("StageBitz.Data.FK_TransactionLines_MasterChart", "MasterChart").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterChart> MasterChartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterChart>("StageBitz.Data.FK_TransactionLines_MasterChart", "MasterChart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterChart>("StageBitz.Data.FK_TransactionLines_MasterChart", "MasterChart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_TransactionLines_Transactions", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_TransactionLines_Transactions", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_TransactionLines_Transactions", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("StageBitz.Data.FK_TransactionLines_Transactions", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("StageBitz.Data.FK_TransactionLines_Transactions", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="loginName">Initial value of the LoginName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="userAccountTypeCodeID">Initial value of the UserAccountTypeCodeID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isEmailVisible">Initial value of the IsEmailVisible property.</param>
        /// <param name="hasRespondedToWelcomeMessage">Initial value of the HasRespondedToWelcomeMessage property.</param>
        /// <param name="projectEmailNotificationCodeId">Initial value of the ProjectEmailNotificationCodeId property.</param>
        /// <param name="companyEmailNotificationCodeId">Initial value of the CompanyEmailNotificationCodeId property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String loginName, global::System.String password, global::System.String firstName, global::System.String lastName, global::System.Int32 userAccountTypeCodeID, global::System.Boolean isActive, global::System.Boolean isEmailVisible, global::System.Boolean hasRespondedToWelcomeMessage, global::System.Int32 projectEmailNotificationCodeId, global::System.Int32 companyEmailNotificationCodeId)
        {
            User user = new User();
            user.UserId = userId;
            user.LoginName = loginName;
            user.Password = password;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.UserAccountTypeCodeID = userAccountTypeCodeID;
            user.IsActive = isActive;
            user.IsEmailVisible = isEmailVisible;
            user.HasRespondedToWelcomeMessage = hasRespondedToWelcomeMessage;
            user.ProjectEmailNotificationCodeId = projectEmailNotificationCodeId;
            user.CompanyEmailNotificationCodeId = companyEmailNotificationCodeId;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginName
        {
            get
            {
                return _LoginName;
            }
            set
            {
                OnLoginNameChanging(value);
                ReportPropertyChanging("LoginName");
                _LoginName = StructuralObject.SetValidValue(value, false, "LoginName");
                ReportPropertyChanged("LoginName");
                OnLoginNameChanged();
            }
        }
        private global::System.String _LoginName;
        partial void OnLoginNameChanging(global::System.String value);
        partial void OnLoginNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email1
        {
            get
            {
                return _Email1;
            }
            set
            {
                OnEmail1Changing(value);
                ReportPropertyChanging("Email1");
                _Email1 = StructuralObject.SetValidValue(value, true, "Email1");
                ReportPropertyChanged("Email1");
                OnEmail1Changed();
            }
        }
        private global::System.String _Email1;
        partial void OnEmail1Changing(global::System.String value);
        partial void OnEmail1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email2
        {
            get
            {
                return _Email2;
            }
            set
            {
                OnEmail2Changing(value);
                ReportPropertyChanging("Email2");
                _Email2 = StructuralObject.SetValidValue(value, true, "Email2");
                ReportPropertyChanged("Email2");
                OnEmail2Changed();
            }
        }
        private global::System.String _Email2;
        partial void OnEmail2Changing(global::System.String value);
        partial void OnEmail2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone1
        {
            get
            {
                return _Phone1;
            }
            set
            {
                OnPhone1Changing(value);
                ReportPropertyChanging("Phone1");
                _Phone1 = StructuralObject.SetValidValue(value, true, "Phone1");
                ReportPropertyChanged("Phone1");
                OnPhone1Changed();
            }
        }
        private global::System.String _Phone1;
        partial void OnPhone1Changing(global::System.String value);
        partial void OnPhone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone2
        {
            get
            {
                return _Phone2;
            }
            set
            {
                OnPhone2Changing(value);
                ReportPropertyChanging("Phone2");
                _Phone2 = StructuralObject.SetValidValue(value, true, "Phone2");
                ReportPropertyChanged("Phone2");
                OnPhone2Changed();
            }
        }
        private global::System.String _Phone2;
        partial void OnPhone2Changing(global::System.String value);
        partial void OnPhone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true, "AddressLine1");
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true, "AddressLine2");
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostCode
        {
            get
            {
                return _PostCode;
            }
            set
            {
                OnPostCodeChanging(value);
                ReportPropertyChanging("PostCode");
                _PostCode = StructuralObject.SetValidValue(value, true, "PostCode");
                ReportPropertyChanged("PostCode");
                OnPostCodeChanged();
            }
        }
        private global::System.String _PostCode;
        partial void OnPostCodeChanging(global::System.String value);
        partial void OnPostCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value, "CountryId");
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountTypeCodeID
        {
            get
            {
                return _UserAccountTypeCodeID;
            }
            set
            {
                OnUserAccountTypeCodeIDChanging(value);
                ReportPropertyChanging("UserAccountTypeCodeID");
                _UserAccountTypeCodeID = StructuralObject.SetValidValue(value, "UserAccountTypeCodeID");
                ReportPropertyChanged("UserAccountTypeCodeID");
                OnUserAccountTypeCodeIDChanged();
            }
        }
        private global::System.Int32 _UserAccountTypeCodeID;
        partial void OnUserAccountTypeCodeIDChanging(global::System.Int32 value);
        partial void OnUserAccountTypeCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEmailVisible
        {
            get
            {
                return _IsEmailVisible;
            }
            set
            {
                OnIsEmailVisibleChanging(value);
                ReportPropertyChanging("IsEmailVisible");
                _IsEmailVisible = StructuralObject.SetValidValue(value, "IsEmailVisible");
                ReportPropertyChanged("IsEmailVisible");
                OnIsEmailVisibleChanged();
            }
        }
        private global::System.Boolean _IsEmailVisible;
        partial void OnIsEmailVisibleChanging(global::System.Boolean value);
        partial void OnIsEmailVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true, "Position");
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true, "Company");
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoggedInDate
        {
            get
            {
                return _LastLoggedInDate;
            }
            set
            {
                OnLastLoggedInDateChanging(value);
                ReportPropertyChanging("LastLoggedInDate");
                _LastLoggedInDate = StructuralObject.SetValidValue(value, "LastLoggedInDate");
                ReportPropertyChanged("LastLoggedInDate");
                OnLastLoggedInDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoggedInDate;
        partial void OnLastLoggedInDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoggedInDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasRespondedToWelcomeMessage
        {
            get
            {
                return _HasRespondedToWelcomeMessage;
            }
            set
            {
                OnHasRespondedToWelcomeMessageChanging(value);
                ReportPropertyChanging("HasRespondedToWelcomeMessage");
                _HasRespondedToWelcomeMessage = StructuralObject.SetValidValue(value, "HasRespondedToWelcomeMessage");
                ReportPropertyChanged("HasRespondedToWelcomeMessage");
                OnHasRespondedToWelcomeMessageChanged();
            }
        }
        private global::System.Boolean _HasRespondedToWelcomeMessage;
        partial void OnHasRespondedToWelcomeMessageChanging(global::System.Boolean value);
        partial void OnHasRespondedToWelcomeMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectEmailNotificationCodeId
        {
            get
            {
                return _ProjectEmailNotificationCodeId;
            }
            set
            {
                OnProjectEmailNotificationCodeIdChanging(value);
                ReportPropertyChanging("ProjectEmailNotificationCodeId");
                _ProjectEmailNotificationCodeId = StructuralObject.SetValidValue(value, "ProjectEmailNotificationCodeId");
                ReportPropertyChanged("ProjectEmailNotificationCodeId");
                OnProjectEmailNotificationCodeIdChanged();
            }
        }
        private global::System.Int32 _ProjectEmailNotificationCodeId;
        partial void OnProjectEmailNotificationCodeIdChanging(global::System.Int32 value);
        partial void OnProjectEmailNotificationCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyEmailNotificationCodeId
        {
            get
            {
                return _CompanyEmailNotificationCodeId;
            }
            set
            {
                OnCompanyEmailNotificationCodeIdChanging(value);
                ReportPropertyChanging("CompanyEmailNotificationCodeId");
                _CompanyEmailNotificationCodeId = StructuralObject.SetValidValue(value, "CompanyEmailNotificationCodeId");
                ReportPropertyChanged("CompanyEmailNotificationCodeId");
                OnCompanyEmailNotificationCodeIdChanged();
            }
        }
        private global::System.Int32 _CompanyEmailNotificationCodeId;
        partial void OnCompanyEmailNotificationCodeIdChanging(global::System.Int32 value);
        partial void OnCompanyEmailNotificationCodeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Users_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Users_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Users_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_Users_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_Users_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_CompanyUsers_Users", "CompanyUser")]
        public EntityCollection<CompanyUser> CompanyUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyUser>("StageBitz.Data.FK_CompanyUsers_Users", "CompanyUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyUser>("StageBitz.Data.FK_CompanyUsers_Users", "CompanyUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Users_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("StageBitz.Data.FK_Users_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("StageBitz.Data.FK_Users_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("StageBitz.Data.FK_Users_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("StageBitz.Data.FK_Users_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_EmailChangeRequests_Users", "EmailChangeRequest")]
        public EntityCollection<EmailChangeRequest> EmailChangeRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailChangeRequest>("StageBitz.Data.FK_EmailChangeRequests_Users", "EmailChangeRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailChangeRequest>("StageBitz.Data.FK_EmailChangeRequests_Users", "EmailChangeRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_InventoryManagerSentEmails_Users", "InventoryManagerSentEmail")]
        public EntityCollection<InventoryManagerSentEmail> InventoryManagerSentEmails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryManagerSentEmail>("StageBitz.Data.FK_InventoryManagerSentEmails_Users", "InventoryManagerSentEmail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryManagerSentEmail>("StageBitz.Data.FK_InventoryManagerSentEmails_Users", "InventoryManagerSentEmail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_Invitations_Users", "Invitation")]
        public EntityCollection<Invitation> Invitations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitation>("StageBitz.Data.FK_Invitations_Users", "Invitation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitation>("StageBitz.Data.FK_Invitations_Users", "Invitation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectArchives_Users", "ProjectArchive")]
        public EntityCollection<ProjectArchive> ProjectArchives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectArchive>("StageBitz.Data.FK_ProjectArchives_Users", "ProjectArchive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectArchive>("StageBitz.Data.FK_ProjectArchives_Users", "ProjectArchive", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ProjectUsers_Users", "ProjectUser")]
        public EntityCollection<ProjectUser> ProjectUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUser>("StageBitz.Data.FK_ProjectUsers_Users", "ProjectUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUser>("StageBitz.Data.FK_ProjectUsers_Users", "ProjectUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_RemovedWatchListItemsNotifications_Users", "RemovedWatchListItemsNotification")]
        public EntityCollection<RemovedWatchListItemsNotification> RemovedWatchListItemsNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RemovedWatchListItemsNotification>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Users", "RemovedWatchListItemsNotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RemovedWatchListItemsNotification>("StageBitz.Data.FK_RemovedWatchListItemsNotifications_Users", "RemovedWatchListItemsNotification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_UserLastVisitedtItemTypes_Users", "UserLastVisitedtItemType")]
        public EntityCollection<UserLastVisitedtItemType> UserLastVisitedtItemTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserLastVisitedtItemType>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Users", "UserLastVisitedtItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserLastVisitedtItemType>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Users", "UserLastVisitedtItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_UserSkills_Users", "UserSkill")]
        public EntityCollection<UserSkill> UserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSkill>("StageBitz.Data.FK_UserSkills_Users", "UserSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSkill>("StageBitz.Data.FK_UserSkills_Users", "UserSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ViewSettings_Users", "ViewSetting")]
        public EntityCollection<ViewSetting> ViewSettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ViewSetting>("StageBitz.Data.FK_ViewSettings_Users", "ViewSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ViewSetting>("StageBitz.Data.FK_ViewSettings_Users", "ViewSetting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_WatchListHeader_Users", "WatchListHeader")]
        public EntityCollection<WatchListHeader> WatchListHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WatchListHeader>("StageBitz.Data.FK_WatchListHeader_Users", "WatchListHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WatchListHeader>("StageBitz.Data.FK_WatchListHeader_Users", "WatchListHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_DailyBookingNotifications_Users", "DailyBookingNotification")]
        public EntityCollection<DailyBookingNotification> DailyBookingNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DailyBookingNotification>("StageBitz.Data.FK_DailyBookingNotifications_Users", "DailyBookingNotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DailyBookingNotification>("StageBitz.Data.FK_DailyBookingNotifications_Users", "DailyBookingNotification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ItemBookingStatusHistories_Users", "ItemBookingStatusHistory")]
        public EntityCollection<ItemBookingStatusHistory> ItemBookingStatusHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemBookingStatusHistory>("StageBitz.Data.FK_ItemBookingStatusHistories_Users", "ItemBookingStatusHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemBookingStatusHistory>("StageBitz.Data.FK_ItemBookingStatusHistories_Users", "ItemBookingStatusHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_NonProjectBookings_Users", "NonProjectBooking")]
        public EntityCollection<NonProjectBooking> NonProjectBookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NonProjectBooking>("StageBitz.Data.FK_NonProjectBookings_Users", "NonProjectBooking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NonProjectBooking>("StageBitz.Data.FK_NonProjectBookings_Users", "NonProjectBooking", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="UserContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserContact object.
        /// </summary>
        /// <param name="userContactId">Initial value of the UserContactId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="contactUserId">Initial value of the ContactUserId property.</param>
        public static UserContact CreateUserContact(global::System.Int32 userContactId, global::System.Int32 userId, global::System.Int32 contactUserId)
        {
            UserContact userContact = new UserContact();
            userContact.UserContactId = userContactId;
            userContact.UserId = userId;
            userContact.ContactUserId = contactUserId;
            return userContact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserContactId
        {
            get
            {
                return _UserContactId;
            }
            set
            {
                if (_UserContactId != value)
                {
                    OnUserContactIdChanging(value);
                    ReportPropertyChanging("UserContactId");
                    _UserContactId = StructuralObject.SetValidValue(value, "UserContactId");
                    ReportPropertyChanged("UserContactId");
                    OnUserContactIdChanged();
                }
            }
        }
        private global::System.Int32 _UserContactId;
        partial void OnUserContactIdChanging(global::System.Int32 value);
        partial void OnUserContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactUserId
        {
            get
            {
                return _ContactUserId;
            }
            set
            {
                OnContactUserIdChanging(value);
                ReportPropertyChanging("ContactUserId");
                _ContactUserId = StructuralObject.SetValidValue(value, "ContactUserId");
                ReportPropertyChanged("ContactUserId");
                OnContactUserIdChanged();
            }
        }
        private global::System.Int32 _ContactUserId;
        partial void OnContactUserIdChanging(global::System.Int32 value);
        partial void OnContactUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="UserLastVisitedtItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLastVisitedtItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserLastVisitedtItemType object.
        /// </summary>
        /// <param name="userLastVisitedtItemTypeId">Initial value of the UserLastVisitedtItemTypeId property.</param>
        /// <param name="itemTypeId">Initial value of the ItemTypeId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        public static UserLastVisitedtItemType CreateUserLastVisitedtItemType(global::System.Int32 userLastVisitedtItemTypeId, global::System.Int32 itemTypeId, global::System.Int32 userId, global::System.Int32 projectId)
        {
            UserLastVisitedtItemType userLastVisitedtItemType = new UserLastVisitedtItemType();
            userLastVisitedtItemType.UserLastVisitedtItemTypeId = userLastVisitedtItemTypeId;
            userLastVisitedtItemType.ItemTypeId = itemTypeId;
            userLastVisitedtItemType.UserId = userId;
            userLastVisitedtItemType.ProjectId = projectId;
            return userLastVisitedtItemType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserLastVisitedtItemTypeId
        {
            get
            {
                return _UserLastVisitedtItemTypeId;
            }
            set
            {
                if (_UserLastVisitedtItemTypeId != value)
                {
                    OnUserLastVisitedtItemTypeIdChanging(value);
                    ReportPropertyChanging("UserLastVisitedtItemTypeId");
                    _UserLastVisitedtItemTypeId = StructuralObject.SetValidValue(value, "UserLastVisitedtItemTypeId");
                    ReportPropertyChanged("UserLastVisitedtItemTypeId");
                    OnUserLastVisitedtItemTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _UserLastVisitedtItemTypeId;
        partial void OnUserLastVisitedtItemTypeIdChanging(global::System.Int32 value);
        partial void OnUserLastVisitedtItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value, "ItemTypeId");
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private global::System.Int32 _ItemTypeId;
        partial void OnItemTypeIdChanging(global::System.Int32 value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_UserLastVisitedtItemTypes_ItemTypes", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_UserLastVisitedtItemTypes_ItemTypes", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_UserLastVisitedtItemTypes_ItemTypes", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("StageBitz.Data.FK_UserLastVisitedtItemTypes_ItemTypes", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("StageBitz.Data.FK_UserLastVisitedtItemTypes_ItemTypes", "ItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_UserLastVisitedtItemTypes_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_UserLastVisitedtItemTypes_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_UserLastVisitedtItemTypes_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="UserNotificationSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserNotificationSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserNotificationSetting object.
        /// </summary>
        /// <param name="userNotificationSettingID">Initial value of the UserNotificationSettingID property.</param>
        /// <param name="showMyNotifications">Initial value of the ShowMyNotifications property.</param>
        public static UserNotificationSetting CreateUserNotificationSetting(global::System.Int32 userNotificationSettingID, global::System.Boolean showMyNotifications)
        {
            UserNotificationSetting userNotificationSetting = new UserNotificationSetting();
            userNotificationSetting.UserNotificationSettingID = userNotificationSettingID;
            userNotificationSetting.ShowMyNotifications = showMyNotifications;
            return userNotificationSetting;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserNotificationSettingID
        {
            get
            {
                return _UserNotificationSettingID;
            }
            set
            {
                if (_UserNotificationSettingID != value)
                {
                    OnUserNotificationSettingIDChanging(value);
                    ReportPropertyChanging("UserNotificationSettingID");
                    _UserNotificationSettingID = StructuralObject.SetValidValue(value, "UserNotificationSettingID");
                    ReportPropertyChanged("UserNotificationSettingID");
                    OnUserNotificationSettingIDChanged();
                }
            }
        }
        private global::System.Int32 _UserNotificationSettingID;
        partial void OnUserNotificationSettingIDChanging(global::System.Int32 value);
        partial void OnUserNotificationSettingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelatedTable
        {
            get
            {
                return _RelatedTable;
            }
            set
            {
                OnRelatedTableChanging(value);
                ReportPropertyChanging("RelatedTable");
                _RelatedTable = StructuralObject.SetValidValue(value, true, "RelatedTable");
                ReportPropertyChanged("RelatedTable");
                OnRelatedTableChanged();
            }
        }
        private global::System.String _RelatedTable;
        partial void OnRelatedTableChanging(global::System.String value);
        partial void OnRelatedTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelatedId
        {
            get
            {
                return _RelatedId;
            }
            set
            {
                OnRelatedIdChanging(value);
                ReportPropertyChanging("RelatedId");
                _RelatedId = StructuralObject.SetValidValue(value, "RelatedId");
                ReportPropertyChanged("RelatedId");
                OnRelatedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RelatedId;
        partial void OnRelatedIdChanging(Nullable<global::System.Int32> value);
        partial void OnRelatedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowMyNotifications
        {
            get
            {
                return _ShowMyNotifications;
            }
            set
            {
                OnShowMyNotificationsChanging(value);
                ReportPropertyChanging("ShowMyNotifications");
                _ShowMyNotifications = StructuralObject.SetValidValue(value, "ShowMyNotifications");
                ReportPropertyChanged("ShowMyNotifications");
                OnShowMyNotificationsChanged();
            }
        }
        private global::System.Boolean _ShowMyNotifications;
        partial void OnShowMyNotificationsChanging(global::System.Boolean value);
        partial void OnShowMyNotificationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastNotificationId
        {
            get
            {
                return _LastNotificationId;
            }
            set
            {
                OnLastNotificationIdChanging(value);
                ReportPropertyChanging("LastNotificationId");
                _LastNotificationId = StructuralObject.SetValidValue(value, "LastNotificationId");
                ReportPropertyChanged("LastNotificationId");
                OnLastNotificationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastNotificationId;
        partial void OnLastNotificationIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastNotificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value, "LastUpdatedBy");
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="UserSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSkill object.
        /// </summary>
        /// <param name="userSkillId">Initial value of the UserSkillId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="ignoreFromAdmin">Initial value of the IgnoreFromAdmin property.</param>
        public static UserSkill CreateUserSkill(global::System.Int32 userSkillId, global::System.Int32 userId, global::System.Boolean ignoreFromAdmin)
        {
            UserSkill userSkill = new UserSkill();
            userSkill.UserSkillId = userSkillId;
            userSkill.UserId = userId;
            userSkill.IgnoreFromAdmin = ignoreFromAdmin;
            return userSkill;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserSkillId
        {
            get
            {
                return _UserSkillId;
            }
            set
            {
                if (_UserSkillId != value)
                {
                    OnUserSkillIdChanging(value);
                    ReportPropertyChanging("UserSkillId");
                    _UserSkillId = StructuralObject.SetValidValue(value, "UserSkillId");
                    ReportPropertyChanged("UserSkillId");
                    OnUserSkillIdChanged();
                }
            }
        }
        private global::System.Int32 _UserSkillId;
        partial void OnUserSkillIdChanging(global::System.Int32 value);
        partial void OnUserSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                OnSkillIdChanging(value);
                ReportPropertyChanging("SkillId");
                _SkillId = StructuralObject.SetValidValue(value, "SkillId");
                ReportPropertyChanged("SkillId");
                OnSkillIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SkillId;
        partial void OnSkillIdChanging(Nullable<global::System.Int32> value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomSkillName
        {
            get
            {
                return _CustomSkillName;
            }
            set
            {
                OnCustomSkillNameChanging(value);
                ReportPropertyChanging("CustomSkillName");
                _CustomSkillName = StructuralObject.SetValidValue(value, true, "CustomSkillName");
                ReportPropertyChanged("CustomSkillName");
                OnCustomSkillNameChanged();
            }
        }
        private global::System.String _CustomSkillName;
        partial void OnCustomSkillNameChanging(global::System.String value);
        partial void OnCustomSkillNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IgnoreFromAdmin
        {
            get
            {
                return _IgnoreFromAdmin;
            }
            set
            {
                OnIgnoreFromAdminChanging(value);
                ReportPropertyChanging("IgnoreFromAdmin");
                _IgnoreFromAdmin = StructuralObject.SetValidValue(value, "IgnoreFromAdmin");
                ReportPropertyChanged("IgnoreFromAdmin");
                OnIgnoreFromAdminChanged();
            }
        }
        private global::System.Boolean _IgnoreFromAdmin;
        partial void OnIgnoreFromAdminChanging(global::System.Boolean value);
        partial void OnIgnoreFromAdminChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_UserSkills_Skills", "Skill")]
        public Skill Skill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("StageBitz.Data.FK_UserSkills_Skills", "Skill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("StageBitz.Data.FK_UserSkills_Skills", "Skill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Skill> SkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("StageBitz.Data.FK_UserSkills_Skills", "Skill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Skill>("StageBitz.Data.FK_UserSkills_Skills", "Skill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_UserSkills_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_UserSkills_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_UserSkills_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_UserSkills_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_UserSkills_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="ViewSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ViewSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ViewSetting object.
        /// </summary>
        /// <param name="viewSettingId">Initial value of the ViewSettingId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="viewSettingModuleCodeId">Initial value of the ViewSettingModuleCodeId property.</param>
        /// <param name="viewSettingValueCodeId">Initial value of the ViewSettingValueCodeId property.</param>
        public static ViewSetting CreateViewSetting(global::System.Int32 viewSettingId, global::System.Int32 userId, global::System.Int32 viewSettingModuleCodeId, global::System.Int32 viewSettingValueCodeId)
        {
            ViewSetting viewSetting = new ViewSetting();
            viewSetting.ViewSettingId = viewSettingId;
            viewSetting.UserId = userId;
            viewSetting.ViewSettingModuleCodeId = viewSettingModuleCodeId;
            viewSetting.ViewSettingValueCodeId = viewSettingValueCodeId;
            return viewSetting;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewSettingId
        {
            get
            {
                return _ViewSettingId;
            }
            set
            {
                if (_ViewSettingId != value)
                {
                    OnViewSettingIdChanging(value);
                    ReportPropertyChanging("ViewSettingId");
                    _ViewSettingId = StructuralObject.SetValidValue(value, "ViewSettingId");
                    ReportPropertyChanged("ViewSettingId");
                    OnViewSettingIdChanged();
                }
            }
        }
        private global::System.Int32 _ViewSettingId;
        partial void OnViewSettingIdChanging(global::System.Int32 value);
        partial void OnViewSettingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewSettingModuleCodeId
        {
            get
            {
                return _ViewSettingModuleCodeId;
            }
            set
            {
                OnViewSettingModuleCodeIdChanging(value);
                ReportPropertyChanging("ViewSettingModuleCodeId");
                _ViewSettingModuleCodeId = StructuralObject.SetValidValue(value, "ViewSettingModuleCodeId");
                ReportPropertyChanged("ViewSettingModuleCodeId");
                OnViewSettingModuleCodeIdChanged();
            }
        }
        private global::System.Int32 _ViewSettingModuleCodeId;
        partial void OnViewSettingModuleCodeIdChanging(global::System.Int32 value);
        partial void OnViewSettingModuleCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewSettingValueCodeId
        {
            get
            {
                return _ViewSettingValueCodeId;
            }
            set
            {
                OnViewSettingValueCodeIdChanging(value);
                ReportPropertyChanging("ViewSettingValueCodeId");
                _ViewSettingValueCodeId = StructuralObject.SetValidValue(value, "ViewSettingValueCodeId");
                ReportPropertyChanged("ViewSettingValueCodeId");
                OnViewSettingValueCodeIdChanged();
            }
        }
        private global::System.Int32 _ViewSettingValueCodeId;
        partial void OnViewSettingValueCodeIdChanging(global::System.Int32 value);
        partial void OnViewSettingValueCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ViewSettings_Codes", "Code")]
        public Code Code
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ViewSettings_Codes", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ViewSettings_Codes", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> CodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ViewSettings_Codes", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_ViewSettings_Codes", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ViewSettings_Codes1", "Code")]
        public Code Code1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ViewSettings_Codes1", "Code").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ViewSettings_Codes1", "Code").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Code> Code1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Code>("StageBitz.Data.FK_ViewSettings_Codes1", "Code");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Code>("StageBitz.Data.FK_ViewSettings_Codes1", "Code", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_ViewSettings_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ViewSettings_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ViewSettings_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_ViewSettings_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_ViewSettings_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="WatchListHeader")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WatchListHeader : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WatchListHeader object.
        /// </summary>
        /// <param name="watchListHeaderId">Initial value of the WatchListHeaderId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static WatchListHeader CreateWatchListHeader(global::System.Int32 watchListHeaderId, global::System.Int32 userId, global::System.Int32 companyId)
        {
            WatchListHeader watchListHeader = new WatchListHeader();
            watchListHeader.WatchListHeaderId = watchListHeaderId;
            watchListHeader.UserId = userId;
            watchListHeader.CompanyId = companyId;
            return watchListHeader;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WatchListHeaderId
        {
            get
            {
                return _WatchListHeaderId;
            }
            set
            {
                if (_WatchListHeaderId != value)
                {
                    OnWatchListHeaderIdChanging(value);
                    ReportPropertyChanging("WatchListHeaderId");
                    _WatchListHeaderId = StructuralObject.SetValidValue(value, "WatchListHeaderId");
                    ReportPropertyChanged("WatchListHeaderId");
                    OnWatchListHeaderIdChanged();
                }
            }
        }
        private global::System.Int32 _WatchListHeaderId;
        partial void OnWatchListHeaderIdChanging(global::System.Int32 value);
        partial void OnWatchListHeaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_WatchListHeader_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_WatchListHeader_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_WatchListHeader_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("StageBitz.Data.FK_WatchListHeader_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("StageBitz.Data.FK_WatchListHeader_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_WatchListHeader_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_WatchListHeader_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_WatchListHeader_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("StageBitz.Data.FK_WatchListHeader_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("StageBitz.Data.FK_WatchListHeader_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_WatchListItems_WatchListHeader", "WatchListItem")]
        public EntityCollection<WatchListItem> WatchListItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WatchListItem>("StageBitz.Data.FK_WatchListItems_WatchListHeader", "WatchListItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WatchListItem>("StageBitz.Data.FK_WatchListItems_WatchListHeader", "WatchListItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StageBitz.Data", Name="WatchListItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WatchListItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WatchListItem object.
        /// </summary>
        /// <param name="watchListItemId">Initial value of the WatchListItemId property.</param>
        /// <param name="watchListHeaderId">Initial value of the WatchListHeaderId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        public static WatchListItem CreateWatchListItem(global::System.Int32 watchListItemId, global::System.Int32 watchListHeaderId, global::System.Int32 itemId)
        {
            WatchListItem watchListItem = new WatchListItem();
            watchListItem.WatchListItemId = watchListItemId;
            watchListItem.WatchListHeaderId = watchListHeaderId;
            watchListItem.ItemId = itemId;
            return watchListItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WatchListItemId
        {
            get
            {
                return _WatchListItemId;
            }
            set
            {
                if (_WatchListItemId != value)
                {
                    OnWatchListItemIdChanging(value);
                    ReportPropertyChanging("WatchListItemId");
                    _WatchListItemId = StructuralObject.SetValidValue(value, "WatchListItemId");
                    ReportPropertyChanged("WatchListItemId");
                    OnWatchListItemIdChanged();
                }
            }
        }
        private global::System.Int32 _WatchListItemId;
        partial void OnWatchListItemIdChanging(global::System.Int32 value);
        partial void OnWatchListItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WatchListHeaderId
        {
            get
            {
                return _WatchListHeaderId;
            }
            set
            {
                OnWatchListHeaderIdChanging(value);
                ReportPropertyChanging("WatchListHeaderId");
                _WatchListHeaderId = StructuralObject.SetValidValue(value, "WatchListHeaderId");
                ReportPropertyChanged("WatchListHeaderId");
                OnWatchListHeaderIdChanged();
            }
        }
        private global::System.Int32 _WatchListHeaderId;
        partial void OnWatchListHeaderIdChanging(global::System.Int32 value);
        partial void OnWatchListHeaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_WatchListItems_WatchListHeader", "WatchListHeader")]
        public WatchListHeader WatchListHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WatchListHeader>("StageBitz.Data.FK_WatchListItems_WatchListHeader", "WatchListHeader").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WatchListHeader>("StageBitz.Data.FK_WatchListItems_WatchListHeader", "WatchListHeader").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WatchListHeader> WatchListHeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WatchListHeader>("StageBitz.Data.FK_WatchListItems_WatchListHeader", "WatchListHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WatchListHeader>("StageBitz.Data.FK_WatchListItems_WatchListHeader", "WatchListHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StageBitz.Data", "FK_WatchListItems_Items", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_WatchListItems_Items", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_WatchListItems_Items", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StageBitz.Data.FK_WatchListItems_Items", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("StageBitz.Data.FK_WatchListItems_Items", "Item", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="StageBitz.Data", Name="GetALLItemBriefs_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetALLItemBriefs_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetALLItemBriefs_Result object.
        /// </summary>
        /// <param name="itemBriefId">Initial value of the ItemBriefId property.</param>
        /// <param name="itemBriefName">Initial value of the ItemBriefName property.</param>
        /// <param name="itemTypeName">Initial value of the ItemTypeName property.</param>
        /// <param name="fieldGroupId">Initial value of the FieldGroupId property.</param>
        /// <param name="fieldGroupName">Initial value of the FieldGroupName property.</param>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        /// <param name="fieldName">Initial value of the FieldName property.</param>
        public static GetALLItemBriefs_Result CreateGetALLItemBriefs_Result(global::System.Int32 itemBriefId, global::System.String itemBriefName, global::System.String itemTypeName, global::System.Int32 fieldGroupId, global::System.String fieldGroupName, global::System.Int32 fieldId, global::System.String fieldName)
        {
            GetALLItemBriefs_Result getALLItemBriefs_Result = new GetALLItemBriefs_Result();
            getALLItemBriefs_Result.ItemBriefId = itemBriefId;
            getALLItemBriefs_Result.ItemBriefName = itemBriefName;
            getALLItemBriefs_Result.ItemTypeName = itemTypeName;
            getALLItemBriefs_Result.FieldGroupId = fieldGroupId;
            getALLItemBriefs_Result.FieldGroupName = fieldGroupName;
            getALLItemBriefs_Result.FieldId = fieldId;
            getALLItemBriefs_Result.FieldName = fieldName;
            return getALLItemBriefs_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemBriefId
        {
            get
            {
                return _ItemBriefId;
            }
            set
            {
                OnItemBriefIdChanging(value);
                ReportPropertyChanging("ItemBriefId");
                _ItemBriefId = StructuralObject.SetValidValue(value, "ItemBriefId");
                ReportPropertyChanged("ItemBriefId");
                OnItemBriefIdChanged();
            }
        }
        private global::System.Int32 _ItemBriefId;
        partial void OnItemBriefIdChanging(global::System.Int32 value);
        partial void OnItemBriefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemBriefName
        {
            get
            {
                return _ItemBriefName;
            }
            set
            {
                OnItemBriefNameChanging(value);
                ReportPropertyChanging("ItemBriefName");
                _ItemBriefName = StructuralObject.SetValidValue(value, false, "ItemBriefName");
                ReportPropertyChanged("ItemBriefName");
                OnItemBriefNameChanged();
            }
        }
        private global::System.String _ItemBriefName;
        partial void OnItemBriefNameChanging(global::System.String value);
        partial void OnItemBriefNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true, "Category");
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Character
        {
            get
            {
                return _Character;
            }
            set
            {
                OnCharacterChanging(value);
                ReportPropertyChanging("Character");
                _Character = StructuralObject.SetValidValue(value, true, "Character");
                ReportPropertyChanged("Character");
                OnCharacterChanged();
            }
        }
        private global::System.String _Character;
        partial void OnCharacterChanging(global::System.String value);
        partial void OnCharacterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemTypeName
        {
            get
            {
                return _ItemTypeName;
            }
            set
            {
                OnItemTypeNameChanging(value);
                ReportPropertyChanging("ItemTypeName");
                _ItemTypeName = StructuralObject.SetValidValue(value, false, "ItemTypeName");
                ReportPropertyChanged("ItemTypeName");
                OnItemTypeNameChanged();
            }
        }
        private global::System.String _ItemTypeName;
        partial void OnItemTypeNameChanging(global::System.String value);
        partial void OnItemTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Preset
        {
            get
            {
                return _Preset;
            }
            set
            {
                OnPresetChanging(value);
                ReportPropertyChanging("Preset");
                _Preset = StructuralObject.SetValidValue(value, true, "Preset");
                ReportPropertyChanged("Preset");
                OnPresetChanged();
            }
        }
        private global::System.String _Preset;
        partial void OnPresetChanging(global::System.String value);
        partial void OnPresetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RehearsalItem
        {
            get
            {
                return _RehearsalItem;
            }
            set
            {
                OnRehearsalItemChanging(value);
                ReportPropertyChanging("RehearsalItem");
                _RehearsalItem = StructuralObject.SetValidValue(value, true, "RehearsalItem");
                ReportPropertyChanged("RehearsalItem");
                OnRehearsalItemChanged();
            }
        }
        private global::System.String _RehearsalItem;
        partial void OnRehearsalItemChanging(global::System.String value);
        partial void OnRehearsalItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Act
        {
            get
            {
                return _Act;
            }
            set
            {
                OnActChanging(value);
                ReportPropertyChanging("Act");
                _Act = StructuralObject.SetValidValue(value, true, "Act");
                ReportPropertyChanged("Act");
                OnActChanged();
            }
        }
        private global::System.String _Act;
        partial void OnActChanging(global::System.String value);
        partial void OnActChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Scene
        {
            get
            {
                return _Scene;
            }
            set
            {
                OnSceneChanging(value);
                ReportPropertyChanging("Scene");
                _Scene = StructuralObject.SetValidValue(value, true, "Scene");
                ReportPropertyChanged("Scene");
                OnSceneChanged();
            }
        }
        private global::System.String _Scene;
        partial void OnSceneChanging(global::System.String value);
        partial void OnSceneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Page
        {
            get
            {
                return _Page;
            }
            set
            {
                OnPageChanging(value);
                ReportPropertyChanging("Page");
                _Page = StructuralObject.SetValidValue(value, true, "Page");
                ReportPropertyChanged("Page");
                OnPageChanged();
            }
        }
        private global::System.String _Page;
        partial void OnPageChanging(global::System.String value);
        partial void OnPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Usage
        {
            get
            {
                return _Usage;
            }
            set
            {
                OnUsageChanging(value);
                ReportPropertyChanging("Usage");
                _Usage = StructuralObject.SetValidValue(value, true, "Usage");
                ReportPropertyChanged("Usage");
                OnUsageChanged();
            }
        }
        private global::System.String _Usage;
        partial void OnUsageChanging(global::System.String value);
        partial void OnUsageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Brief
        {
            get
            {
                return _Brief;
            }
            set
            {
                OnBriefChanging(value);
                ReportPropertyChanging("Brief");
                _Brief = StructuralObject.SetValidValue(value, true, "Brief");
                ReportPropertyChanged("Brief");
                OnBriefChanged();
            }
        }
        private global::System.String _Brief;
        partial void OnBriefChanging(global::System.String value);
        partial void OnBriefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Approver
        {
            get
            {
                return _Approver;
            }
            set
            {
                OnApproverChanging(value);
                ReportPropertyChanging("Approver");
                _Approver = StructuralObject.SetValidValue(value, true, "Approver");
                ReportPropertyChanged("Approver");
                OnApproverChanged();
            }
        }
        private global::System.String _Approver;
        partial void OnApproverChanging(global::System.String value);
        partial void OnApproverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Considerations
        {
            get
            {
                return _Considerations;
            }
            set
            {
                OnConsiderationsChanging(value);
                ReportPropertyChanging("Considerations");
                _Considerations = StructuralObject.SetValidValue(value, true, "Considerations");
                ReportPropertyChanged("Considerations");
                OnConsiderationsChanged();
            }
        }
        private global::System.String _Considerations;
        partial void OnConsiderationsChanging(global::System.String value);
        partial void OnConsiderationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldGroupId
        {
            get
            {
                return _FieldGroupId;
            }
            set
            {
                OnFieldGroupIdChanging(value);
                ReportPropertyChanging("FieldGroupId");
                _FieldGroupId = StructuralObject.SetValidValue(value, "FieldGroupId");
                ReportPropertyChanged("FieldGroupId");
                OnFieldGroupIdChanged();
            }
        }
        private global::System.Int32 _FieldGroupId;
        partial void OnFieldGroupIdChanging(global::System.Int32 value);
        partial void OnFieldGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldGroupName
        {
            get
            {
                return _FieldGroupName;
            }
            set
            {
                OnFieldGroupNameChanging(value);
                ReportPropertyChanging("FieldGroupName");
                _FieldGroupName = StructuralObject.SetValidValue(value, false, "FieldGroupName");
                ReportPropertyChanged("FieldGroupName");
                OnFieldGroupNameChanged();
            }
        }
        private global::System.String _FieldGroupName;
        partial void OnFieldGroupNameChanging(global::System.String value);
        partial void OnFieldGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                OnFieldIdChanging(value);
                ReportPropertyChanging("FieldId");
                _FieldId = StructuralObject.SetValidValue(value, "FieldId");
                ReportPropertyChanged("FieldId");
                OnFieldIdChanged();
            }
        }
        private global::System.Int32 _FieldId;
        partial void OnFieldIdChanging(global::System.Int32 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, false, "FieldName");
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String source
        {
            get
            {
                return _source;
            }
            set
            {
                OnsourceChanging(value);
                ReportPropertyChanging("source");
                _source = StructuralObject.SetValidValue(value, true, "source");
                ReportPropertyChanged("source");
                OnsourceChanged();
            }
        }
        private global::System.String _source;
        partial void OnsourceChanging(global::System.String value);
        partial void OnsourceChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="StageBitz.Data", Name="GetAllSubLocatons_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetAllSubLocatons_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value, "LocationId");
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, true, "LocationName");
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentLocationId
        {
            get
            {
                return _ParentLocationId;
            }
            set
            {
                OnParentLocationIdChanging(value);
                ReportPropertyChanging("ParentLocationId");
                _ParentLocationId = StructuralObject.SetValidValue(value, "ParentLocationId");
                ReportPropertyChanged("ParentLocationId");
                OnParentLocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentLocationId;
        partial void OnParentLocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="StageBitz.Data", Name="GetBookingInfo_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetBookingInfo_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetBookingInfo_Result object.
        /// </summary>
        /// <param name="bookingId">Initial value of the BookingId property.</param>
        /// <param name="relatedTable">Initial value of the RelatedTable property.</param>
        public static GetBookingInfo_Result CreateGetBookingInfo_Result(global::System.Int32 bookingId, global::System.String relatedTable)
        {
            GetBookingInfo_Result getBookingInfo_Result = new GetBookingInfo_Result();
            getBookingInfo_Result.BookingId = bookingId;
            getBookingInfo_Result.RelatedTable = relatedTable;
            return getBookingInfo_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingId
        {
            get
            {
                return _BookingId;
            }
            set
            {
                OnBookingIdChanging(value);
                ReportPropertyChanging("BookingId");
                _BookingId = StructuralObject.SetValidValue(value, "BookingId");
                ReportPropertyChanged("BookingId");
                OnBookingIdChanged();
            }
        }
        private global::System.Int32 _BookingId;
        partial void OnBookingIdChanging(global::System.Int32 value);
        partial void OnBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BookingNumber
        {
            get
            {
                return _BookingNumber;
            }
            set
            {
                OnBookingNumberChanging(value);
                ReportPropertyChanging("BookingNumber");
                _BookingNumber = StructuralObject.SetValidValue(value, "BookingNumber");
                ReportPropertyChanged("BookingNumber");
                OnBookingNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _BookingNumber;
        partial void OnBookingNumberChanging(Nullable<global::System.Int32> value);
        partial void OnBookingNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BookingName
        {
            get
            {
                return _BookingName;
            }
            set
            {
                OnBookingNameChanging(value);
                ReportPropertyChanging("BookingName");
                _BookingName = StructuralObject.SetValidValue(value, true, "BookingName");
                ReportPropertyChanged("BookingName");
                OnBookingNameChanged();
            }
        }
        private global::System.String _BookingName;
        partial void OnBookingNameChanging(global::System.String value);
        partial void OnBookingNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value, "FromDate");
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value, "ToDate");
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDifferentFromDate
        {
            get
            {
                return _IsDifferentFromDate;
            }
            set
            {
                OnIsDifferentFromDateChanging(value);
                ReportPropertyChanging("IsDifferentFromDate");
                _IsDifferentFromDate = StructuralObject.SetValidValue(value, "IsDifferentFromDate");
                ReportPropertyChanged("IsDifferentFromDate");
                OnIsDifferentFromDateChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDifferentFromDate;
        partial void OnIsDifferentFromDateChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDifferentFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDifferentToDate
        {
            get
            {
                return _IsDifferentToDate;
            }
            set
            {
                OnIsDifferentToDateChanging(value);
                ReportPropertyChanging("IsDifferentToDate");
                _IsDifferentToDate = StructuralObject.SetValidValue(value, "IsDifferentToDate");
                ReportPropertyChanged("IsDifferentToDate");
                OnIsDifferentToDateChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDifferentToDate;
        partial void OnIsDifferentToDateChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDifferentToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BookingCount
        {
            get
            {
                return _BookingCount;
            }
            set
            {
                OnBookingCountChanging(value);
                ReportPropertyChanging("BookingCount");
                _BookingCount = StructuralObject.SetValidValue(value, "BookingCount");
                ReportPropertyChanged("BookingCount");
                OnBookingCountChanged();
            }
        }
        private Nullable<global::System.Int32> _BookingCount;
        partial void OnBookingCountChanging(Nullable<global::System.Int32> value);
        partial void OnBookingCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsArchived
        {
            get
            {
                return _IsArchived;
            }
            set
            {
                OnIsArchivedChanging(value);
                ReportPropertyChanging("IsArchived");
                _IsArchived = StructuralObject.SetValidValue(value, "IsArchived");
                ReportPropertyChanged("IsArchived");
                OnIsArchivedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsArchived;
        partial void OnIsArchivedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsArchivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelatedTable
        {
            get
            {
                return _RelatedTable;
            }
            set
            {
                OnRelatedTableChanging(value);
                ReportPropertyChanging("RelatedTable");
                _RelatedTable = StructuralObject.SetValidValue(value, false, "RelatedTable");
                ReportPropertyChanged("RelatedTable");
                OnRelatedTableChanged();
            }
        }
        private global::System.String _RelatedTable;
        partial void OnRelatedTableChanging(global::System.String value);
        partial void OnRelatedTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusCodeId
        {
            get
            {
                return _StatusCodeId;
            }
            set
            {
                OnStatusCodeIdChanging(value);
                ReportPropertyChanging("StatusCodeId");
                _StatusCodeId = StructuralObject.SetValidValue(value, "StatusCodeId");
                ReportPropertyChanged("StatusCodeId");
                OnStatusCodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusCodeId;
        partial void OnStatusCodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusCodeIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="StageBitz.Data", Name="GetCurrentItemBookingStatus_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetCurrentItemBookingStatus_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetCurrentItemBookingStatus_Result object.
        /// </summary>
        /// <param name="codeId">Initial value of the CodeId property.</param>
        /// <param name="codeHeaderId">Initial value of the CodeHeaderId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static GetCurrentItemBookingStatus_Result CreateGetCurrentItemBookingStatus_Result(global::System.Int32 codeId, global::System.Int32 codeHeaderId, global::System.String value, global::System.Int32 sortOrder, global::System.Boolean isActive)
        {
            GetCurrentItemBookingStatus_Result getCurrentItemBookingStatus_Result = new GetCurrentItemBookingStatus_Result();
            getCurrentItemBookingStatus_Result.CodeId = codeId;
            getCurrentItemBookingStatus_Result.CodeHeaderId = codeHeaderId;
            getCurrentItemBookingStatus_Result.Value = value;
            getCurrentItemBookingStatus_Result.SortOrder = sortOrder;
            getCurrentItemBookingStatus_Result.IsActive = isActive;
            return getCurrentItemBookingStatus_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CodeId
        {
            get
            {
                return _CodeId;
            }
            set
            {
                OnCodeIdChanging(value);
                ReportPropertyChanging("CodeId");
                _CodeId = StructuralObject.SetValidValue(value, "CodeId");
                ReportPropertyChanged("CodeId");
                OnCodeIdChanged();
            }
        }
        private global::System.Int32 _CodeId;
        partial void OnCodeIdChanging(global::System.Int32 value);
        partial void OnCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CodeHeaderId
        {
            get
            {
                return _CodeHeaderId;
            }
            set
            {
                OnCodeHeaderIdChanging(value);
                ReportPropertyChanging("CodeHeaderId");
                _CodeHeaderId = StructuralObject.SetValidValue(value, "CodeHeaderId");
                ReportPropertyChanged("CodeHeaderId");
                OnCodeHeaderIdChanged();
            }
        }
        private global::System.Int32 _CodeHeaderId;
        partial void OnCodeHeaderIdChanging(global::System.Int32 value);
        partial void OnCodeHeaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="StageBitz.Data", Name="GetCurrentItemBriefItemStatus_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetCurrentItemBriefItemStatus_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetCurrentItemBriefItemStatus_Result object.
        /// </summary>
        /// <param name="codeId">Initial value of the CodeId property.</param>
        /// <param name="codeHeaderId">Initial value of the CodeHeaderId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static GetCurrentItemBriefItemStatus_Result CreateGetCurrentItemBriefItemStatus_Result(global::System.Int32 codeId, global::System.Int32 codeHeaderId, global::System.String value, global::System.Int32 sortOrder, global::System.Boolean isActive)
        {
            GetCurrentItemBriefItemStatus_Result getCurrentItemBriefItemStatus_Result = new GetCurrentItemBriefItemStatus_Result();
            getCurrentItemBriefItemStatus_Result.CodeId = codeId;
            getCurrentItemBriefItemStatus_Result.CodeHeaderId = codeHeaderId;
            getCurrentItemBriefItemStatus_Result.Value = value;
            getCurrentItemBriefItemStatus_Result.SortOrder = sortOrder;
            getCurrentItemBriefItemStatus_Result.IsActive = isActive;
            return getCurrentItemBriefItemStatus_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CodeId
        {
            get
            {
                return _CodeId;
            }
            set
            {
                OnCodeIdChanging(value);
                ReportPropertyChanging("CodeId");
                _CodeId = StructuralObject.SetValidValue(value, "CodeId");
                ReportPropertyChanged("CodeId");
                OnCodeIdChanged();
            }
        }
        private global::System.Int32 _CodeId;
        partial void OnCodeIdChanging(global::System.Int32 value);
        partial void OnCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CodeHeaderId
        {
            get
            {
                return _CodeHeaderId;
            }
            set
            {
                OnCodeHeaderIdChanging(value);
                ReportPropertyChanging("CodeHeaderId");
                _CodeHeaderId = StructuralObject.SetValidValue(value, "CodeHeaderId");
                ReportPropertyChanged("CodeHeaderId");
                OnCodeHeaderIdChanged();
            }
        }
        private global::System.Int32 _CodeHeaderId;
        partial void OnCodeHeaderIdChanging(global::System.Int32 value);
        partial void OnCodeHeaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="StageBitz.Data", Name="GetInventoryItems_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetInventoryItems_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetInventoryItems_Result object.
        /// </summary>
        /// <param name="itemTypeName">Initial value of the ItemTypeName property.</param>
        /// <param name="fieldGroupId">Initial value of the FieldGroupId property.</param>
        /// <param name="fieldGroupName">Initial value of the FieldGroupName property.</param>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        /// <param name="fieldName">Initial value of the FieldName property.</param>
        public static GetInventoryItems_Result CreateGetInventoryItems_Result(global::System.String itemTypeName, global::System.Int32 fieldGroupId, global::System.String fieldGroupName, global::System.Int32 fieldId, global::System.String fieldName)
        {
            GetInventoryItems_Result getInventoryItems_Result = new GetInventoryItems_Result();
            getInventoryItems_Result.ItemTypeName = itemTypeName;
            getInventoryItems_Result.FieldGroupId = fieldGroupId;
            getInventoryItems_Result.FieldGroupName = fieldGroupName;
            getInventoryItems_Result.FieldId = fieldId;
            getInventoryItems_Result.FieldName = fieldName;
            return getInventoryItems_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedFor
        {
            get
            {
                return _CreatedFor;
            }
            set
            {
                OnCreatedForChanging(value);
                ReportPropertyChanging("CreatedFor");
                _CreatedFor = StructuralObject.SetValidValue(value, true, "CreatedFor");
                ReportPropertyChanged("CreatedFor");
                OnCreatedForChanged();
            }
        }
        private global::System.String _CreatedFor;
        partial void OnCreatedForChanging(global::System.String value);
        partial void OnCreatedForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemTypeName
        {
            get
            {
                return _ItemTypeName;
            }
            set
            {
                OnItemTypeNameChanging(value);
                ReportPropertyChanging("ItemTypeName");
                _ItemTypeName = StructuralObject.SetValidValue(value, false, "ItemTypeName");
                ReportPropertyChanged("ItemTypeName");
                OnItemTypeNameChanged();
            }
        }
        private global::System.String _ItemTypeName;
        partial void OnItemTypeNameChanging(global::System.String value);
        partial void OnItemTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldGroupId
        {
            get
            {
                return _FieldGroupId;
            }
            set
            {
                OnFieldGroupIdChanging(value);
                ReportPropertyChanging("FieldGroupId");
                _FieldGroupId = StructuralObject.SetValidValue(value, "FieldGroupId");
                ReportPropertyChanged("FieldGroupId");
                OnFieldGroupIdChanged();
            }
        }
        private global::System.Int32 _FieldGroupId;
        partial void OnFieldGroupIdChanging(global::System.Int32 value);
        partial void OnFieldGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldGroupName
        {
            get
            {
                return _FieldGroupName;
            }
            set
            {
                OnFieldGroupNameChanging(value);
                ReportPropertyChanging("FieldGroupName");
                _FieldGroupName = StructuralObject.SetValidValue(value, false, "FieldGroupName");
                ReportPropertyChanged("FieldGroupName");
                OnFieldGroupNameChanged();
            }
        }
        private global::System.String _FieldGroupName;
        partial void OnFieldGroupNameChanging(global::System.String value);
        partial void OnFieldGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                OnFieldIdChanging(value);
                ReportPropertyChanging("FieldId");
                _FieldId = StructuralObject.SetValidValue(value, "FieldId");
                ReportPropertyChanged("FieldId");
                OnFieldIdChanged();
            }
        }
        private global::System.Int32 _FieldId;
        partial void OnFieldIdChanging(global::System.Int32 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, false, "FieldName");
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="StageBitz.Data", Name="GetInventoryItems1_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetInventoryItems1_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetInventoryItems1_Result object.
        /// </summary>
        /// <param name="itemTypeName">Initial value of the ItemTypeName property.</param>
        /// <param name="fieldGroupId">Initial value of the FieldGroupId property.</param>
        /// <param name="fieldGroupName">Initial value of the FieldGroupName property.</param>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        /// <param name="fieldName">Initial value of the FieldName property.</param>
        public static GetInventoryItems1_Result CreateGetInventoryItems1_Result(global::System.String itemTypeName, global::System.Int32 fieldGroupId, global::System.String fieldGroupName, global::System.Int32 fieldId, global::System.String fieldName)
        {
            GetInventoryItems1_Result getInventoryItems1_Result = new GetInventoryItems1_Result();
            getInventoryItems1_Result.ItemTypeName = itemTypeName;
            getInventoryItems1_Result.FieldGroupId = fieldGroupId;
            getInventoryItems1_Result.FieldGroupName = fieldGroupName;
            getInventoryItems1_Result.FieldId = fieldId;
            getInventoryItems1_Result.FieldName = fieldName;
            return getInventoryItems1_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedFor
        {
            get
            {
                return _CreatedFor;
            }
            set
            {
                OnCreatedForChanging(value);
                ReportPropertyChanging("CreatedFor");
                _CreatedFor = StructuralObject.SetValidValue(value, true, "CreatedFor");
                ReportPropertyChanged("CreatedFor");
                OnCreatedForChanged();
            }
        }
        private global::System.String _CreatedFor;
        partial void OnCreatedForChanging(global::System.String value);
        partial void OnCreatedForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemTypeName
        {
            get
            {
                return _ItemTypeName;
            }
            set
            {
                OnItemTypeNameChanging(value);
                ReportPropertyChanging("ItemTypeName");
                _ItemTypeName = StructuralObject.SetValidValue(value, false, "ItemTypeName");
                ReportPropertyChanged("ItemTypeName");
                OnItemTypeNameChanged();
            }
        }
        private global::System.String _ItemTypeName;
        partial void OnItemTypeNameChanging(global::System.String value);
        partial void OnItemTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldGroupId
        {
            get
            {
                return _FieldGroupId;
            }
            set
            {
                OnFieldGroupIdChanging(value);
                ReportPropertyChanging("FieldGroupId");
                _FieldGroupId = StructuralObject.SetValidValue(value, "FieldGroupId");
                ReportPropertyChanged("FieldGroupId");
                OnFieldGroupIdChanged();
            }
        }
        private global::System.Int32 _FieldGroupId;
        partial void OnFieldGroupIdChanging(global::System.Int32 value);
        partial void OnFieldGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldGroupName
        {
            get
            {
                return _FieldGroupName;
            }
            set
            {
                OnFieldGroupNameChanging(value);
                ReportPropertyChanging("FieldGroupName");
                _FieldGroupName = StructuralObject.SetValidValue(value, false, "FieldGroupName");
                ReportPropertyChanged("FieldGroupName");
                OnFieldGroupNameChanged();
            }
        }
        private global::System.String _FieldGroupName;
        partial void OnFieldGroupNameChanging(global::System.String value);
        partial void OnFieldGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                OnFieldIdChanging(value);
                ReportPropertyChanging("FieldId");
                _FieldId = StructuralObject.SetValidValue(value, "FieldId");
                ReportPropertyChanged("FieldId");
                OnFieldIdChanged();
            }
        }
        private global::System.Int32 _FieldId;
        partial void OnFieldIdChanging(global::System.Int32 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, false, "FieldName");
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="StageBitz.Data", Name="GetInventorySearchItems_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetInventorySearchItems_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetInventorySearchItems_Result object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isManuallyAdded">Initial value of the IsManuallyAdded property.</param>
        /// <param name="isHidden">Initial value of the IsHidden property.</param>
        /// <param name="visibilityLevelCodeId">Initial value of the VisibilityLevelCodeId property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="itemTypeName">Initial value of the ItemTypeName property.</param>
        public static GetInventorySearchItems_Result CreateGetInventorySearchItems_Result(global::System.Int32 itemId, global::System.Boolean isActive, global::System.Boolean isManuallyAdded, global::System.Boolean isHidden, global::System.Int32 visibilityLevelCodeId, global::System.String companyName, global::System.String itemTypeName)
        {
            GetInventorySearchItems_Result getInventorySearchItems_Result = new GetInventorySearchItems_Result();
            getInventorySearchItems_Result.ItemId = itemId;
            getInventorySearchItems_Result.IsActive = isActive;
            getInventorySearchItems_Result.IsManuallyAdded = isManuallyAdded;
            getInventorySearchItems_Result.IsHidden = isHidden;
            getInventorySearchItems_Result.VisibilityLevelCodeId = visibilityLevelCodeId;
            getInventorySearchItems_Result.CompanyName = companyName;
            getInventorySearchItems_Result.ItemTypeName = itemTypeName;
            return getInventorySearchItems_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentMediaId
        {
            get
            {
                return _DocumentMediaId;
            }
            set
            {
                OnDocumentMediaIdChanging(value);
                ReportPropertyChanging("DocumentMediaId");
                _DocumentMediaId = StructuralObject.SetValidValue(value, "DocumentMediaId");
                ReportPropertyChanged("DocumentMediaId");
                OnDocumentMediaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentMediaId;
        partial void OnDocumentMediaIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value, "ItemTypeId");
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemTypeId;
        partial void OnItemTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsManuallyAdded
        {
            get
            {
                return _IsManuallyAdded;
            }
            set
            {
                OnIsManuallyAddedChanging(value);
                ReportPropertyChanging("IsManuallyAdded");
                _IsManuallyAdded = StructuralObject.SetValidValue(value, "IsManuallyAdded");
                ReportPropertyChanged("IsManuallyAdded");
                OnIsManuallyAddedChanged();
            }
        }
        private global::System.Boolean _IsManuallyAdded;
        partial void OnIsManuallyAddedChanging(global::System.Boolean value);
        partial void OnIsManuallyAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHidden
        {
            get
            {
                return _IsHidden;
            }
            set
            {
                OnIsHiddenChanging(value);
                ReportPropertyChanging("IsHidden");
                _IsHidden = StructuralObject.SetValidValue(value, "IsHidden");
                ReportPropertyChanged("IsHidden");
                OnIsHiddenChanged();
            }
        }
        private global::System.Boolean _IsHidden;
        partial void OnIsHiddenChanging(global::System.Boolean value);
        partial void OnIsHiddenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedFor
        {
            get
            {
                return _CreatedFor;
            }
            set
            {
                OnCreatedForChanging(value);
                ReportPropertyChanging("CreatedFor");
                _CreatedFor = StructuralObject.SetValidValue(value, true, "CreatedFor");
                ReportPropertyChanged("CreatedFor");
                OnCreatedForChanged();
            }
        }
        private global::System.String _CreatedFor;
        partial void OnCreatedForChanging(global::System.String value);
        partial void OnCreatedForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value, "LocationId");
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VisibilityLevelCodeId
        {
            get
            {
                return _VisibilityLevelCodeId;
            }
            set
            {
                OnVisibilityLevelCodeIdChanging(value);
                ReportPropertyChanging("VisibilityLevelCodeId");
                _VisibilityLevelCodeId = StructuralObject.SetValidValue(value, "VisibilityLevelCodeId");
                ReportPropertyChanged("VisibilityLevelCodeId");
                OnVisibilityLevelCodeIdChanged();
            }
        }
        private global::System.Int32 _VisibilityLevelCodeId;
        partial void OnVisibilityLevelCodeIdChanging(global::System.Int32 value);
        partial void OnVisibilityLevelCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemTypeName
        {
            get
            {
                return _ItemTypeName;
            }
            set
            {
                OnItemTypeNameChanging(value);
                ReportPropertyChanging("ItemTypeName");
                _ItemTypeName = StructuralObject.SetValidValue(value, false, "ItemTypeName");
                ReportPropertyChanged("ItemTypeName");
                OnItemTypeNameChanged();
            }
        }
        private global::System.String _ItemTypeName;
        partial void OnItemTypeNameChanging(global::System.String value);
        partial void OnItemTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AvailableQuantity
        {
            get
            {
                return _AvailableQuantity;
            }
            set
            {
                OnAvailableQuantityChanging(value);
                ReportPropertyChanging("AvailableQuantity");
                _AvailableQuantity = StructuralObject.SetValidValue(value, "AvailableQuantity");
                ReportPropertyChanged("AvailableQuantity");
                OnAvailableQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _AvailableQuantity;
        partial void OnAvailableQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnAvailableQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocatinPath
        {
            get
            {
                return _LocatinPath;
            }
            set
            {
                OnLocatinPathChanging(value);
                ReportPropertyChanging("LocatinPath");
                _LocatinPath = StructuralObject.SetValidValue(value, true, "LocatinPath");
                ReportPropertyChanged("LocatinPath");
                OnLocatinPathChanged();
            }
        }
        private global::System.String _LocatinPath;
        partial void OnLocatinPathChanging(global::System.String value);
        partial void OnLocatinPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WatchListItemId
        {
            get
            {
                return _WatchListItemId;
            }
            set
            {
                OnWatchListItemIdChanging(value);
                ReportPropertyChanging("WatchListItemId");
                _WatchListItemId = StructuralObject.SetValidValue(value, "WatchListItemId");
                ReportPropertyChanged("WatchListItemId");
                OnWatchListItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WatchListItemId;
        partial void OnWatchListItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnWatchListItemIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="StageBitz.Data", Name="GetInventorySearchItems1_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetInventorySearchItems1_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetInventorySearchItems1_Result object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isManuallyAdded">Initial value of the IsManuallyAdded property.</param>
        /// <param name="isHidden">Initial value of the IsHidden property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="itemTypeName">Initial value of the ItemTypeName property.</param>
        public static GetInventorySearchItems1_Result CreateGetInventorySearchItems1_Result(global::System.Int32 itemId, global::System.Boolean isActive, global::System.Boolean isManuallyAdded, global::System.Boolean isHidden, global::System.String companyName, global::System.String itemTypeName)
        {
            GetInventorySearchItems1_Result getInventorySearchItems1_Result = new GetInventorySearchItems1_Result();
            getInventorySearchItems1_Result.ItemId = itemId;
            getInventorySearchItems1_Result.IsActive = isActive;
            getInventorySearchItems1_Result.IsManuallyAdded = isManuallyAdded;
            getInventorySearchItems1_Result.IsHidden = isHidden;
            getInventorySearchItems1_Result.CompanyName = companyName;
            getInventorySearchItems1_Result.ItemTypeName = itemTypeName;
            return getInventorySearchItems1_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentMediaId
        {
            get
            {
                return _DocumentMediaId;
            }
            set
            {
                OnDocumentMediaIdChanging(value);
                ReportPropertyChanging("DocumentMediaId");
                _DocumentMediaId = StructuralObject.SetValidValue(value, "DocumentMediaId");
                ReportPropertyChanged("DocumentMediaId");
                OnDocumentMediaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentMediaId;
        partial void OnDocumentMediaIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value, "CreatedByUserId");
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value, "LastUpdatedByUserId");
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value, "ItemTypeId");
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemTypeId;
        partial void OnItemTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsManuallyAdded
        {
            get
            {
                return _IsManuallyAdded;
            }
            set
            {
                OnIsManuallyAddedChanging(value);
                ReportPropertyChanging("IsManuallyAdded");
                _IsManuallyAdded = StructuralObject.SetValidValue(value, "IsManuallyAdded");
                ReportPropertyChanged("IsManuallyAdded");
                OnIsManuallyAddedChanged();
            }
        }
        private global::System.Boolean _IsManuallyAdded;
        partial void OnIsManuallyAddedChanging(global::System.Boolean value);
        partial void OnIsManuallyAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHidden
        {
            get
            {
                return _IsHidden;
            }
            set
            {
                OnIsHiddenChanging(value);
                ReportPropertyChanging("IsHidden");
                _IsHidden = StructuralObject.SetValidValue(value, "IsHidden");
                ReportPropertyChanged("IsHidden");
                OnIsHiddenChanged();
            }
        }
        private global::System.Boolean _IsHidden;
        partial void OnIsHiddenChanging(global::System.Boolean value);
        partial void OnIsHiddenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedFor
        {
            get
            {
                return _CreatedFor;
            }
            set
            {
                OnCreatedForChanging(value);
                ReportPropertyChanging("CreatedFor");
                _CreatedFor = StructuralObject.SetValidValue(value, true, "CreatedFor");
                ReportPropertyChanged("CreatedFor");
                OnCreatedForChanged();
            }
        }
        private global::System.String _CreatedFor;
        partial void OnCreatedForChanging(global::System.String value);
        partial void OnCreatedForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value, "LocationId");
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VisibilityLevelCodeId
        {
            get
            {
                return _VisibilityLevelCodeId;
            }
            set
            {
                OnVisibilityLevelCodeIdChanging(value);
                ReportPropertyChanging("VisibilityLevelCodeId");
                _VisibilityLevelCodeId = StructuralObject.SetValidValue(value, "VisibilityLevelCodeId");
                ReportPropertyChanged("VisibilityLevelCodeId");
                OnVisibilityLevelCodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VisibilityLevelCodeId;
        partial void OnVisibilityLevelCodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnVisibilityLevelCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemTypeName
        {
            get
            {
                return _ItemTypeName;
            }
            set
            {
                OnItemTypeNameChanging(value);
                ReportPropertyChanging("ItemTypeName");
                _ItemTypeName = StructuralObject.SetValidValue(value, false, "ItemTypeName");
                ReportPropertyChanged("ItemTypeName");
                OnItemTypeNameChanged();
            }
        }
        private global::System.String _ItemTypeName;
        partial void OnItemTypeNameChanging(global::System.String value);
        partial void OnItemTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AvailableQuantity
        {
            get
            {
                return _AvailableQuantity;
            }
            set
            {
                OnAvailableQuantityChanging(value);
                ReportPropertyChanging("AvailableQuantity");
                _AvailableQuantity = StructuralObject.SetValidValue(value, "AvailableQuantity");
                ReportPropertyChanged("AvailableQuantity");
                OnAvailableQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _AvailableQuantity;
        partial void OnAvailableQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnAvailableQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocatinPath
        {
            get
            {
                return _LocatinPath;
            }
            set
            {
                OnLocatinPathChanging(value);
                ReportPropertyChanging("LocatinPath");
                _LocatinPath = StructuralObject.SetValidValue(value, true, "LocatinPath");
                ReportPropertyChanged("LocatinPath");
                OnLocatinPathChanged();
            }
        }
        private global::System.String _LocatinPath;
        partial void OnLocatinPathChanging(global::System.String value);
        partial void OnLocatinPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WatchListItemId
        {
            get
            {
                return _WatchListItemId;
            }
            set
            {
                OnWatchListItemIdChanging(value);
                ReportPropertyChanging("WatchListItemId");
                _WatchListItemId = StructuralObject.SetValidValue(value, "WatchListItemId");
                ReportPropertyChanged("WatchListItemId");
                OnWatchListItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WatchListItemId;
        partial void OnWatchListItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnWatchListItemIdChanged();

        #endregion

    }

    #endregion

}
